// search_parameters.go
package main

type SearchParameter struct {
	Code       string
	Expression string
}

var searchParamsByResourceType = map[string][]SearchParameter{    "Account": {      {
        Code: "_id",
        Expression: "Account.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Account.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Account.meta.profile",
      },      {
        Code: "_security",
        Expression: "Account.meta.security",
      },      {
        Code: "_source",
        Expression: "Account.meta.source",
      },      {
        Code: "_tag",
        Expression: "Account.meta.tag",
      },      {
        Code: "_id",
        Expression: "Account.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Account.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Account.meta.profile",
      },      {
        Code: "_security",
        Expression: "Account.meta.security",
      },      {
        Code: "_source",
        Expression: "Account.meta.source",
      },      {
        Code: "_tag",
        Expression: "Account.meta.tag",
      },      {
        Code: "identifier",
        Expression: "Account.identifier",
      },      {
        Code: "name",
        Expression: "Account.name",
      },      {
        Code: "owner",
        Expression: "Account.owner",
      },      {
        Code: "patient",
        Expression: "Account.subject.where(resolve() is Patient)",
      },      {
        Code: "period",
        Expression: "Account.servicePeriod",
      },      {
        Code: "status",
        Expression: "Account.status",
      },      {
        Code: "subject",
        Expression: "Account.subject",
      },      {
        Code: "type",
        Expression: "Account.type",
      },    },    "ActivityDefinition": {      {
        Code: "_id",
        Expression: "ActivityDefinition.id",
      },      {
        Code: "_lastUpdated",
        Expression: "ActivityDefinition.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "ActivityDefinition.meta.profile",
      },      {
        Code: "_security",
        Expression: "ActivityDefinition.meta.security",
      },      {
        Code: "_source",
        Expression: "ActivityDefinition.meta.source",
      },      {
        Code: "_tag",
        Expression: "ActivityDefinition.meta.tag",
      },      {
        Code: "_id",
        Expression: "ActivityDefinition.id",
      },      {
        Code: "_lastUpdated",
        Expression: "ActivityDefinition.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "ActivityDefinition.meta.profile",
      },      {
        Code: "_security",
        Expression: "ActivityDefinition.meta.security",
      },      {
        Code: "_source",
        Expression: "ActivityDefinition.meta.source",
      },      {
        Code: "_tag",
        Expression: "ActivityDefinition.meta.tag",
      },      {
        Code: "composed-of",
        Expression: "ActivityDefinition.relatedArtifact.where(type='composed-of').resource",
      },      {
        Code: "context",
        Expression: "(ActivityDefinition.useContext.value as CodeableConcept)",
      },      {
        Code: "context-quantity",
        Expression: "",
      },      {
        Code: "context-type",
        Expression: "ActivityDefinition.useContext.code",
      },      {
        Code: "date",
        Expression: "ActivityDefinition.date",
      },      {
        Code: "depends-on",
        Expression: "",
      },      {
        Code: "derived-from",
        Expression: "ActivityDefinition.relatedArtifact.where(type='derived-from').resource",
      },      {
        Code: "description",
        Expression: "ActivityDefinition.description",
      },      {
        Code: "effective",
        Expression: "ActivityDefinition.effectivePeriod",
      },      {
        Code: "identifier",
        Expression: "ActivityDefinition.identifier",
      },      {
        Code: "jurisdiction",
        Expression: "ActivityDefinition.jurisdiction",
      },      {
        Code: "name",
        Expression: "ActivityDefinition.name",
      },      {
        Code: "predecessor",
        Expression: "ActivityDefinition.relatedArtifact.where(type='predecessor').resource",
      },      {
        Code: "publisher",
        Expression: "ActivityDefinition.publisher",
      },      {
        Code: "status",
        Expression: "ActivityDefinition.status",
      },      {
        Code: "successor",
        Expression: "ActivityDefinition.relatedArtifact.where(type='successor').resource",
      },      {
        Code: "title",
        Expression: "ActivityDefinition.title",
      },      {
        Code: "topic",
        Expression: "ActivityDefinition.topic",
      },      {
        Code: "url",
        Expression: "ActivityDefinition.url",
      },      {
        Code: "version",
        Expression: "ActivityDefinition.version",
      },      {
        Code: "context-type-quantity",
        Expression: "ActivityDefinition.useContext",
      },      {
        Code: "context-type-value",
        Expression: "ActivityDefinition.useContext",
      },    },    "AdverseEvent": {      {
        Code: "_id",
        Expression: "AdverseEvent.id",
      },      {
        Code: "_lastUpdated",
        Expression: "AdverseEvent.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "AdverseEvent.meta.profile",
      },      {
        Code: "_security",
        Expression: "AdverseEvent.meta.security",
      },      {
        Code: "_source",
        Expression: "AdverseEvent.meta.source",
      },      {
        Code: "_tag",
        Expression: "AdverseEvent.meta.tag",
      },      {
        Code: "_id",
        Expression: "AdverseEvent.id",
      },      {
        Code: "_lastUpdated",
        Expression: "AdverseEvent.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "AdverseEvent.meta.profile",
      },      {
        Code: "_security",
        Expression: "AdverseEvent.meta.security",
      },      {
        Code: "_source",
        Expression: "AdverseEvent.meta.source",
      },      {
        Code: "_tag",
        Expression: "AdverseEvent.meta.tag",
      },      {
        Code: "actuality",
        Expression: "AdverseEvent.actuality",
      },      {
        Code: "category",
        Expression: "AdverseEvent.category",
      },      {
        Code: "date",
        Expression: "AdverseEvent.date",
      },      {
        Code: "event",
        Expression: "AdverseEvent.event",
      },      {
        Code: "location",
        Expression: "AdverseEvent.location",
      },      {
        Code: "recorder",
        Expression: "AdverseEvent.recorder",
      },      {
        Code: "resultingcondition",
        Expression: "AdverseEvent.resultingCondition",
      },      {
        Code: "seriousness",
        Expression: "AdverseEvent.seriousness",
      },      {
        Code: "severity",
        Expression: "AdverseEvent.severity",
      },      {
        Code: "study",
        Expression: "AdverseEvent.study",
      },      {
        Code: "subject",
        Expression: "AdverseEvent.subject",
      },      {
        Code: "substance",
        Expression: "AdverseEvent.suspectEntity.instance",
      },    },    "AllergyIntolerance": {      {
        Code: "_id",
        Expression: "AllergyIntolerance.id",
      },      {
        Code: "_lastUpdated",
        Expression: "AllergyIntolerance.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "AllergyIntolerance.meta.profile",
      },      {
        Code: "_security",
        Expression: "AllergyIntolerance.meta.security",
      },      {
        Code: "_source",
        Expression: "AllergyIntolerance.meta.source",
      },      {
        Code: "_tag",
        Expression: "AllergyIntolerance.meta.tag",
      },      {
        Code: "_id",
        Expression: "AllergyIntolerance.id",
      },      {
        Code: "_lastUpdated",
        Expression: "AllergyIntolerance.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "AllergyIntolerance.meta.profile",
      },      {
        Code: "_security",
        Expression: "AllergyIntolerance.meta.security",
      },      {
        Code: "_source",
        Expression: "AllergyIntolerance.meta.source",
      },      {
        Code: "_tag",
        Expression: "AllergyIntolerance.meta.tag",
      },      {
        Code: "asserter",
        Expression: "AllergyIntolerance.asserter",
      },      {
        Code: "category",
        Expression: "AllergyIntolerance.category",
      },      {
        Code: "clinical-status",
        Expression: "AllergyIntolerance.clinicalStatus",
      },      {
        Code: "code",
        Expression: "",
      },      {
        Code: "criticality",
        Expression: "AllergyIntolerance.criticality",
      },      {
        Code: "date",
        Expression: "",
      },      {
        Code: "identifier",
        Expression: "",
      },      {
        Code: "last-date",
        Expression: "AllergyIntolerance.lastOccurrence",
      },      {
        Code: "manifestation",
        Expression: "AllergyIntolerance.reaction.manifestation",
      },      {
        Code: "onset",
        Expression: "AllergyIntolerance.reaction.onset",
      },      {
        Code: "patient",
        Expression: "",
      },      {
        Code: "recorder",
        Expression: "AllergyIntolerance.recorder",
      },      {
        Code: "route",
        Expression: "AllergyIntolerance.reaction.exposureRoute",
      },      {
        Code: "severity",
        Expression: "AllergyIntolerance.reaction.severity",
      },      {
        Code: "type",
        Expression: "",
      },      {
        Code: "verification-status",
        Expression: "AllergyIntolerance.verificationStatus",
      },    },    "Condition": {      {
        Code: "_id",
        Expression: "Condition.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Condition.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Condition.meta.profile",
      },      {
        Code: "_security",
        Expression: "Condition.meta.security",
      },      {
        Code: "_source",
        Expression: "Condition.meta.source",
      },      {
        Code: "_tag",
        Expression: "Condition.meta.tag",
      },      {
        Code: "_id",
        Expression: "Condition.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Condition.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Condition.meta.profile",
      },      {
        Code: "_security",
        Expression: "Condition.meta.security",
      },      {
        Code: "_source",
        Expression: "Condition.meta.source",
      },      {
        Code: "_tag",
        Expression: "Condition.meta.tag",
      },      {
        Code: "code",
        Expression: "",
      },      {
        Code: "identifier",
        Expression: "",
      },      {
        Code: "patient",
        Expression: "",
      },      {
        Code: "abatement-age",
        Expression: "",
      },      {
        Code: "abatement-date",
        Expression: "",
      },      {
        Code: "abatement-string",
        Expression: "Condition.abatement.as(string)",
      },      {
        Code: "asserter",
        Expression: "Condition.asserter",
      },      {
        Code: "body-site",
        Expression: "Condition.bodySite",
      },      {
        Code: "category",
        Expression: "Condition.category",
      },      {
        Code: "clinical-status",
        Expression: "Condition.clinicalStatus",
      },      {
        Code: "encounter",
        Expression: "Condition.encounter",
      },      {
        Code: "evidence",
        Expression: "Condition.evidence.code",
      },      {
        Code: "evidence-detail",
        Expression: "Condition.evidence.detail",
      },      {
        Code: "onset-age",
        Expression: "",
      },      {
        Code: "onset-date",
        Expression: "",
      },      {
        Code: "onset-info",
        Expression: "Condition.onset.as(string)",
      },      {
        Code: "recorded-date",
        Expression: "Condition.recordedDate",
      },      {
        Code: "severity",
        Expression: "Condition.severity",
      },      {
        Code: "stage",
        Expression: "Condition.stage.summary",
      },      {
        Code: "subject",
        Expression: "Condition.subject",
      },      {
        Code: "verification-status",
        Expression: "Condition.verificationStatus",
      },    },    "DeviceRequest": {      {
        Code: "_id",
        Expression: "DeviceRequest.id",
      },      {
        Code: "_lastUpdated",
        Expression: "DeviceRequest.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "DeviceRequest.meta.profile",
      },      {
        Code: "_security",
        Expression: "DeviceRequest.meta.security",
      },      {
        Code: "_source",
        Expression: "DeviceRequest.meta.source",
      },      {
        Code: "_tag",
        Expression: "DeviceRequest.meta.tag",
      },      {
        Code: "_id",
        Expression: "DeviceRequest.id",
      },      {
        Code: "_lastUpdated",
        Expression: "DeviceRequest.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "DeviceRequest.meta.profile",
      },      {
        Code: "_security",
        Expression: "DeviceRequest.meta.security",
      },      {
        Code: "_source",
        Expression: "DeviceRequest.meta.source",
      },      {
        Code: "_tag",
        Expression: "DeviceRequest.meta.tag",
      },      {
        Code: "code",
        Expression: "",
      },      {
        Code: "identifier",
        Expression: "",
      },      {
        Code: "patient",
        Expression: "",
      },      {
        Code: "encounter",
        Expression: "",
      },      {
        Code: "authored-on",
        Expression: "DeviceRequest.authoredOn",
      },      {
        Code: "based-on",
        Expression: "DeviceRequest.basedOn",
      },      {
        Code: "device",
        Expression: "(DeviceRequest.code as Reference)",
      },      {
        Code: "event-date",
        Expression: "",
      },      {
        Code: "group-identifier",
        Expression: "DeviceRequest.groupIdentifier",
      },      {
        Code: "instantiates-canonical",
        Expression: "DeviceRequest.instantiatesCanonical",
      },      {
        Code: "instantiates-uri",
        Expression: "DeviceRequest.instantiatesUri",
      },      {
        Code: "insurance",
        Expression: "DeviceRequest.insurance",
      },      {
        Code: "intent",
        Expression: "DeviceRequest.intent",
      },      {
        Code: "performer",
        Expression: "DeviceRequest.performer",
      },      {
        Code: "prior-request",
        Expression: "DeviceRequest.priorRequest",
      },      {
        Code: "requester",
        Expression: "DeviceRequest.requester",
      },      {
        Code: "status",
        Expression: "DeviceRequest.status",
      },      {
        Code: "subject",
        Expression: "DeviceRequest.subject",
      },    },    "DiagnosticReport": {      {
        Code: "_id",
        Expression: "DiagnosticReport.id",
      },      {
        Code: "_lastUpdated",
        Expression: "DiagnosticReport.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "DiagnosticReport.meta.profile",
      },      {
        Code: "_security",
        Expression: "DiagnosticReport.meta.security",
      },      {
        Code: "_source",
        Expression: "DiagnosticReport.meta.source",
      },      {
        Code: "_tag",
        Expression: "DiagnosticReport.meta.tag",
      },      {
        Code: "_id",
        Expression: "DiagnosticReport.id",
      },      {
        Code: "_lastUpdated",
        Expression: "DiagnosticReport.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "DiagnosticReport.meta.profile",
      },      {
        Code: "_security",
        Expression: "DiagnosticReport.meta.security",
      },      {
        Code: "_source",
        Expression: "DiagnosticReport.meta.source",
      },      {
        Code: "_tag",
        Expression: "DiagnosticReport.meta.tag",
      },      {
        Code: "code",
        Expression: "",
      },      {
        Code: "date",
        Expression: "",
      },      {
        Code: "identifier",
        Expression: "",
      },      {
        Code: "patient",
        Expression: "",
      },      {
        Code: "encounter",
        Expression: "",
      },      {
        Code: "based-on",
        Expression: "DiagnosticReport.basedOn",
      },      {
        Code: "category",
        Expression: "DiagnosticReport.category",
      },      {
        Code: "conclusion",
        Expression: "DiagnosticReport.conclusionCode",
      },      {
        Code: "issued",
        Expression: "DiagnosticReport.issued",
      },      {
        Code: "media",
        Expression: "DiagnosticReport.media.link",
      },      {
        Code: "performer",
        Expression: "DiagnosticReport.performer",
      },      {
        Code: "result",
        Expression: "DiagnosticReport.result",
      },      {
        Code: "results-interpreter",
        Expression: "DiagnosticReport.resultsInterpreter",
      },      {
        Code: "specimen",
        Expression: "DiagnosticReport.specimen",
      },      {
        Code: "status",
        Expression: "DiagnosticReport.status",
      },      {
        Code: "subject",
        Expression: "DiagnosticReport.subject",
      },    },    "FamilyMemberHistory": {      {
        Code: "_id",
        Expression: "FamilyMemberHistory.id",
      },      {
        Code: "_lastUpdated",
        Expression: "FamilyMemberHistory.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "FamilyMemberHistory.meta.profile",
      },      {
        Code: "_security",
        Expression: "FamilyMemberHistory.meta.security",
      },      {
        Code: "_source",
        Expression: "FamilyMemberHistory.meta.source",
      },      {
        Code: "_tag",
        Expression: "FamilyMemberHistory.meta.tag",
      },      {
        Code: "_id",
        Expression: "FamilyMemberHistory.id",
      },      {
        Code: "_lastUpdated",
        Expression: "FamilyMemberHistory.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "FamilyMemberHistory.meta.profile",
      },      {
        Code: "_security",
        Expression: "FamilyMemberHistory.meta.security",
      },      {
        Code: "_source",
        Expression: "FamilyMemberHistory.meta.source",
      },      {
        Code: "_tag",
        Expression: "FamilyMemberHistory.meta.tag",
      },      {
        Code: "code",
        Expression: "",
      },      {
        Code: "date",
        Expression: "",
      },      {
        Code: "identifier",
        Expression: "",
      },      {
        Code: "patient",
        Expression: "",
      },      {
        Code: "instantiates-canonical",
        Expression: "FamilyMemberHistory.instantiatesCanonical",
      },      {
        Code: "instantiates-uri",
        Expression: "FamilyMemberHistory.instantiatesUri",
      },      {
        Code: "relationship",
        Expression: "FamilyMemberHistory.relationship",
      },      {
        Code: "sex",
        Expression: "FamilyMemberHistory.sex",
      },      {
        Code: "status",
        Expression: "FamilyMemberHistory.status",
      },    },    "List": {      {
        Code: "_id",
        Expression: "List.id",
      },      {
        Code: "_lastUpdated",
        Expression: "List.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "List.meta.profile",
      },      {
        Code: "_security",
        Expression: "List.meta.security",
      },      {
        Code: "_source",
        Expression: "List.meta.source",
      },      {
        Code: "_tag",
        Expression: "List.meta.tag",
      },      {
        Code: "_id",
        Expression: "List.id",
      },      {
        Code: "_lastUpdated",
        Expression: "List.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "List.meta.profile",
      },      {
        Code: "_security",
        Expression: "List.meta.security",
      },      {
        Code: "_source",
        Expression: "List.meta.source",
      },      {
        Code: "_tag",
        Expression: "List.meta.tag",
      },      {
        Code: "code",
        Expression: "",
      },      {
        Code: "date",
        Expression: "",
      },      {
        Code: "identifier",
        Expression: "",
      },      {
        Code: "patient",
        Expression: "",
      },      {
        Code: "encounter",
        Expression: "",
      },      {
        Code: "empty-reason",
        Expression: "List.emptyReason",
      },      {
        Code: "item",
        Expression: "List.entry.item",
      },      {
        Code: "notes",
        Expression: "List.note.text",
      },      {
        Code: "source",
        Expression: "List.source",
      },      {
        Code: "status",
        Expression: "List.status",
      },      {
        Code: "subject",
        Expression: "List.subject",
      },      {
        Code: "title",
        Expression: "List.title",
      },    },    "Medication": {      {
        Code: "_id",
        Expression: "Medication.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Medication.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Medication.meta.profile",
      },      {
        Code: "_security",
        Expression: "Medication.meta.security",
      },      {
        Code: "_source",
        Expression: "Medication.meta.source",
      },      {
        Code: "_tag",
        Expression: "Medication.meta.tag",
      },      {
        Code: "_id",
        Expression: "Medication.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Medication.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Medication.meta.profile",
      },      {
        Code: "_security",
        Expression: "Medication.meta.security",
      },      {
        Code: "_source",
        Expression: "Medication.meta.source",
      },      {
        Code: "_tag",
        Expression: "Medication.meta.tag",
      },      {
        Code: "code",
        Expression: "",
      },      {
        Code: "expiration-date",
        Expression: "Medication.batch.expirationDate",
      },      {
        Code: "form",
        Expression: "Medication.form",
      },      {
        Code: "identifier",
        Expression: "Medication.identifier",
      },      {
        Code: "ingredient",
        Expression: "(Medication.ingredient.item as Reference)",
      },      {
        Code: "ingredient-code",
        Expression: "(Medication.ingredient.item as CodeableConcept)",
      },      {
        Code: "lot-number",
        Expression: "Medication.batch.lotNumber",
      },      {
        Code: "manufacturer",
        Expression: "Medication.manufacturer",
      },      {
        Code: "status",
        Expression: "Medication.status",
      },    },    "MedicationAdministration": {      {
        Code: "_id",
        Expression: "MedicationAdministration.id",
      },      {
        Code: "_lastUpdated",
        Expression: "MedicationAdministration.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "MedicationAdministration.meta.profile",
      },      {
        Code: "_security",
        Expression: "MedicationAdministration.meta.security",
      },      {
        Code: "_source",
        Expression: "MedicationAdministration.meta.source",
      },      {
        Code: "_tag",
        Expression: "MedicationAdministration.meta.tag",
      },      {
        Code: "_id",
        Expression: "MedicationAdministration.id",
      },      {
        Code: "_lastUpdated",
        Expression: "MedicationAdministration.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "MedicationAdministration.meta.profile",
      },      {
        Code: "_security",
        Expression: "MedicationAdministration.meta.security",
      },      {
        Code: "_source",
        Expression: "MedicationAdministration.meta.source",
      },      {
        Code: "_tag",
        Expression: "MedicationAdministration.meta.tag",
      },      {
        Code: "code",
        Expression: "",
      },      {
        Code: "identifier",
        Expression: "",
      },      {
        Code: "patient",
        Expression: "",
      },      {
        Code: "context",
        Expression: "MedicationAdministration.context",
      },      {
        Code: "device",
        Expression: "MedicationAdministration.device",
      },      {
        Code: "effective-time",
        Expression: "MedicationAdministration.effective",
      },      {
        Code: "medication",
        Expression: "",
      },      {
        Code: "performer",
        Expression: "MedicationAdministration.performer.actor",
      },      {
        Code: "reason-given",
        Expression: "MedicationAdministration.reasonCode",
      },      {
        Code: "reason-not-given",
        Expression: "MedicationAdministration.statusReason",
      },      {
        Code: "request",
        Expression: "MedicationAdministration.request",
      },      {
        Code: "status",
        Expression: "",
      },      {
        Code: "subject",
        Expression: "MedicationAdministration.subject",
      },    },    "MedicationDispense": {      {
        Code: "_id",
        Expression: "MedicationDispense.id",
      },      {
        Code: "_lastUpdated",
        Expression: "MedicationDispense.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "MedicationDispense.meta.profile",
      },      {
        Code: "_security",
        Expression: "MedicationDispense.meta.security",
      },      {
        Code: "_source",
        Expression: "MedicationDispense.meta.source",
      },      {
        Code: "_tag",
        Expression: "MedicationDispense.meta.tag",
      },      {
        Code: "_id",
        Expression: "MedicationDispense.id",
      },      {
        Code: "_lastUpdated",
        Expression: "MedicationDispense.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "MedicationDispense.meta.profile",
      },      {
        Code: "_security",
        Expression: "MedicationDispense.meta.security",
      },      {
        Code: "_source",
        Expression: "MedicationDispense.meta.source",
      },      {
        Code: "_tag",
        Expression: "MedicationDispense.meta.tag",
      },      {
        Code: "code",
        Expression: "",
      },      {
        Code: "identifier",
        Expression: "",
      },      {
        Code: "patient",
        Expression: "",
      },      {
        Code: "medication",
        Expression: "",
      },      {
        Code: "status",
        Expression: "",
      },      {
        Code: "context",
        Expression: "MedicationDispense.context",
      },      {
        Code: "destination",
        Expression: "MedicationDispense.destination",
      },      {
        Code: "performer",
        Expression: "MedicationDispense.performer.actor",
      },      {
        Code: "prescription",
        Expression: "MedicationDispense.authorizingPrescription",
      },      {
        Code: "receiver",
        Expression: "MedicationDispense.receiver",
      },      {
        Code: "responsibleparty",
        Expression: "MedicationDispense.substitution.responsibleParty",
      },      {
        Code: "subject",
        Expression: "MedicationDispense.subject",
      },      {
        Code: "type",
        Expression: "MedicationDispense.type",
      },      {
        Code: "whenhandedover",
        Expression: "MedicationDispense.whenHandedOver",
      },      {
        Code: "whenprepared",
        Expression: "MedicationDispense.whenPrepared",
      },    },    "MedicationRequest": {      {
        Code: "_id",
        Expression: "MedicationRequest.id",
      },      {
        Code: "_lastUpdated",
        Expression: "MedicationRequest.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "MedicationRequest.meta.profile",
      },      {
        Code: "_security",
        Expression: "MedicationRequest.meta.security",
      },      {
        Code: "_source",
        Expression: "MedicationRequest.meta.source",
      },      {
        Code: "_tag",
        Expression: "MedicationRequest.meta.tag",
      },      {
        Code: "_id",
        Expression: "MedicationRequest.id",
      },      {
        Code: "_lastUpdated",
        Expression: "MedicationRequest.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "MedicationRequest.meta.profile",
      },      {
        Code: "_security",
        Expression: "MedicationRequest.meta.security",
      },      {
        Code: "_source",
        Expression: "MedicationRequest.meta.source",
      },      {
        Code: "_tag",
        Expression: "MedicationRequest.meta.tag",
      },      {
        Code: "code",
        Expression: "",
      },      {
        Code: "identifier",
        Expression: "",
      },      {
        Code: "patient",
        Expression: "",
      },      {
        Code: "medication",
        Expression: "",
      },      {
        Code: "status",
        Expression: "",
      },      {
        Code: "authoredon",
        Expression: "MedicationRequest.authoredOn",
      },      {
        Code: "category",
        Expression: "MedicationRequest.category",
      },      {
        Code: "date",
        Expression: "MedicationRequest.dosageInstruction.timing.event",
      },      {
        Code: "encounter",
        Expression: "MedicationRequest.encounter",
      },      {
        Code: "intended-dispenser",
        Expression: "MedicationRequest.dispenseRequest.performer",
      },      {
        Code: "intended-performer",
        Expression: "MedicationRequest.performer",
      },      {
        Code: "intended-performertype",
        Expression: "MedicationRequest.performerType",
      },      {
        Code: "intent",
        Expression: "MedicationRequest.intent",
      },      {
        Code: "priority",
        Expression: "MedicationRequest.priority",
      },      {
        Code: "requester",
        Expression: "MedicationRequest.requester",
      },      {
        Code: "subject",
        Expression: "MedicationRequest.subject",
      },    },    "MedicationStatement": {      {
        Code: "_id",
        Expression: "MedicationStatement.id",
      },      {
        Code: "_lastUpdated",
        Expression: "MedicationStatement.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "MedicationStatement.meta.profile",
      },      {
        Code: "_security",
        Expression: "MedicationStatement.meta.security",
      },      {
        Code: "_source",
        Expression: "MedicationStatement.meta.source",
      },      {
        Code: "_tag",
        Expression: "MedicationStatement.meta.tag",
      },      {
        Code: "_id",
        Expression: "MedicationStatement.id",
      },      {
        Code: "_lastUpdated",
        Expression: "MedicationStatement.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "MedicationStatement.meta.profile",
      },      {
        Code: "_security",
        Expression: "MedicationStatement.meta.security",
      },      {
        Code: "_source",
        Expression: "MedicationStatement.meta.source",
      },      {
        Code: "_tag",
        Expression: "MedicationStatement.meta.tag",
      },      {
        Code: "code",
        Expression: "",
      },      {
        Code: "identifier",
        Expression: "",
      },      {
        Code: "patient",
        Expression: "",
      },      {
        Code: "medication",
        Expression: "",
      },      {
        Code: "status",
        Expression: "",
      },      {
        Code: "category",
        Expression: "MedicationStatement.category",
      },      {
        Code: "context",
        Expression: "MedicationStatement.context",
      },      {
        Code: "effective",
        Expression: "MedicationStatement.effective",
      },      {
        Code: "part-of",
        Expression: "MedicationStatement.partOf",
      },      {
        Code: "source",
        Expression: "MedicationStatement.informationSource",
      },      {
        Code: "subject",
        Expression: "MedicationStatement.subject",
      },    },    "Observation": {      {
        Code: "_id",
        Expression: "Observation.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Observation.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Observation.meta.profile",
      },      {
        Code: "_security",
        Expression: "Observation.meta.security",
      },      {
        Code: "_source",
        Expression: "Observation.meta.source",
      },      {
        Code: "_tag",
        Expression: "Observation.meta.tag",
      },      {
        Code: "_id",
        Expression: "Observation.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Observation.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Observation.meta.profile",
      },      {
        Code: "_security",
        Expression: "Observation.meta.security",
      },      {
        Code: "_source",
        Expression: "Observation.meta.source",
      },      {
        Code: "_tag",
        Expression: "Observation.meta.tag",
      },      {
        Code: "code",
        Expression: "",
      },      {
        Code: "date",
        Expression: "",
      },      {
        Code: "identifier",
        Expression: "",
      },      {
        Code: "patient",
        Expression: "",
      },      {
        Code: "encounter",
        Expression: "",
      },      {
        Code: "based-on",
        Expression: "Observation.basedOn",
      },      {
        Code: "category",
        Expression: "Observation.category",
      },      {
        Code: "combo-code",
        Expression: "",
      },      {
        Code: "combo-data-absent-reason",
        Expression: "",
      },      {
        Code: "combo-value-concept",
        Expression: "",
      },      {
        Code: "combo-value-quantity",
        Expression: "",
      },      {
        Code: "component-code",
        Expression: "Observation.component.code",
      },      {
        Code: "component-data-absent-reason",
        Expression: "Observation.component.dataAbsentReason",
      },      {
        Code: "component-value-concept",
        Expression: "(Observation.component.value as CodeableConcept)",
      },      {
        Code: "component-value-quantity",
        Expression: "",
      },      {
        Code: "data-absent-reason",
        Expression: "Observation.dataAbsentReason",
      },      {
        Code: "derived-from",
        Expression: "Observation.derivedFrom",
      },      {
        Code: "device",
        Expression: "Observation.device",
      },      {
        Code: "focus",
        Expression: "Observation.focus",
      },      {
        Code: "has-member",
        Expression: "Observation.hasMember",
      },      {
        Code: "method",
        Expression: "Observation.method",
      },      {
        Code: "part-of",
        Expression: "Observation.partOf",
      },      {
        Code: "performer",
        Expression: "Observation.performer",
      },      {
        Code: "specimen",
        Expression: "Observation.specimen",
      },      {
        Code: "status",
        Expression: "Observation.status",
      },      {
        Code: "subject",
        Expression: "Observation.subject",
      },      {
        Code: "value-concept",
        Expression: "(Observation.value as CodeableConcept)",
      },      {
        Code: "value-date",
        Expression: "",
      },      {
        Code: "value-quantity",
        Expression: "",
      },      {
        Code: "value-string",
        Expression: "",
      },      {
        Code: "code-value-concept",
        Expression: "Observation",
      },      {
        Code: "code-value-date",
        Expression: "Observation",
      },      {
        Code: "code-value-quantity",
        Expression: "Observation",
      },      {
        Code: "code-value-string",
        Expression: "Observation",
      },      {
        Code: "combo-code-value-concept",
        Expression: "",
      },      {
        Code: "combo-code-value-quantity",
        Expression: "",
      },      {
        Code: "component-code-value-concept",
        Expression: "Observation.component",
      },      {
        Code: "component-code-value-quantity",
        Expression: "Observation.component",
      },    },    "Procedure": {      {
        Code: "_id",
        Expression: "Procedure.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Procedure.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Procedure.meta.profile",
      },      {
        Code: "_security",
        Expression: "Procedure.meta.security",
      },      {
        Code: "_source",
        Expression: "Procedure.meta.source",
      },      {
        Code: "_tag",
        Expression: "Procedure.meta.tag",
      },      {
        Code: "_id",
        Expression: "Procedure.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Procedure.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Procedure.meta.profile",
      },      {
        Code: "_security",
        Expression: "Procedure.meta.security",
      },      {
        Code: "_source",
        Expression: "Procedure.meta.source",
      },      {
        Code: "_tag",
        Expression: "Procedure.meta.tag",
      },      {
        Code: "code",
        Expression: "",
      },      {
        Code: "date",
        Expression: "",
      },      {
        Code: "identifier",
        Expression: "",
      },      {
        Code: "patient",
        Expression: "",
      },      {
        Code: "encounter",
        Expression: "",
      },      {
        Code: "based-on",
        Expression: "Procedure.basedOn",
      },      {
        Code: "category",
        Expression: "Procedure.category",
      },      {
        Code: "instantiates-canonical",
        Expression: "Procedure.instantiatesCanonical",
      },      {
        Code: "instantiates-uri",
        Expression: "Procedure.instantiatesUri",
      },      {
        Code: "location",
        Expression: "Procedure.location",
      },      {
        Code: "part-of",
        Expression: "Procedure.partOf",
      },      {
        Code: "performer",
        Expression: "Procedure.performer.actor",
      },      {
        Code: "reason-code",
        Expression: "Procedure.reasonCode",
      },      {
        Code: "reason-reference",
        Expression: "Procedure.reasonReference",
      },      {
        Code: "status",
        Expression: "Procedure.status",
      },      {
        Code: "subject",
        Expression: "Procedure.subject",
      },    },    "ServiceRequest": {      {
        Code: "_id",
        Expression: "ServiceRequest.id",
      },      {
        Code: "_lastUpdated",
        Expression: "ServiceRequest.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "ServiceRequest.meta.profile",
      },      {
        Code: "_security",
        Expression: "ServiceRequest.meta.security",
      },      {
        Code: "_source",
        Expression: "ServiceRequest.meta.source",
      },      {
        Code: "_tag",
        Expression: "ServiceRequest.meta.tag",
      },      {
        Code: "_id",
        Expression: "ServiceRequest.id",
      },      {
        Code: "_lastUpdated",
        Expression: "ServiceRequest.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "ServiceRequest.meta.profile",
      },      {
        Code: "_security",
        Expression: "ServiceRequest.meta.security",
      },      {
        Code: "_source",
        Expression: "ServiceRequest.meta.source",
      },      {
        Code: "_tag",
        Expression: "ServiceRequest.meta.tag",
      },      {
        Code: "code",
        Expression: "",
      },      {
        Code: "identifier",
        Expression: "",
      },      {
        Code: "patient",
        Expression: "",
      },      {
        Code: "encounter",
        Expression: "",
      },      {
        Code: "authored",
        Expression: "ServiceRequest.authoredOn",
      },      {
        Code: "based-on",
        Expression: "ServiceRequest.basedOn",
      },      {
        Code: "body-site",
        Expression: "ServiceRequest.bodySite",
      },      {
        Code: "category",
        Expression: "ServiceRequest.category",
      },      {
        Code: "instantiates-canonical",
        Expression: "ServiceRequest.instantiatesCanonical",
      },      {
        Code: "instantiates-uri",
        Expression: "ServiceRequest.instantiatesUri",
      },      {
        Code: "intent",
        Expression: "ServiceRequest.intent",
      },      {
        Code: "occurrence",
        Expression: "ServiceRequest.occurrence",
      },      {
        Code: "performer",
        Expression: "ServiceRequest.performer",
      },      {
        Code: "performer-type",
        Expression: "ServiceRequest.performerType",
      },      {
        Code: "priority",
        Expression: "ServiceRequest.priority",
      },      {
        Code: "replaces",
        Expression: "ServiceRequest.replaces",
      },      {
        Code: "requester",
        Expression: "ServiceRequest.requester",
      },      {
        Code: "requisition",
        Expression: "ServiceRequest.requisition",
      },      {
        Code: "specimen",
        Expression: "ServiceRequest.specimen",
      },      {
        Code: "status",
        Expression: "ServiceRequest.status",
      },      {
        Code: "subject",
        Expression: "ServiceRequest.subject",
      },    },    "CarePlan": {      {
        Code: "_id",
        Expression: "CarePlan.id",
      },      {
        Code: "_lastUpdated",
        Expression: "CarePlan.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "CarePlan.meta.profile",
      },      {
        Code: "_security",
        Expression: "CarePlan.meta.security",
      },      {
        Code: "_source",
        Expression: "CarePlan.meta.source",
      },      {
        Code: "_tag",
        Expression: "CarePlan.meta.tag",
      },      {
        Code: "_id",
        Expression: "CarePlan.id",
      },      {
        Code: "_lastUpdated",
        Expression: "CarePlan.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "CarePlan.meta.profile",
      },      {
        Code: "_security",
        Expression: "CarePlan.meta.security",
      },      {
        Code: "_source",
        Expression: "CarePlan.meta.source",
      },      {
        Code: "_tag",
        Expression: "CarePlan.meta.tag",
      },      {
        Code: "date",
        Expression: "",
      },      {
        Code: "identifier",
        Expression: "",
      },      {
        Code: "patient",
        Expression: "",
      },      {
        Code: "activity-code",
        Expression: "CarePlan.activity.detail.code",
      },      {
        Code: "activity-date",
        Expression: "CarePlan.activity.detail.scheduled",
      },      {
        Code: "activity-reference",
        Expression: "CarePlan.activity.reference",
      },      {
        Code: "based-on",
        Expression: "CarePlan.basedOn",
      },      {
        Code: "care-team",
        Expression: "CarePlan.careTeam",
      },      {
        Code: "category",
        Expression: "CarePlan.category",
      },      {
        Code: "condition",
        Expression: "CarePlan.addresses",
      },      {
        Code: "encounter",
        Expression: "CarePlan.encounter",
      },      {
        Code: "goal",
        Expression: "CarePlan.goal",
      },      {
        Code: "instantiates-canonical",
        Expression: "CarePlan.instantiatesCanonical",
      },      {
        Code: "instantiates-uri",
        Expression: "CarePlan.instantiatesUri",
      },      {
        Code: "intent",
        Expression: "CarePlan.intent",
      },      {
        Code: "part-of",
        Expression: "CarePlan.partOf",
      },      {
        Code: "performer",
        Expression: "CarePlan.activity.detail.performer",
      },      {
        Code: "replaces",
        Expression: "CarePlan.replaces",
      },      {
        Code: "status",
        Expression: "CarePlan.status",
      },      {
        Code: "subject",
        Expression: "CarePlan.subject",
      },    },    "CareTeam": {      {
        Code: "_id",
        Expression: "CareTeam.id",
      },      {
        Code: "_lastUpdated",
        Expression: "CareTeam.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "CareTeam.meta.profile",
      },      {
        Code: "_security",
        Expression: "CareTeam.meta.security",
      },      {
        Code: "_source",
        Expression: "CareTeam.meta.source",
      },      {
        Code: "_tag",
        Expression: "CareTeam.meta.tag",
      },      {
        Code: "_id",
        Expression: "CareTeam.id",
      },      {
        Code: "_lastUpdated",
        Expression: "CareTeam.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "CareTeam.meta.profile",
      },      {
        Code: "_security",
        Expression: "CareTeam.meta.security",
      },      {
        Code: "_source",
        Expression: "CareTeam.meta.source",
      },      {
        Code: "_tag",
        Expression: "CareTeam.meta.tag",
      },      {
        Code: "date",
        Expression: "",
      },      {
        Code: "identifier",
        Expression: "",
      },      {
        Code: "patient",
        Expression: "",
      },      {
        Code: "category",
        Expression: "CareTeam.category",
      },      {
        Code: "encounter",
        Expression: "CareTeam.encounter",
      },      {
        Code: "participant",
        Expression: "CareTeam.participant.member",
      },      {
        Code: "status",
        Expression: "CareTeam.status",
      },      {
        Code: "subject",
        Expression: "CareTeam.subject",
      },    },    "ClinicalImpression": {      {
        Code: "_id",
        Expression: "ClinicalImpression.id",
      },      {
        Code: "_lastUpdated",
        Expression: "ClinicalImpression.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "ClinicalImpression.meta.profile",
      },      {
        Code: "_security",
        Expression: "ClinicalImpression.meta.security",
      },      {
        Code: "_source",
        Expression: "ClinicalImpression.meta.source",
      },      {
        Code: "_tag",
        Expression: "ClinicalImpression.meta.tag",
      },      {
        Code: "_id",
        Expression: "ClinicalImpression.id",
      },      {
        Code: "_lastUpdated",
        Expression: "ClinicalImpression.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "ClinicalImpression.meta.profile",
      },      {
        Code: "_security",
        Expression: "ClinicalImpression.meta.security",
      },      {
        Code: "_source",
        Expression: "ClinicalImpression.meta.source",
      },      {
        Code: "_tag",
        Expression: "ClinicalImpression.meta.tag",
      },      {
        Code: "date",
        Expression: "",
      },      {
        Code: "patient",
        Expression: "",
      },      {
        Code: "assessor",
        Expression: "ClinicalImpression.assessor",
      },      {
        Code: "encounter",
        Expression: "ClinicalImpression.encounter",
      },      {
        Code: "finding-code",
        Expression: "ClinicalImpression.finding.itemCodeableConcept",
      },      {
        Code: "finding-ref",
        Expression: "ClinicalImpression.finding.itemReference",
      },      {
        Code: "identifier",
        Expression: "ClinicalImpression.identifier",
      },      {
        Code: "investigation",
        Expression: "ClinicalImpression.investigation.item",
      },      {
        Code: "previous",
        Expression: "ClinicalImpression.previous",
      },      {
        Code: "problem",
        Expression: "ClinicalImpression.problem",
      },      {
        Code: "status",
        Expression: "ClinicalImpression.status",
      },      {
        Code: "subject",
        Expression: "ClinicalImpression.subject",
      },      {
        Code: "supporting-info",
        Expression: "ClinicalImpression.supportingInfo",
      },    },    "Composition": {      {
        Code: "_id",
        Expression: "Composition.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Composition.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Composition.meta.profile",
      },      {
        Code: "_security",
        Expression: "Composition.meta.security",
      },      {
        Code: "_source",
        Expression: "Composition.meta.source",
      },      {
        Code: "_tag",
        Expression: "Composition.meta.tag",
      },      {
        Code: "_id",
        Expression: "Composition.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Composition.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Composition.meta.profile",
      },      {
        Code: "_security",
        Expression: "Composition.meta.security",
      },      {
        Code: "_source",
        Expression: "Composition.meta.source",
      },      {
        Code: "_tag",
        Expression: "Composition.meta.tag",
      },      {
        Code: "date",
        Expression: "",
      },      {
        Code: "identifier",
        Expression: "",
      },      {
        Code: "patient",
        Expression: "",
      },      {
        Code: "type",
        Expression: "",
      },      {
        Code: "attester",
        Expression: "Composition.attester.party",
      },      {
        Code: "author",
        Expression: "Composition.author",
      },      {
        Code: "category",
        Expression: "Composition.category",
      },      {
        Code: "confidentiality",
        Expression: "Composition.confidentiality",
      },      {
        Code: "context",
        Expression: "Composition.event.code",
      },      {
        Code: "encounter",
        Expression: "",
      },      {
        Code: "entry",
        Expression: "Composition.section.entry",
      },      {
        Code: "period",
        Expression: "Composition.event.period",
      },      {
        Code: "related-id",
        Expression: "(Composition.relatesTo.target as Identifier)",
      },      {
        Code: "related-ref",
        Expression: "(Composition.relatesTo.target as Reference)",
      },      {
        Code: "section",
        Expression: "Composition.section.code",
      },      {
        Code: "status",
        Expression: "Composition.status",
      },      {
        Code: "subject",
        Expression: "Composition.subject",
      },      {
        Code: "title",
        Expression: "Composition.title",
      },    },    "Consent": {      {
        Code: "_id",
        Expression: "Consent.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Consent.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Consent.meta.profile",
      },      {
        Code: "_security",
        Expression: "Consent.meta.security",
      },      {
        Code: "_source",
        Expression: "Consent.meta.source",
      },      {
        Code: "_tag",
        Expression: "Consent.meta.tag",
      },      {
        Code: "_id",
        Expression: "Consent.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Consent.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Consent.meta.profile",
      },      {
        Code: "_security",
        Expression: "Consent.meta.security",
      },      {
        Code: "_source",
        Expression: "Consent.meta.source",
      },      {
        Code: "_tag",
        Expression: "Consent.meta.tag",
      },      {
        Code: "date",
        Expression: "",
      },      {
        Code: "identifier",
        Expression: "",
      },      {
        Code: "patient",
        Expression: "",
      },      {
        Code: "action",
        Expression: "Consent.provision.action",
      },      {
        Code: "actor",
        Expression: "Consent.provision.actor.reference",
      },      {
        Code: "category",
        Expression: "Consent.category",
      },      {
        Code: "consentor",
        Expression: "Consent.performer",
      },      {
        Code: "data",
        Expression: "Consent.provision.data.reference",
      },      {
        Code: "organization",
        Expression: "Consent.organization",
      },      {
        Code: "period",
        Expression: "Consent.provision.period",
      },      {
        Code: "purpose",
        Expression: "Consent.provision.purpose",
      },      {
        Code: "scope",
        Expression: "Consent.scope",
      },      {
        Code: "security-label",
        Expression: "Consent.provision.securityLabel",
      },      {
        Code: "source-reference",
        Expression: "Consent.source",
      },      {
        Code: "status",
        Expression: "Consent.status",
      },    },    "Encounter": {      {
        Code: "_id",
        Expression: "Encounter.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Encounter.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Encounter.meta.profile",
      },      {
        Code: "_security",
        Expression: "Encounter.meta.security",
      },      {
        Code: "_source",
        Expression: "Encounter.meta.source",
      },      {
        Code: "_tag",
        Expression: "Encounter.meta.tag",
      },      {
        Code: "_id",
        Expression: "Encounter.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Encounter.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Encounter.meta.profile",
      },      {
        Code: "_security",
        Expression: "Encounter.meta.security",
      },      {
        Code: "_source",
        Expression: "Encounter.meta.source",
      },      {
        Code: "_tag",
        Expression: "Encounter.meta.tag",
      },      {
        Code: "date",
        Expression: "",
      },      {
        Code: "identifier",
        Expression: "",
      },      {
        Code: "patient",
        Expression: "",
      },      {
        Code: "type",
        Expression: "",
      },      {
        Code: "account",
        Expression: "Encounter.account",
      },      {
        Code: "appointment",
        Expression: "Encounter.appointment",
      },      {
        Code: "based-on",
        Expression: "Encounter.basedOn",
      },      {
        Code: "class",
        Expression: "Encounter.class",
      },      {
        Code: "diagnosis",
        Expression: "Encounter.diagnosis.condition",
      },      {
        Code: "episode-of-care",
        Expression: "Encounter.episodeOfCare",
      },      {
        Code: "length",
        Expression: "Encounter.length",
      },      {
        Code: "location",
        Expression: "Encounter.location.location",
      },      {
        Code: "location-period",
        Expression: "Encounter.location.period",
      },      {
        Code: "part-of",
        Expression: "Encounter.partOf",
      },      {
        Code: "participant",
        Expression: "Encounter.participant.individual",
      },      {
        Code: "participant-type",
        Expression: "Encounter.participant.type",
      },      {
        Code: "practitioner",
        Expression: "Encounter.participant.individual.where(resolve() is Practitioner)",
      },      {
        Code: "reason-code",
        Expression: "Encounter.reasonCode",
      },      {
        Code: "reason-reference",
        Expression: "Encounter.reasonReference",
      },      {
        Code: "service-provider",
        Expression: "Encounter.serviceProvider",
      },      {
        Code: "special-arrangement",
        Expression: "Encounter.hospitalization.specialArrangement",
      },      {
        Code: "status",
        Expression: "Encounter.status",
      },      {
        Code: "subject",
        Expression: "Encounter.subject",
      },    },    "EpisodeOfCare": {      {
        Code: "_id",
        Expression: "EpisodeOfCare.id",
      },      {
        Code: "_lastUpdated",
        Expression: "EpisodeOfCare.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "EpisodeOfCare.meta.profile",
      },      {
        Code: "_security",
        Expression: "EpisodeOfCare.meta.security",
      },      {
        Code: "_source",
        Expression: "EpisodeOfCare.meta.source",
      },      {
        Code: "_tag",
        Expression: "EpisodeOfCare.meta.tag",
      },      {
        Code: "_id",
        Expression: "EpisodeOfCare.id",
      },      {
        Code: "_lastUpdated",
        Expression: "EpisodeOfCare.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "EpisodeOfCare.meta.profile",
      },      {
        Code: "_security",
        Expression: "EpisodeOfCare.meta.security",
      },      {
        Code: "_source",
        Expression: "EpisodeOfCare.meta.source",
      },      {
        Code: "_tag",
        Expression: "EpisodeOfCare.meta.tag",
      },      {
        Code: "date",
        Expression: "",
      },      {
        Code: "identifier",
        Expression: "",
      },      {
        Code: "patient",
        Expression: "",
      },      {
        Code: "type",
        Expression: "",
      },      {
        Code: "care-manager",
        Expression: "EpisodeOfCare.careManager.where(resolve() is Practitioner)",
      },      {
        Code: "condition",
        Expression: "EpisodeOfCare.diagnosis.condition",
      },      {
        Code: "incoming-referral",
        Expression: "EpisodeOfCare.referralRequest",
      },      {
        Code: "organization",
        Expression: "EpisodeOfCare.managingOrganization",
      },      {
        Code: "status",
        Expression: "EpisodeOfCare.status",
      },    },    "Flag": {      {
        Code: "_id",
        Expression: "Flag.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Flag.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Flag.meta.profile",
      },      {
        Code: "_security",
        Expression: "Flag.meta.security",
      },      {
        Code: "_source",
        Expression: "Flag.meta.source",
      },      {
        Code: "_tag",
        Expression: "Flag.meta.tag",
      },      {
        Code: "_id",
        Expression: "Flag.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Flag.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Flag.meta.profile",
      },      {
        Code: "_security",
        Expression: "Flag.meta.security",
      },      {
        Code: "_source",
        Expression: "Flag.meta.source",
      },      {
        Code: "_tag",
        Expression: "Flag.meta.tag",
      },      {
        Code: "date",
        Expression: "",
      },      {
        Code: "patient",
        Expression: "",
      },      {
        Code: "encounter",
        Expression: "",
      },      {
        Code: "author",
        Expression: "Flag.author",
      },      {
        Code: "identifier",
        Expression: "Flag.identifier",
      },      {
        Code: "subject",
        Expression: "Flag.subject",
      },    },    "Immunization": {      {
        Code: "_id",
        Expression: "Immunization.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Immunization.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Immunization.meta.profile",
      },      {
        Code: "_security",
        Expression: "Immunization.meta.security",
      },      {
        Code: "_source",
        Expression: "Immunization.meta.source",
      },      {
        Code: "_tag",
        Expression: "Immunization.meta.tag",
      },      {
        Code: "_id",
        Expression: "Immunization.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Immunization.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Immunization.meta.profile",
      },      {
        Code: "_security",
        Expression: "Immunization.meta.security",
      },      {
        Code: "_source",
        Expression: "Immunization.meta.source",
      },      {
        Code: "_tag",
        Expression: "Immunization.meta.tag",
      },      {
        Code: "date",
        Expression: "",
      },      {
        Code: "identifier",
        Expression: "",
      },      {
        Code: "patient",
        Expression: "",
      },      {
        Code: "location",
        Expression: "Immunization.location",
      },      {
        Code: "lot-number",
        Expression: "Immunization.lotNumber",
      },      {
        Code: "manufacturer",
        Expression: "Immunization.manufacturer",
      },      {
        Code: "performer",
        Expression: "Immunization.performer.actor",
      },      {
        Code: "reaction",
        Expression: "Immunization.reaction.detail",
      },      {
        Code: "reaction-date",
        Expression: "Immunization.reaction.date",
      },      {
        Code: "reason-code",
        Expression: "Immunization.reasonCode",
      },      {
        Code: "reason-reference",
        Expression: "Immunization.reasonReference",
      },      {
        Code: "series",
        Expression: "Immunization.protocolApplied.series",
      },      {
        Code: "status",
        Expression: "Immunization.status",
      },      {
        Code: "status-reason",
        Expression: "Immunization.statusReason",
      },      {
        Code: "target-disease",
        Expression: "Immunization.protocolApplied.targetDisease",
      },      {
        Code: "vaccine-code",
        Expression: "Immunization.vaccineCode",
      },    },    "RiskAssessment": {      {
        Code: "_id",
        Expression: "RiskAssessment.id",
      },      {
        Code: "_lastUpdated",
        Expression: "RiskAssessment.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "RiskAssessment.meta.profile",
      },      {
        Code: "_security",
        Expression: "RiskAssessment.meta.security",
      },      {
        Code: "_source",
        Expression: "RiskAssessment.meta.source",
      },      {
        Code: "_tag",
        Expression: "RiskAssessment.meta.tag",
      },      {
        Code: "_id",
        Expression: "RiskAssessment.id",
      },      {
        Code: "_lastUpdated",
        Expression: "RiskAssessment.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "RiskAssessment.meta.profile",
      },      {
        Code: "_security",
        Expression: "RiskAssessment.meta.security",
      },      {
        Code: "_source",
        Expression: "RiskAssessment.meta.source",
      },      {
        Code: "_tag",
        Expression: "RiskAssessment.meta.tag",
      },      {
        Code: "date",
        Expression: "",
      },      {
        Code: "identifier",
        Expression: "",
      },      {
        Code: "patient",
        Expression: "",
      },      {
        Code: "encounter",
        Expression: "",
      },      {
        Code: "condition",
        Expression: "RiskAssessment.condition",
      },      {
        Code: "method",
        Expression: "RiskAssessment.method",
      },      {
        Code: "performer",
        Expression: "RiskAssessment.performer",
      },      {
        Code: "probability",
        Expression: "RiskAssessment.prediction.probability",
      },      {
        Code: "risk",
        Expression: "RiskAssessment.prediction.qualitativeRisk",
      },      {
        Code: "subject",
        Expression: "RiskAssessment.subject",
      },    },    "SupplyRequest": {      {
        Code: "_id",
        Expression: "SupplyRequest.id",
      },      {
        Code: "_lastUpdated",
        Expression: "SupplyRequest.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "SupplyRequest.meta.profile",
      },      {
        Code: "_security",
        Expression: "SupplyRequest.meta.security",
      },      {
        Code: "_source",
        Expression: "SupplyRequest.meta.source",
      },      {
        Code: "_tag",
        Expression: "SupplyRequest.meta.tag",
      },      {
        Code: "_id",
        Expression: "SupplyRequest.id",
      },      {
        Code: "_lastUpdated",
        Expression: "SupplyRequest.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "SupplyRequest.meta.profile",
      },      {
        Code: "_security",
        Expression: "SupplyRequest.meta.security",
      },      {
        Code: "_source",
        Expression: "SupplyRequest.meta.source",
      },      {
        Code: "_tag",
        Expression: "SupplyRequest.meta.tag",
      },      {
        Code: "date",
        Expression: "",
      },      {
        Code: "identifier",
        Expression: "",
      },      {
        Code: "category",
        Expression: "SupplyRequest.category",
      },      {
        Code: "requester",
        Expression: "SupplyRequest.requester",
      },      {
        Code: "status",
        Expression: "SupplyRequest.status",
      },      {
        Code: "subject",
        Expression: "SupplyRequest.deliverTo",
      },      {
        Code: "supplier",
        Expression: "SupplyRequest.supplier",
      },    },    "DetectedIssue": {      {
        Code: "_id",
        Expression: "DetectedIssue.id",
      },      {
        Code: "_lastUpdated",
        Expression: "DetectedIssue.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "DetectedIssue.meta.profile",
      },      {
        Code: "_security",
        Expression: "DetectedIssue.meta.security",
      },      {
        Code: "_source",
        Expression: "DetectedIssue.meta.source",
      },      {
        Code: "_tag",
        Expression: "DetectedIssue.meta.tag",
      },      {
        Code: "_id",
        Expression: "DetectedIssue.id",
      },      {
        Code: "_lastUpdated",
        Expression: "DetectedIssue.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "DetectedIssue.meta.profile",
      },      {
        Code: "_security",
        Expression: "DetectedIssue.meta.security",
      },      {
        Code: "_source",
        Expression: "DetectedIssue.meta.source",
      },      {
        Code: "_tag",
        Expression: "DetectedIssue.meta.tag",
      },      {
        Code: "identifier",
        Expression: "",
      },      {
        Code: "patient",
        Expression: "",
      },      {
        Code: "author",
        Expression: "DetectedIssue.author",
      },      {
        Code: "code",
        Expression: "DetectedIssue.code",
      },      {
        Code: "identified",
        Expression: "DetectedIssue.identified",
      },      {
        Code: "implicated",
        Expression: "DetectedIssue.implicated",
      },    },    "DocumentManifest": {      {
        Code: "_id",
        Expression: "DocumentManifest.id",
      },      {
        Code: "_lastUpdated",
        Expression: "DocumentManifest.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "DocumentManifest.meta.profile",
      },      {
        Code: "_security",
        Expression: "DocumentManifest.meta.security",
      },      {
        Code: "_source",
        Expression: "DocumentManifest.meta.source",
      },      {
        Code: "_tag",
        Expression: "DocumentManifest.meta.tag",
      },      {
        Code: "_id",
        Expression: "DocumentManifest.id",
      },      {
        Code: "_lastUpdated",
        Expression: "DocumentManifest.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "DocumentManifest.meta.profile",
      },      {
        Code: "_security",
        Expression: "DocumentManifest.meta.security",
      },      {
        Code: "_source",
        Expression: "DocumentManifest.meta.source",
      },      {
        Code: "_tag",
        Expression: "DocumentManifest.meta.tag",
      },      {
        Code: "identifier",
        Expression: "",
      },      {
        Code: "patient",
        Expression: "",
      },      {
        Code: "type",
        Expression: "",
      },      {
        Code: "author",
        Expression: "DocumentManifest.author",
      },      {
        Code: "created",
        Expression: "DocumentManifest.created",
      },      {
        Code: "description",
        Expression: "DocumentManifest.description",
      },      {
        Code: "item",
        Expression: "DocumentManifest.content",
      },      {
        Code: "recipient",
        Expression: "DocumentManifest.recipient",
      },      {
        Code: "related-id",
        Expression: "DocumentManifest.related.identifier",
      },      {
        Code: "related-ref",
        Expression: "DocumentManifest.related.ref",
      },      {
        Code: "source",
        Expression: "DocumentManifest.source",
      },      {
        Code: "status",
        Expression: "DocumentManifest.status",
      },      {
        Code: "subject",
        Expression: "DocumentManifest.subject",
      },    },    "DocumentReference": {      {
        Code: "_id",
        Expression: "DocumentReference.id",
      },      {
        Code: "_lastUpdated",
        Expression: "DocumentReference.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "DocumentReference.meta.profile",
      },      {
        Code: "_security",
        Expression: "DocumentReference.meta.security",
      },      {
        Code: "_source",
        Expression: "DocumentReference.meta.source",
      },      {
        Code: "_tag",
        Expression: "DocumentReference.meta.tag",
      },      {
        Code: "_id",
        Expression: "DocumentReference.id",
      },      {
        Code: "_lastUpdated",
        Expression: "DocumentReference.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "DocumentReference.meta.profile",
      },      {
        Code: "_security",
        Expression: "DocumentReference.meta.security",
      },      {
        Code: "_source",
        Expression: "DocumentReference.meta.source",
      },      {
        Code: "_tag",
        Expression: "DocumentReference.meta.tag",
      },      {
        Code: "identifier",
        Expression: "",
      },      {
        Code: "patient",
        Expression: "",
      },      {
        Code: "type",
        Expression: "",
      },      {
        Code: "encounter",
        Expression: "",
      },      {
        Code: "authenticator",
        Expression: "DocumentReference.authenticator",
      },      {
        Code: "author",
        Expression: "DocumentReference.author",
      },      {
        Code: "category",
        Expression: "DocumentReference.category",
      },      {
        Code: "contenttype",
        Expression: "DocumentReference.content.attachment.contentType",
      },      {
        Code: "custodian",
        Expression: "DocumentReference.custodian",
      },      {
        Code: "date",
        Expression: "DocumentReference.date",
      },      {
        Code: "description",
        Expression: "DocumentReference.description",
      },      {
        Code: "event",
        Expression: "DocumentReference.context.event",
      },      {
        Code: "facility",
        Expression: "DocumentReference.context.facilityType",
      },      {
        Code: "format",
        Expression: "DocumentReference.content.format",
      },      {
        Code: "language",
        Expression: "DocumentReference.content.attachment.language",
      },      {
        Code: "location",
        Expression: "DocumentReference.content.attachment.url",
      },      {
        Code: "period",
        Expression: "DocumentReference.context.period",
      },      {
        Code: "related",
        Expression: "DocumentReference.context.related",
      },      {
        Code: "relatesto",
        Expression: "DocumentReference.relatesTo.target",
      },      {
        Code: "relation",
        Expression: "DocumentReference.relatesTo.code",
      },      {
        Code: "security-label",
        Expression: "DocumentReference.securityLabel",
      },      {
        Code: "setting",
        Expression: "DocumentReference.context.practiceSetting",
      },      {
        Code: "status",
        Expression: "DocumentReference.status",
      },      {
        Code: "subject",
        Expression: "DocumentReference.subject",
      },      {
        Code: "relationship",
        Expression: "DocumentReference.relatesTo",
      },    },    "Goal": {      {
        Code: "_id",
        Expression: "Goal.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Goal.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Goal.meta.profile",
      },      {
        Code: "_security",
        Expression: "Goal.meta.security",
      },      {
        Code: "_source",
        Expression: "Goal.meta.source",
      },      {
        Code: "_tag",
        Expression: "Goal.meta.tag",
      },      {
        Code: "_id",
        Expression: "Goal.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Goal.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Goal.meta.profile",
      },      {
        Code: "_security",
        Expression: "Goal.meta.security",
      },      {
        Code: "_source",
        Expression: "Goal.meta.source",
      },      {
        Code: "_tag",
        Expression: "Goal.meta.tag",
      },      {
        Code: "identifier",
        Expression: "",
      },      {
        Code: "patient",
        Expression: "",
      },      {
        Code: "achievement-status",
        Expression: "Goal.achievementStatus",
      },      {
        Code: "category",
        Expression: "Goal.category",
      },      {
        Code: "lifecycle-status",
        Expression: "Goal.lifecycleStatus",
      },      {
        Code: "start-date",
        Expression: "(Goal.start as date)",
      },      {
        Code: "subject",
        Expression: "Goal.subject",
      },      {
        Code: "target-date",
        Expression: "(Goal.target.due as date)",
      },    },    "ImagingStudy": {      {
        Code: "_id",
        Expression: "ImagingStudy.id",
      },      {
        Code: "_lastUpdated",
        Expression: "ImagingStudy.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "ImagingStudy.meta.profile",
      },      {
        Code: "_security",
        Expression: "ImagingStudy.meta.security",
      },      {
        Code: "_source",
        Expression: "ImagingStudy.meta.source",
      },      {
        Code: "_tag",
        Expression: "ImagingStudy.meta.tag",
      },      {
        Code: "_id",
        Expression: "ImagingStudy.id",
      },      {
        Code: "_lastUpdated",
        Expression: "ImagingStudy.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "ImagingStudy.meta.profile",
      },      {
        Code: "_security",
        Expression: "ImagingStudy.meta.security",
      },      {
        Code: "_source",
        Expression: "ImagingStudy.meta.source",
      },      {
        Code: "_tag",
        Expression: "ImagingStudy.meta.tag",
      },      {
        Code: "identifier",
        Expression: "",
      },      {
        Code: "patient",
        Expression: "",
      },      {
        Code: "basedon",
        Expression: "ImagingStudy.basedOn",
      },      {
        Code: "bodysite",
        Expression: "ImagingStudy.series.bodySite",
      },      {
        Code: "dicom-class",
        Expression: "ImagingStudy.series.instance.sopClass",
      },      {
        Code: "encounter",
        Expression: "ImagingStudy.encounter",
      },      {
        Code: "endpoint",
        Expression: "",
      },      {
        Code: "instance",
        Expression: "ImagingStudy.series.instance.uid",
      },      {
        Code: "interpreter",
        Expression: "ImagingStudy.interpreter",
      },      {
        Code: "modality",
        Expression: "ImagingStudy.series.modality",
      },      {
        Code: "performer",
        Expression: "ImagingStudy.series.performer.actor",
      },      {
        Code: "reason",
        Expression: "ImagingStudy.reasonCode",
      },      {
        Code: "referrer",
        Expression: "ImagingStudy.referrer",
      },      {
        Code: "series",
        Expression: "ImagingStudy.series.uid",
      },      {
        Code: "started",
        Expression: "ImagingStudy.started",
      },      {
        Code: "status",
        Expression: "ImagingStudy.status",
      },      {
        Code: "subject",
        Expression: "ImagingStudy.subject",
      },    },    "NutritionOrder": {      {
        Code: "_id",
        Expression: "NutritionOrder.id",
      },      {
        Code: "_lastUpdated",
        Expression: "NutritionOrder.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "NutritionOrder.meta.profile",
      },      {
        Code: "_security",
        Expression: "NutritionOrder.meta.security",
      },      {
        Code: "_source",
        Expression: "NutritionOrder.meta.source",
      },      {
        Code: "_tag",
        Expression: "NutritionOrder.meta.tag",
      },      {
        Code: "_id",
        Expression: "NutritionOrder.id",
      },      {
        Code: "_lastUpdated",
        Expression: "NutritionOrder.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "NutritionOrder.meta.profile",
      },      {
        Code: "_security",
        Expression: "NutritionOrder.meta.security",
      },      {
        Code: "_source",
        Expression: "NutritionOrder.meta.source",
      },      {
        Code: "_tag",
        Expression: "NutritionOrder.meta.tag",
      },      {
        Code: "identifier",
        Expression: "",
      },      {
        Code: "patient",
        Expression: "",
      },      {
        Code: "encounter",
        Expression: "",
      },      {
        Code: "additive",
        Expression: "NutritionOrder.enteralFormula.additiveType",
      },      {
        Code: "datetime",
        Expression: "NutritionOrder.dateTime",
      },      {
        Code: "formula",
        Expression: "NutritionOrder.enteralFormula.baseFormulaType",
      },      {
        Code: "instantiates-canonical",
        Expression: "NutritionOrder.instantiatesCanonical",
      },      {
        Code: "instantiates-uri",
        Expression: "NutritionOrder.instantiatesUri",
      },      {
        Code: "oraldiet",
        Expression: "NutritionOrder.oralDiet.type",
      },      {
        Code: "provider",
        Expression: "NutritionOrder.orderer",
      },      {
        Code: "status",
        Expression: "NutritionOrder.status",
      },      {
        Code: "supplement",
        Expression: "NutritionOrder.supplement.type",
      },    },    "SupplyDelivery": {      {
        Code: "_id",
        Expression: "SupplyDelivery.id",
      },      {
        Code: "_lastUpdated",
        Expression: "SupplyDelivery.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "SupplyDelivery.meta.profile",
      },      {
        Code: "_security",
        Expression: "SupplyDelivery.meta.security",
      },      {
        Code: "_source",
        Expression: "SupplyDelivery.meta.source",
      },      {
        Code: "_tag",
        Expression: "SupplyDelivery.meta.tag",
      },      {
        Code: "_id",
        Expression: "SupplyDelivery.id",
      },      {
        Code: "_lastUpdated",
        Expression: "SupplyDelivery.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "SupplyDelivery.meta.profile",
      },      {
        Code: "_security",
        Expression: "SupplyDelivery.meta.security",
      },      {
        Code: "_source",
        Expression: "SupplyDelivery.meta.source",
      },      {
        Code: "_tag",
        Expression: "SupplyDelivery.meta.tag",
      },      {
        Code: "identifier",
        Expression: "",
      },      {
        Code: "patient",
        Expression: "",
      },      {
        Code: "receiver",
        Expression: "SupplyDelivery.receiver",
      },      {
        Code: "status",
        Expression: "SupplyDelivery.status",
      },      {
        Code: "supplier",
        Expression: "SupplyDelivery.supplier",
      },    },    "VisionPrescription": {      {
        Code: "_id",
        Expression: "VisionPrescription.id",
      },      {
        Code: "_lastUpdated",
        Expression: "VisionPrescription.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "VisionPrescription.meta.profile",
      },      {
        Code: "_security",
        Expression: "VisionPrescription.meta.security",
      },      {
        Code: "_source",
        Expression: "VisionPrescription.meta.source",
      },      {
        Code: "_tag",
        Expression: "VisionPrescription.meta.tag",
      },      {
        Code: "_id",
        Expression: "VisionPrescription.id",
      },      {
        Code: "_lastUpdated",
        Expression: "VisionPrescription.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "VisionPrescription.meta.profile",
      },      {
        Code: "_security",
        Expression: "VisionPrescription.meta.security",
      },      {
        Code: "_source",
        Expression: "VisionPrescription.meta.source",
      },      {
        Code: "_tag",
        Expression: "VisionPrescription.meta.tag",
      },      {
        Code: "identifier",
        Expression: "",
      },      {
        Code: "patient",
        Expression: "",
      },      {
        Code: "encounter",
        Expression: "",
      },      {
        Code: "datewritten",
        Expression: "VisionPrescription.dateWritten",
      },      {
        Code: "prescriber",
        Expression: "VisionPrescription.prescriber",
      },      {
        Code: "status",
        Expression: "VisionPrescription.status",
      },    },    "DeviceUseStatement": {      {
        Code: "_id",
        Expression: "DeviceUseStatement.id",
      },      {
        Code: "_lastUpdated",
        Expression: "DeviceUseStatement.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "DeviceUseStatement.meta.profile",
      },      {
        Code: "_security",
        Expression: "DeviceUseStatement.meta.security",
      },      {
        Code: "_source",
        Expression: "DeviceUseStatement.meta.source",
      },      {
        Code: "_tag",
        Expression: "DeviceUseStatement.meta.tag",
      },      {
        Code: "_id",
        Expression: "DeviceUseStatement.id",
      },      {
        Code: "_lastUpdated",
        Expression: "DeviceUseStatement.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "DeviceUseStatement.meta.profile",
      },      {
        Code: "_security",
        Expression: "DeviceUseStatement.meta.security",
      },      {
        Code: "_source",
        Expression: "DeviceUseStatement.meta.source",
      },      {
        Code: "_tag",
        Expression: "DeviceUseStatement.meta.tag",
      },      {
        Code: "patient",
        Expression: "",
      },      {
        Code: "device",
        Expression: "DeviceUseStatement.device",
      },      {
        Code: "identifier",
        Expression: "DeviceUseStatement.identifier",
      },      {
        Code: "subject",
        Expression: "DeviceUseStatement.subject",
      },    },    "Appointment": {      {
        Code: "_id",
        Expression: "Appointment.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Appointment.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Appointment.meta.profile",
      },      {
        Code: "_security",
        Expression: "Appointment.meta.security",
      },      {
        Code: "_source",
        Expression: "Appointment.meta.source",
      },      {
        Code: "_tag",
        Expression: "Appointment.meta.tag",
      },      {
        Code: "_id",
        Expression: "Appointment.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Appointment.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Appointment.meta.profile",
      },      {
        Code: "_security",
        Expression: "Appointment.meta.security",
      },      {
        Code: "_source",
        Expression: "Appointment.meta.source",
      },      {
        Code: "_tag",
        Expression: "Appointment.meta.tag",
      },      {
        Code: "actor",
        Expression: "Appointment.participant.actor",
      },      {
        Code: "appointment-type",
        Expression: "Appointment.appointmentType",
      },      {
        Code: "based-on",
        Expression: "Appointment.basedOn",
      },      {
        Code: "date",
        Expression: "Appointment.start",
      },      {
        Code: "identifier",
        Expression: "Appointment.identifier",
      },      {
        Code: "location",
        Expression: "Appointment.participant.actor.where(resolve() is Location)",
      },      {
        Code: "part-status",
        Expression: "Appointment.participant.status",
      },      {
        Code: "patient",
        Expression: "Appointment.participant.actor.where(resolve() is Patient)",
      },      {
        Code: "practitioner",
        Expression: "Appointment.participant.actor.where(resolve() is Practitioner)",
      },      {
        Code: "reason-code",
        Expression: "Appointment.reasonCode",
      },      {
        Code: "reason-reference",
        Expression: "Appointment.reasonReference",
      },      {
        Code: "service-category",
        Expression: "Appointment.serviceCategory",
      },      {
        Code: "service-type",
        Expression: "Appointment.serviceType",
      },      {
        Code: "slot",
        Expression: "Appointment.slot",
      },      {
        Code: "specialty",
        Expression: "Appointment.specialty",
      },      {
        Code: "status",
        Expression: "Appointment.status",
      },      {
        Code: "supporting-info",
        Expression: "Appointment.supportingInformation",
      },    },    "AppointmentResponse": {      {
        Code: "_id",
        Expression: "AppointmentResponse.id",
      },      {
        Code: "_lastUpdated",
        Expression: "AppointmentResponse.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "AppointmentResponse.meta.profile",
      },      {
        Code: "_security",
        Expression: "AppointmentResponse.meta.security",
      },      {
        Code: "_source",
        Expression: "AppointmentResponse.meta.source",
      },      {
        Code: "_tag",
        Expression: "AppointmentResponse.meta.tag",
      },      {
        Code: "_id",
        Expression: "AppointmentResponse.id",
      },      {
        Code: "_lastUpdated",
        Expression: "AppointmentResponse.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "AppointmentResponse.meta.profile",
      },      {
        Code: "_security",
        Expression: "AppointmentResponse.meta.security",
      },      {
        Code: "_source",
        Expression: "AppointmentResponse.meta.source",
      },      {
        Code: "_tag",
        Expression: "AppointmentResponse.meta.tag",
      },      {
        Code: "actor",
        Expression: "AppointmentResponse.actor",
      },      {
        Code: "appointment",
        Expression: "AppointmentResponse.appointment",
      },      {
        Code: "identifier",
        Expression: "AppointmentResponse.identifier",
      },      {
        Code: "location",
        Expression: "AppointmentResponse.actor.where(resolve() is Location)",
      },      {
        Code: "part-status",
        Expression: "AppointmentResponse.participantStatus",
      },      {
        Code: "patient",
        Expression: "AppointmentResponse.actor.where(resolve() is Patient)",
      },      {
        Code: "practitioner",
        Expression: "AppointmentResponse.actor.where(resolve() is Practitioner)",
      },    },    "AuditEvent": {      {
        Code: "_id",
        Expression: "AuditEvent.id",
      },      {
        Code: "_lastUpdated",
        Expression: "AuditEvent.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "AuditEvent.meta.profile",
      },      {
        Code: "_security",
        Expression: "AuditEvent.meta.security",
      },      {
        Code: "_source",
        Expression: "AuditEvent.meta.source",
      },      {
        Code: "_tag",
        Expression: "AuditEvent.meta.tag",
      },      {
        Code: "_id",
        Expression: "AuditEvent.id",
      },      {
        Code: "_lastUpdated",
        Expression: "AuditEvent.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "AuditEvent.meta.profile",
      },      {
        Code: "_security",
        Expression: "AuditEvent.meta.security",
      },      {
        Code: "_source",
        Expression: "AuditEvent.meta.source",
      },      {
        Code: "_tag",
        Expression: "AuditEvent.meta.tag",
      },      {
        Code: "action",
        Expression: "AuditEvent.action",
      },      {
        Code: "address",
        Expression: "AuditEvent.agent.network.address",
      },      {
        Code: "agent",
        Expression: "AuditEvent.agent.who",
      },      {
        Code: "agent-name",
        Expression: "AuditEvent.agent.name",
      },      {
        Code: "agent-role",
        Expression: "AuditEvent.agent.role",
      },      {
        Code: "altid",
        Expression: "AuditEvent.agent.altId",
      },      {
        Code: "date",
        Expression: "AuditEvent.recorded",
      },      {
        Code: "entity",
        Expression: "AuditEvent.entity.what",
      },      {
        Code: "entity-name",
        Expression: "AuditEvent.entity.name",
      },      {
        Code: "entity-role",
        Expression: "AuditEvent.entity.role",
      },      {
        Code: "entity-type",
        Expression: "AuditEvent.entity.type",
      },      {
        Code: "outcome",
        Expression: "AuditEvent.outcome",
      },      {
        Code: "patient",
        Expression: "",
      },      {
        Code: "policy",
        Expression: "AuditEvent.agent.policy",
      },      {
        Code: "site",
        Expression: "AuditEvent.source.site",
      },      {
        Code: "source",
        Expression: "AuditEvent.source.observer",
      },      {
        Code: "subtype",
        Expression: "AuditEvent.subtype",
      },      {
        Code: "type",
        Expression: "AuditEvent.type",
      },    },    "Basic": {      {
        Code: "_id",
        Expression: "Basic.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Basic.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Basic.meta.profile",
      },      {
        Code: "_security",
        Expression: "Basic.meta.security",
      },      {
        Code: "_source",
        Expression: "Basic.meta.source",
      },      {
        Code: "_tag",
        Expression: "Basic.meta.tag",
      },      {
        Code: "_id",
        Expression: "Basic.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Basic.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Basic.meta.profile",
      },      {
        Code: "_security",
        Expression: "Basic.meta.security",
      },      {
        Code: "_source",
        Expression: "Basic.meta.source",
      },      {
        Code: "_tag",
        Expression: "Basic.meta.tag",
      },      {
        Code: "author",
        Expression: "Basic.author",
      },      {
        Code: "code",
        Expression: "Basic.code",
      },      {
        Code: "created",
        Expression: "Basic.created",
      },      {
        Code: "identifier",
        Expression: "Basic.identifier",
      },      {
        Code: "patient",
        Expression: "Basic.subject.where(resolve() is Patient)",
      },      {
        Code: "subject",
        Expression: "Basic.subject",
      },    },    "BodyStructure": {      {
        Code: "_id",
        Expression: "BodyStructure.id",
      },      {
        Code: "_lastUpdated",
        Expression: "BodyStructure.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "BodyStructure.meta.profile",
      },      {
        Code: "_security",
        Expression: "BodyStructure.meta.security",
      },      {
        Code: "_source",
        Expression: "BodyStructure.meta.source",
      },      {
        Code: "_tag",
        Expression: "BodyStructure.meta.tag",
      },      {
        Code: "_id",
        Expression: "BodyStructure.id",
      },      {
        Code: "_lastUpdated",
        Expression: "BodyStructure.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "BodyStructure.meta.profile",
      },      {
        Code: "_security",
        Expression: "BodyStructure.meta.security",
      },      {
        Code: "_source",
        Expression: "BodyStructure.meta.source",
      },      {
        Code: "_tag",
        Expression: "BodyStructure.meta.tag",
      },      {
        Code: "identifier",
        Expression: "BodyStructure.identifier",
      },      {
        Code: "location",
        Expression: "BodyStructure.location",
      },      {
        Code: "morphology",
        Expression: "BodyStructure.morphology",
      },      {
        Code: "patient",
        Expression: "BodyStructure.patient",
      },    },    "Bundle": {      {
        Code: "_id",
        Expression: "Bundle.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Bundle.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Bundle.meta.profile",
      },      {
        Code: "_security",
        Expression: "Bundle.meta.security",
      },      {
        Code: "_source",
        Expression: "Bundle.meta.source",
      },      {
        Code: "_tag",
        Expression: "Bundle.meta.tag",
      },      {
        Code: "_id",
        Expression: "Bundle.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Bundle.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Bundle.meta.profile",
      },      {
        Code: "_security",
        Expression: "Bundle.meta.security",
      },      {
        Code: "_source",
        Expression: "Bundle.meta.source",
      },      {
        Code: "_tag",
        Expression: "Bundle.meta.tag",
      },      {
        Code: "composition",
        Expression: "Bundle.entry[0].resource",
      },      {
        Code: "identifier",
        Expression: "Bundle.identifier",
      },      {
        Code: "message",
        Expression: "Bundle.entry[0].resource",
      },      {
        Code: "timestamp",
        Expression: "Bundle.timestamp",
      },      {
        Code: "type",
        Expression: "Bundle.type",
      },    },    "CapabilityStatement": {      {
        Code: "_id",
        Expression: "CapabilityStatement.id",
      },      {
        Code: "_lastUpdated",
        Expression: "CapabilityStatement.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "CapabilityStatement.meta.profile",
      },      {
        Code: "_security",
        Expression: "CapabilityStatement.meta.security",
      },      {
        Code: "_source",
        Expression: "CapabilityStatement.meta.source",
      },      {
        Code: "_tag",
        Expression: "CapabilityStatement.meta.tag",
      },      {
        Code: "_id",
        Expression: "CapabilityStatement.id",
      },      {
        Code: "_lastUpdated",
        Expression: "CapabilityStatement.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "CapabilityStatement.meta.profile",
      },      {
        Code: "_security",
        Expression: "CapabilityStatement.meta.security",
      },      {
        Code: "_source",
        Expression: "CapabilityStatement.meta.source",
      },      {
        Code: "_tag",
        Expression: "CapabilityStatement.meta.tag",
      },      {
        Code: "context",
        Expression: "",
      },      {
        Code: "context-quantity",
        Expression: "",
      },      {
        Code: "context-type",
        Expression: "",
      },      {
        Code: "date",
        Expression: "",
      },      {
        Code: "description",
        Expression: "",
      },      {
        Code: "fhirversion",
        Expression: "CapabilityStatement.version",
      },      {
        Code: "format",
        Expression: "CapabilityStatement.format",
      },      {
        Code: "guide",
        Expression: "CapabilityStatement.implementationGuide",
      },      {
        Code: "jurisdiction",
        Expression: "",
      },      {
        Code: "mode",
        Expression: "CapabilityStatement.rest.mode",
      },      {
        Code: "name",
        Expression: "",
      },      {
        Code: "publisher",
        Expression: "",
      },      {
        Code: "resource",
        Expression: "CapabilityStatement.rest.resource.type",
      },      {
        Code: "resource-profile",
        Expression: "CapabilityStatement.rest.resource.profile",
      },      {
        Code: "security-service",
        Expression: "CapabilityStatement.rest.security.service",
      },      {
        Code: "software",
        Expression: "CapabilityStatement.software.name",
      },      {
        Code: "status",
        Expression: "",
      },      {
        Code: "supported-profile",
        Expression: "CapabilityStatement.rest.resource.supportedProfile",
      },      {
        Code: "title",
        Expression: "",
      },      {
        Code: "url",
        Expression: "",
      },      {
        Code: "version",
        Expression: "",
      },      {
        Code: "context-type-quantity",
        Expression: "",
      },      {
        Code: "context-type-value",
        Expression: "",
      },    },    "CodeSystem": {      {
        Code: "_id",
        Expression: "CodeSystem.id",
      },      {
        Code: "_lastUpdated",
        Expression: "CodeSystem.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "CodeSystem.meta.profile",
      },      {
        Code: "_security",
        Expression: "CodeSystem.meta.security",
      },      {
        Code: "_source",
        Expression: "CodeSystem.meta.source",
      },      {
        Code: "_tag",
        Expression: "CodeSystem.meta.tag",
      },      {
        Code: "_id",
        Expression: "CodeSystem.id",
      },      {
        Code: "_lastUpdated",
        Expression: "CodeSystem.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "CodeSystem.meta.profile",
      },      {
        Code: "_security",
        Expression: "CodeSystem.meta.security",
      },      {
        Code: "_source",
        Expression: "CodeSystem.meta.source",
      },      {
        Code: "_tag",
        Expression: "CodeSystem.meta.tag",
      },      {
        Code: "context",
        Expression: "",
      },      {
        Code: "context-quantity",
        Expression: "",
      },      {
        Code: "context-type",
        Expression: "",
      },      {
        Code: "date",
        Expression: "",
      },      {
        Code: "description",
        Expression: "",
      },      {
        Code: "jurisdiction",
        Expression: "",
      },      {
        Code: "name",
        Expression: "",
      },      {
        Code: "publisher",
        Expression: "",
      },      {
        Code: "status",
        Expression: "",
      },      {
        Code: "title",
        Expression: "",
      },      {
        Code: "url",
        Expression: "",
      },      {
        Code: "version",
        Expression: "",
      },      {
        Code: "context-type-quantity",
        Expression: "",
      },      {
        Code: "context-type-value",
        Expression: "",
      },      {
        Code: "code",
        Expression: "CodeSystem.concept.code",
      },      {
        Code: "content-mode",
        Expression: "CodeSystem.content",
      },      {
        Code: "identifier",
        Expression: "",
      },      {
        Code: "language",
        Expression: "CodeSystem.concept.designation.language",
      },      {
        Code: "supplements",
        Expression: "CodeSystem.supplements",
      },      {
        Code: "system",
        Expression: "CodeSystem.url",
      },    },    "CompartmentDefinition": {      {
        Code: "_id",
        Expression: "CompartmentDefinition.id",
      },      {
        Code: "_lastUpdated",
        Expression: "CompartmentDefinition.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "CompartmentDefinition.meta.profile",
      },      {
        Code: "_security",
        Expression: "CompartmentDefinition.meta.security",
      },      {
        Code: "_source",
        Expression: "CompartmentDefinition.meta.source",
      },      {
        Code: "_tag",
        Expression: "CompartmentDefinition.meta.tag",
      },      {
        Code: "_id",
        Expression: "CompartmentDefinition.id",
      },      {
        Code: "_lastUpdated",
        Expression: "CompartmentDefinition.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "CompartmentDefinition.meta.profile",
      },      {
        Code: "_security",
        Expression: "CompartmentDefinition.meta.security",
      },      {
        Code: "_source",
        Expression: "CompartmentDefinition.meta.source",
      },      {
        Code: "_tag",
        Expression: "CompartmentDefinition.meta.tag",
      },      {
        Code: "context",
        Expression: "",
      },      {
        Code: "context-quantity",
        Expression: "",
      },      {
        Code: "context-type",
        Expression: "",
      },      {
        Code: "date",
        Expression: "",
      },      {
        Code: "description",
        Expression: "",
      },      {
        Code: "name",
        Expression: "",
      },      {
        Code: "publisher",
        Expression: "",
      },      {
        Code: "status",
        Expression: "",
      },      {
        Code: "url",
        Expression: "",
      },      {
        Code: "version",
        Expression: "",
      },      {
        Code: "context-type-quantity",
        Expression: "",
      },      {
        Code: "context-type-value",
        Expression: "",
      },      {
        Code: "code",
        Expression: "CompartmentDefinition.code",
      },      {
        Code: "resource",
        Expression: "CompartmentDefinition.resource.code",
      },    },    "ConceptMap": {      {
        Code: "_id",
        Expression: "ConceptMap.id",
      },      {
        Code: "_lastUpdated",
        Expression: "ConceptMap.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "ConceptMap.meta.profile",
      },      {
        Code: "_security",
        Expression: "ConceptMap.meta.security",
      },      {
        Code: "_source",
        Expression: "ConceptMap.meta.source",
      },      {
        Code: "_tag",
        Expression: "ConceptMap.meta.tag",
      },      {
        Code: "_id",
        Expression: "ConceptMap.id",
      },      {
        Code: "_lastUpdated",
        Expression: "ConceptMap.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "ConceptMap.meta.profile",
      },      {
        Code: "_security",
        Expression: "ConceptMap.meta.security",
      },      {
        Code: "_source",
        Expression: "ConceptMap.meta.source",
      },      {
        Code: "_tag",
        Expression: "ConceptMap.meta.tag",
      },      {
        Code: "context",
        Expression: "",
      },      {
        Code: "context-quantity",
        Expression: "",
      },      {
        Code: "context-type",
        Expression: "",
      },      {
        Code: "date",
        Expression: "",
      },      {
        Code: "description",
        Expression: "",
      },      {
        Code: "jurisdiction",
        Expression: "",
      },      {
        Code: "name",
        Expression: "",
      },      {
        Code: "publisher",
        Expression: "",
      },      {
        Code: "status",
        Expression: "",
      },      {
        Code: "title",
        Expression: "",
      },      {
        Code: "url",
        Expression: "",
      },      {
        Code: "version",
        Expression: "",
      },      {
        Code: "context-type-quantity",
        Expression: "",
      },      {
        Code: "context-type-value",
        Expression: "",
      },      {
        Code: "identifier",
        Expression: "",
      },      {
        Code: "dependson",
        Expression: "ConceptMap.group.element.target.dependsOn.property",
      },      {
        Code: "other",
        Expression: "ConceptMap.group.unmapped.url",
      },      {
        Code: "product",
        Expression: "ConceptMap.group.element.target.product.property",
      },      {
        Code: "source",
        Expression: "(ConceptMap.source as canonical)",
      },      {
        Code: "source-code",
        Expression: "ConceptMap.group.element.code",
      },      {
        Code: "source-system",
        Expression: "ConceptMap.group.source",
      },      {
        Code: "source-uri",
        Expression: "(ConceptMap.source as uri)",
      },      {
        Code: "target",
        Expression: "(ConceptMap.target as canonical)",
      },      {
        Code: "target-code",
        Expression: "ConceptMap.group.element.target.code",
      },      {
        Code: "target-system",
        Expression: "ConceptMap.group.target",
      },      {
        Code: "target-uri",
        Expression: "(ConceptMap.target as uri)",
      },    },    "GraphDefinition": {      {
        Code: "_id",
        Expression: "GraphDefinition.id",
      },      {
        Code: "_lastUpdated",
        Expression: "GraphDefinition.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "GraphDefinition.meta.profile",
      },      {
        Code: "_security",
        Expression: "GraphDefinition.meta.security",
      },      {
        Code: "_source",
        Expression: "GraphDefinition.meta.source",
      },      {
        Code: "_tag",
        Expression: "GraphDefinition.meta.tag",
      },      {
        Code: "_id",
        Expression: "GraphDefinition.id",
      },      {
        Code: "_lastUpdated",
        Expression: "GraphDefinition.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "GraphDefinition.meta.profile",
      },      {
        Code: "_security",
        Expression: "GraphDefinition.meta.security",
      },      {
        Code: "_source",
        Expression: "GraphDefinition.meta.source",
      },      {
        Code: "_tag",
        Expression: "GraphDefinition.meta.tag",
      },      {
        Code: "context",
        Expression: "",
      },      {
        Code: "context-quantity",
        Expression: "",
      },      {
        Code: "context-type",
        Expression: "",
      },      {
        Code: "date",
        Expression: "",
      },      {
        Code: "description",
        Expression: "",
      },      {
        Code: "jurisdiction",
        Expression: "",
      },      {
        Code: "name",
        Expression: "",
      },      {
        Code: "publisher",
        Expression: "",
      },      {
        Code: "status",
        Expression: "",
      },      {
        Code: "url",
        Expression: "",
      },      {
        Code: "version",
        Expression: "",
      },      {
        Code: "context-type-quantity",
        Expression: "",
      },      {
        Code: "context-type-value",
        Expression: "",
      },      {
        Code: "start",
        Expression: "GraphDefinition.start",
      },    },    "ImplementationGuide": {      {
        Code: "_id",
        Expression: "ImplementationGuide.id",
      },      {
        Code: "_lastUpdated",
        Expression: "ImplementationGuide.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "ImplementationGuide.meta.profile",
      },      {
        Code: "_security",
        Expression: "ImplementationGuide.meta.security",
      },      {
        Code: "_source",
        Expression: "ImplementationGuide.meta.source",
      },      {
        Code: "_tag",
        Expression: "ImplementationGuide.meta.tag",
      },      {
        Code: "_id",
        Expression: "ImplementationGuide.id",
      },      {
        Code: "_lastUpdated",
        Expression: "ImplementationGuide.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "ImplementationGuide.meta.profile",
      },      {
        Code: "_security",
        Expression: "ImplementationGuide.meta.security",
      },      {
        Code: "_source",
        Expression: "ImplementationGuide.meta.source",
      },      {
        Code: "_tag",
        Expression: "ImplementationGuide.meta.tag",
      },      {
        Code: "context",
        Expression: "",
      },      {
        Code: "context-quantity",
        Expression: "",
      },      {
        Code: "context-type",
        Expression: "",
      },      {
        Code: "date",
        Expression: "",
      },      {
        Code: "description",
        Expression: "",
      },      {
        Code: "jurisdiction",
        Expression: "",
      },      {
        Code: "name",
        Expression: "",
      },      {
        Code: "publisher",
        Expression: "",
      },      {
        Code: "status",
        Expression: "",
      },      {
        Code: "title",
        Expression: "",
      },      {
        Code: "url",
        Expression: "",
      },      {
        Code: "version",
        Expression: "",
      },      {
        Code: "context-type-quantity",
        Expression: "",
      },      {
        Code: "context-type-value",
        Expression: "",
      },      {
        Code: "depends-on",
        Expression: "ImplementationGuide.dependsOn.uri",
      },      {
        Code: "experimental",
        Expression: "ImplementationGuide.experimental",
      },      {
        Code: "global",
        Expression: "ImplementationGuide.global.profile",
      },      {
        Code: "resource",
        Expression: "ImplementationGuide.definition.resource.reference",
      },    },    "MessageDefinition": {      {
        Code: "_id",
        Expression: "MessageDefinition.id",
      },      {
        Code: "_lastUpdated",
        Expression: "MessageDefinition.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "MessageDefinition.meta.profile",
      },      {
        Code: "_security",
        Expression: "MessageDefinition.meta.security",
      },      {
        Code: "_source",
        Expression: "MessageDefinition.meta.source",
      },      {
        Code: "_tag",
        Expression: "MessageDefinition.meta.tag",
      },      {
        Code: "_id",
        Expression: "MessageDefinition.id",
      },      {
        Code: "_lastUpdated",
        Expression: "MessageDefinition.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "MessageDefinition.meta.profile",
      },      {
        Code: "_security",
        Expression: "MessageDefinition.meta.security",
      },      {
        Code: "_source",
        Expression: "MessageDefinition.meta.source",
      },      {
        Code: "_tag",
        Expression: "MessageDefinition.meta.tag",
      },      {
        Code: "context",
        Expression: "",
      },      {
        Code: "context-quantity",
        Expression: "",
      },      {
        Code: "context-type",
        Expression: "",
      },      {
        Code: "date",
        Expression: "",
      },      {
        Code: "description",
        Expression: "",
      },      {
        Code: "jurisdiction",
        Expression: "",
      },      {
        Code: "name",
        Expression: "",
      },      {
        Code: "publisher",
        Expression: "",
      },      {
        Code: "status",
        Expression: "",
      },      {
        Code: "title",
        Expression: "",
      },      {
        Code: "url",
        Expression: "",
      },      {
        Code: "version",
        Expression: "",
      },      {
        Code: "context-type-quantity",
        Expression: "",
      },      {
        Code: "context-type-value",
        Expression: "",
      },      {
        Code: "identifier",
        Expression: "",
      },      {
        Code: "category",
        Expression: "MessageDefinition.category",
      },      {
        Code: "event",
        Expression: "MessageDefinition.event",
      },      {
        Code: "focus",
        Expression: "MessageDefinition.focus.code",
      },      {
        Code: "parent",
        Expression: "MessageDefinition.parent",
      },    },    "NamingSystem": {      {
        Code: "_id",
        Expression: "NamingSystem.id",
      },      {
        Code: "_lastUpdated",
        Expression: "NamingSystem.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "NamingSystem.meta.profile",
      },      {
        Code: "_security",
        Expression: "NamingSystem.meta.security",
      },      {
        Code: "_source",
        Expression: "NamingSystem.meta.source",
      },      {
        Code: "_tag",
        Expression: "NamingSystem.meta.tag",
      },      {
        Code: "_id",
        Expression: "NamingSystem.id",
      },      {
        Code: "_lastUpdated",
        Expression: "NamingSystem.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "NamingSystem.meta.profile",
      },      {
        Code: "_security",
        Expression: "NamingSystem.meta.security",
      },      {
        Code: "_source",
        Expression: "NamingSystem.meta.source",
      },      {
        Code: "_tag",
        Expression: "NamingSystem.meta.tag",
      },      {
        Code: "context",
        Expression: "",
      },      {
        Code: "context-quantity",
        Expression: "",
      },      {
        Code: "context-type",
        Expression: "",
      },      {
        Code: "date",
        Expression: "",
      },      {
        Code: "description",
        Expression: "",
      },      {
        Code: "jurisdiction",
        Expression: "",
      },      {
        Code: "name",
        Expression: "",
      },      {
        Code: "publisher",
        Expression: "",
      },      {
        Code: "status",
        Expression: "",
      },      {
        Code: "context-type-quantity",
        Expression: "",
      },      {
        Code: "context-type-value",
        Expression: "",
      },      {
        Code: "contact",
        Expression: "NamingSystem.contact.name",
      },      {
        Code: "id-type",
        Expression: "NamingSystem.uniqueId.type",
      },      {
        Code: "kind",
        Expression: "NamingSystem.kind",
      },      {
        Code: "period",
        Expression: "NamingSystem.uniqueId.period",
      },      {
        Code: "responsible",
        Expression: "NamingSystem.responsible",
      },      {
        Code: "telecom",
        Expression: "NamingSystem.contact.telecom",
      },      {
        Code: "type",
        Expression: "NamingSystem.type",
      },      {
        Code: "value",
        Expression: "NamingSystem.uniqueId.value",
      },    },    "OperationDefinition": {      {
        Code: "_id",
        Expression: "OperationDefinition.id",
      },      {
        Code: "_lastUpdated",
        Expression: "OperationDefinition.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "OperationDefinition.meta.profile",
      },      {
        Code: "_security",
        Expression: "OperationDefinition.meta.security",
      },      {
        Code: "_source",
        Expression: "OperationDefinition.meta.source",
      },      {
        Code: "_tag",
        Expression: "OperationDefinition.meta.tag",
      },      {
        Code: "_id",
        Expression: "OperationDefinition.id",
      },      {
        Code: "_lastUpdated",
        Expression: "OperationDefinition.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "OperationDefinition.meta.profile",
      },      {
        Code: "_security",
        Expression: "OperationDefinition.meta.security",
      },      {
        Code: "_source",
        Expression: "OperationDefinition.meta.source",
      },      {
        Code: "_tag",
        Expression: "OperationDefinition.meta.tag",
      },      {
        Code: "context",
        Expression: "",
      },      {
        Code: "context-quantity",
        Expression: "",
      },      {
        Code: "context-type",
        Expression: "",
      },      {
        Code: "date",
        Expression: "",
      },      {
        Code: "description",
        Expression: "",
      },      {
        Code: "jurisdiction",
        Expression: "",
      },      {
        Code: "name",
        Expression: "",
      },      {
        Code: "publisher",
        Expression: "",
      },      {
        Code: "status",
        Expression: "",
      },      {
        Code: "title",
        Expression: "",
      },      {
        Code: "url",
        Expression: "",
      },      {
        Code: "version",
        Expression: "",
      },      {
        Code: "context-type-quantity",
        Expression: "",
      },      {
        Code: "context-type-value",
        Expression: "",
      },      {
        Code: "base",
        Expression: "OperationDefinition.base",
      },      {
        Code: "code",
        Expression: "OperationDefinition.code",
      },      {
        Code: "input-profile",
        Expression: "OperationDefinition.inputProfile",
      },      {
        Code: "instance",
        Expression: "OperationDefinition.instance",
      },      {
        Code: "kind",
        Expression: "OperationDefinition.kind",
      },      {
        Code: "output-profile",
        Expression: "OperationDefinition.outputProfile",
      },      {
        Code: "system",
        Expression: "OperationDefinition.system",
      },      {
        Code: "type",
        Expression: "OperationDefinition.type",
      },    },    "SearchParameter": {      {
        Code: "_id",
        Expression: "SearchParameter.id",
      },      {
        Code: "_lastUpdated",
        Expression: "SearchParameter.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "SearchParameter.meta.profile",
      },      {
        Code: "_security",
        Expression: "SearchParameter.meta.security",
      },      {
        Code: "_source",
        Expression: "SearchParameter.meta.source",
      },      {
        Code: "_tag",
        Expression: "SearchParameter.meta.tag",
      },      {
        Code: "_id",
        Expression: "SearchParameter.id",
      },      {
        Code: "_lastUpdated",
        Expression: "SearchParameter.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "SearchParameter.meta.profile",
      },      {
        Code: "_security",
        Expression: "SearchParameter.meta.security",
      },      {
        Code: "_source",
        Expression: "SearchParameter.meta.source",
      },      {
        Code: "_tag",
        Expression: "SearchParameter.meta.tag",
      },      {
        Code: "context",
        Expression: "",
      },      {
        Code: "context-quantity",
        Expression: "",
      },      {
        Code: "context-type",
        Expression: "",
      },      {
        Code: "date",
        Expression: "",
      },      {
        Code: "description",
        Expression: "",
      },      {
        Code: "jurisdiction",
        Expression: "",
      },      {
        Code: "name",
        Expression: "",
      },      {
        Code: "publisher",
        Expression: "",
      },      {
        Code: "status",
        Expression: "",
      },      {
        Code: "url",
        Expression: "",
      },      {
        Code: "version",
        Expression: "",
      },      {
        Code: "context-type-quantity",
        Expression: "",
      },      {
        Code: "context-type-value",
        Expression: "",
      },      {
        Code: "base",
        Expression: "SearchParameter.base",
      },      {
        Code: "code",
        Expression: "SearchParameter.code",
      },      {
        Code: "component",
        Expression: "SearchParameter.component.definition",
      },      {
        Code: "derived-from",
        Expression: "SearchParameter.derivedFrom",
      },      {
        Code: "target",
        Expression: "SearchParameter.target",
      },      {
        Code: "type",
        Expression: "SearchParameter.type",
      },    },    "StructureDefinition": {      {
        Code: "_id",
        Expression: "StructureDefinition.id",
      },      {
        Code: "_lastUpdated",
        Expression: "StructureDefinition.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "StructureDefinition.meta.profile",
      },      {
        Code: "_security",
        Expression: "StructureDefinition.meta.security",
      },      {
        Code: "_source",
        Expression: "StructureDefinition.meta.source",
      },      {
        Code: "_tag",
        Expression: "StructureDefinition.meta.tag",
      },      {
        Code: "_id",
        Expression: "StructureDefinition.id",
      },      {
        Code: "_lastUpdated",
        Expression: "StructureDefinition.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "StructureDefinition.meta.profile",
      },      {
        Code: "_security",
        Expression: "StructureDefinition.meta.security",
      },      {
        Code: "_source",
        Expression: "StructureDefinition.meta.source",
      },      {
        Code: "_tag",
        Expression: "StructureDefinition.meta.tag",
      },      {
        Code: "context",
        Expression: "",
      },      {
        Code: "context-quantity",
        Expression: "",
      },      {
        Code: "context-type",
        Expression: "",
      },      {
        Code: "date",
        Expression: "",
      },      {
        Code: "description",
        Expression: "",
      },      {
        Code: "jurisdiction",
        Expression: "",
      },      {
        Code: "name",
        Expression: "",
      },      {
        Code: "publisher",
        Expression: "",
      },      {
        Code: "status",
        Expression: "",
      },      {
        Code: "title",
        Expression: "",
      },      {
        Code: "url",
        Expression: "",
      },      {
        Code: "version",
        Expression: "",
      },      {
        Code: "context-type-quantity",
        Expression: "",
      },      {
        Code: "context-type-value",
        Expression: "",
      },      {
        Code: "identifier",
        Expression: "",
      },      {
        Code: "abstract",
        Expression: "StructureDefinition.abstract",
      },      {
        Code: "base",
        Expression: "StructureDefinition.baseDefinition",
      },      {
        Code: "base-path",
        Expression: "",
      },      {
        Code: "derivation",
        Expression: "StructureDefinition.derivation",
      },      {
        Code: "experimental",
        Expression: "StructureDefinition.experimental",
      },      {
        Code: "ext-context",
        Expression: "StructureDefinition.context.type",
      },      {
        Code: "keyword",
        Expression: "StructureDefinition.keyword",
      },      {
        Code: "kind",
        Expression: "StructureDefinition.kind",
      },      {
        Code: "path",
        Expression: "",
      },      {
        Code: "type",
        Expression: "StructureDefinition.type",
      },      {
        Code: "valueset",
        Expression: "StructureDefinition.snapshot.element.binding.valueSet",
      },    },    "StructureMap": {      {
        Code: "_id",
        Expression: "StructureMap.id",
      },      {
        Code: "_lastUpdated",
        Expression: "StructureMap.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "StructureMap.meta.profile",
      },      {
        Code: "_security",
        Expression: "StructureMap.meta.security",
      },      {
        Code: "_source",
        Expression: "StructureMap.meta.source",
      },      {
        Code: "_tag",
        Expression: "StructureMap.meta.tag",
      },      {
        Code: "_id",
        Expression: "StructureMap.id",
      },      {
        Code: "_lastUpdated",
        Expression: "StructureMap.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "StructureMap.meta.profile",
      },      {
        Code: "_security",
        Expression: "StructureMap.meta.security",
      },      {
        Code: "_source",
        Expression: "StructureMap.meta.source",
      },      {
        Code: "_tag",
        Expression: "StructureMap.meta.tag",
      },      {
        Code: "context",
        Expression: "",
      },      {
        Code: "context-quantity",
        Expression: "",
      },      {
        Code: "context-type",
        Expression: "",
      },      {
        Code: "date",
        Expression: "",
      },      {
        Code: "description",
        Expression: "",
      },      {
        Code: "jurisdiction",
        Expression: "",
      },      {
        Code: "name",
        Expression: "",
      },      {
        Code: "publisher",
        Expression: "",
      },      {
        Code: "status",
        Expression: "",
      },      {
        Code: "title",
        Expression: "",
      },      {
        Code: "url",
        Expression: "",
      },      {
        Code: "version",
        Expression: "",
      },      {
        Code: "context-type-quantity",
        Expression: "",
      },      {
        Code: "context-type-value",
        Expression: "",
      },      {
        Code: "identifier",
        Expression: "",
      },    },    "TerminologyCapabilities": {      {
        Code: "_id",
        Expression: "TerminologyCapabilities.id",
      },      {
        Code: "_lastUpdated",
        Expression: "TerminologyCapabilities.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "TerminologyCapabilities.meta.profile",
      },      {
        Code: "_security",
        Expression: "TerminologyCapabilities.meta.security",
      },      {
        Code: "_source",
        Expression: "TerminologyCapabilities.meta.source",
      },      {
        Code: "_tag",
        Expression: "TerminologyCapabilities.meta.tag",
      },      {
        Code: "_id",
        Expression: "TerminologyCapabilities.id",
      },      {
        Code: "_lastUpdated",
        Expression: "TerminologyCapabilities.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "TerminologyCapabilities.meta.profile",
      },      {
        Code: "_security",
        Expression: "TerminologyCapabilities.meta.security",
      },      {
        Code: "_source",
        Expression: "TerminologyCapabilities.meta.source",
      },      {
        Code: "_tag",
        Expression: "TerminologyCapabilities.meta.tag",
      },      {
        Code: "context",
        Expression: "",
      },      {
        Code: "context-quantity",
        Expression: "",
      },      {
        Code: "context-type",
        Expression: "",
      },      {
        Code: "date",
        Expression: "",
      },      {
        Code: "description",
        Expression: "",
      },      {
        Code: "jurisdiction",
        Expression: "",
      },      {
        Code: "name",
        Expression: "",
      },      {
        Code: "publisher",
        Expression: "",
      },      {
        Code: "status",
        Expression: "",
      },      {
        Code: "title",
        Expression: "",
      },      {
        Code: "url",
        Expression: "",
      },      {
        Code: "version",
        Expression: "",
      },      {
        Code: "context-type-quantity",
        Expression: "",
      },      {
        Code: "context-type-value",
        Expression: "",
      },    },    "ValueSet": {      {
        Code: "_id",
        Expression: "ValueSet.id",
      },      {
        Code: "_lastUpdated",
        Expression: "ValueSet.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "ValueSet.meta.profile",
      },      {
        Code: "_security",
        Expression: "ValueSet.meta.security",
      },      {
        Code: "_source",
        Expression: "ValueSet.meta.source",
      },      {
        Code: "_tag",
        Expression: "ValueSet.meta.tag",
      },      {
        Code: "_id",
        Expression: "ValueSet.id",
      },      {
        Code: "_lastUpdated",
        Expression: "ValueSet.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "ValueSet.meta.profile",
      },      {
        Code: "_security",
        Expression: "ValueSet.meta.security",
      },      {
        Code: "_source",
        Expression: "ValueSet.meta.source",
      },      {
        Code: "_tag",
        Expression: "ValueSet.meta.tag",
      },      {
        Code: "context",
        Expression: "",
      },      {
        Code: "context-quantity",
        Expression: "",
      },      {
        Code: "context-type",
        Expression: "",
      },      {
        Code: "date",
        Expression: "",
      },      {
        Code: "description",
        Expression: "",
      },      {
        Code: "jurisdiction",
        Expression: "",
      },      {
        Code: "name",
        Expression: "",
      },      {
        Code: "publisher",
        Expression: "",
      },      {
        Code: "status",
        Expression: "",
      },      {
        Code: "title",
        Expression: "",
      },      {
        Code: "url",
        Expression: "",
      },      {
        Code: "version",
        Expression: "",
      },      {
        Code: "context-type-quantity",
        Expression: "",
      },      {
        Code: "context-type-value",
        Expression: "",
      },      {
        Code: "identifier",
        Expression: "",
      },      {
        Code: "code",
        Expression: "",
      },      {
        Code: "expansion",
        Expression: "ValueSet.expansion.identifier",
      },      {
        Code: "reference",
        Expression: "ValueSet.compose.include.system",
      },    },    "ChargeItem": {      {
        Code: "_id",
        Expression: "ChargeItem.id",
      },      {
        Code: "_lastUpdated",
        Expression: "ChargeItem.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "ChargeItem.meta.profile",
      },      {
        Code: "_security",
        Expression: "ChargeItem.meta.security",
      },      {
        Code: "_source",
        Expression: "ChargeItem.meta.source",
      },      {
        Code: "_tag",
        Expression: "ChargeItem.meta.tag",
      },      {
        Code: "_id",
        Expression: "ChargeItem.id",
      },      {
        Code: "_lastUpdated",
        Expression: "ChargeItem.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "ChargeItem.meta.profile",
      },      {
        Code: "_security",
        Expression: "ChargeItem.meta.security",
      },      {
        Code: "_source",
        Expression: "ChargeItem.meta.source",
      },      {
        Code: "_tag",
        Expression: "ChargeItem.meta.tag",
      },      {
        Code: "account",
        Expression: "ChargeItem.account",
      },      {
        Code: "code",
        Expression: "ChargeItem.code",
      },      {
        Code: "context",
        Expression: "ChargeItem.context",
      },      {
        Code: "entered-date",
        Expression: "ChargeItem.enteredDate",
      },      {
        Code: "enterer",
        Expression: "ChargeItem.enterer",
      },      {
        Code: "factor-override",
        Expression: "ChargeItem.factorOverride",
      },      {
        Code: "identifier",
        Expression: "ChargeItem.identifier",
      },      {
        Code: "occurrence",
        Expression: "ChargeItem.occurrence",
      },      {
        Code: "patient",
        Expression: "ChargeItem.subject.where(resolve() is Patient)",
      },      {
        Code: "performer-actor",
        Expression: "ChargeItem.performer.actor",
      },      {
        Code: "performer-function",
        Expression: "ChargeItem.performer.function",
      },      {
        Code: "performing-organization",
        Expression: "ChargeItem.performingOrganization",
      },      {
        Code: "price-override",
        Expression: "ChargeItem.priceOverride",
      },      {
        Code: "quantity",
        Expression: "ChargeItem.quantity",
      },      {
        Code: "requesting-organization",
        Expression: "ChargeItem.requestingOrganization",
      },      {
        Code: "service",
        Expression: "ChargeItem.service",
      },      {
        Code: "subject",
        Expression: "ChargeItem.subject",
      },    },    "ChargeItemDefinition": {      {
        Code: "_id",
        Expression: "ChargeItemDefinition.id",
      },      {
        Code: "_lastUpdated",
        Expression: "ChargeItemDefinition.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "ChargeItemDefinition.meta.profile",
      },      {
        Code: "_security",
        Expression: "ChargeItemDefinition.meta.security",
      },      {
        Code: "_source",
        Expression: "ChargeItemDefinition.meta.source",
      },      {
        Code: "_tag",
        Expression: "ChargeItemDefinition.meta.tag",
      },      {
        Code: "_id",
        Expression: "ChargeItemDefinition.id",
      },      {
        Code: "_lastUpdated",
        Expression: "ChargeItemDefinition.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "ChargeItemDefinition.meta.profile",
      },      {
        Code: "_security",
        Expression: "ChargeItemDefinition.meta.security",
      },      {
        Code: "_source",
        Expression: "ChargeItemDefinition.meta.source",
      },      {
        Code: "_tag",
        Expression: "ChargeItemDefinition.meta.tag",
      },      {
        Code: "context",
        Expression: "(ChargeItemDefinition.useContext.value as CodeableConcept)",
      },      {
        Code: "context-quantity",
        Expression: "",
      },      {
        Code: "context-type",
        Expression: "ChargeItemDefinition.useContext.code",
      },      {
        Code: "date",
        Expression: "ChargeItemDefinition.date",
      },      {
        Code: "description",
        Expression: "ChargeItemDefinition.description",
      },      {
        Code: "effective",
        Expression: "ChargeItemDefinition.effectivePeriod",
      },      {
        Code: "identifier",
        Expression: "ChargeItemDefinition.identifier",
      },      {
        Code: "jurisdiction",
        Expression: "ChargeItemDefinition.jurisdiction",
      },      {
        Code: "publisher",
        Expression: "ChargeItemDefinition.publisher",
      },      {
        Code: "status",
        Expression: "ChargeItemDefinition.status",
      },      {
        Code: "title",
        Expression: "ChargeItemDefinition.title",
      },      {
        Code: "url",
        Expression: "ChargeItemDefinition.url",
      },      {
        Code: "version",
        Expression: "ChargeItemDefinition.version",
      },      {
        Code: "context-type-quantity",
        Expression: "ChargeItemDefinition.useContext",
      },      {
        Code: "context-type-value",
        Expression: "ChargeItemDefinition.useContext",
      },    },    "Claim": {      {
        Code: "_id",
        Expression: "Claim.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Claim.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Claim.meta.profile",
      },      {
        Code: "_security",
        Expression: "Claim.meta.security",
      },      {
        Code: "_source",
        Expression: "Claim.meta.source",
      },      {
        Code: "_tag",
        Expression: "Claim.meta.tag",
      },      {
        Code: "_id",
        Expression: "Claim.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Claim.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Claim.meta.profile",
      },      {
        Code: "_security",
        Expression: "Claim.meta.security",
      },      {
        Code: "_source",
        Expression: "Claim.meta.source",
      },      {
        Code: "_tag",
        Expression: "Claim.meta.tag",
      },      {
        Code: "care-team",
        Expression: "Claim.careTeam.provider",
      },      {
        Code: "created",
        Expression: "Claim.created",
      },      {
        Code: "detail-udi",
        Expression: "Claim.item.detail.udi",
      },      {
        Code: "encounter",
        Expression: "Claim.item.encounter",
      },      {
        Code: "enterer",
        Expression: "Claim.enterer",
      },      {
        Code: "facility",
        Expression: "Claim.facility",
      },      {
        Code: "identifier",
        Expression: "Claim.identifier",
      },      {
        Code: "insurer",
        Expression: "Claim.insurer",
      },      {
        Code: "item-udi",
        Expression: "Claim.item.udi",
      },      {
        Code: "patient",
        Expression: "Claim.patient",
      },      {
        Code: "payee",
        Expression: "Claim.payee.party",
      },      {
        Code: "priority",
        Expression: "Claim.priority",
      },      {
        Code: "procedure-udi",
        Expression: "Claim.procedure.udi",
      },      {
        Code: "provider",
        Expression: "Claim.provider",
      },      {
        Code: "status",
        Expression: "Claim.status",
      },      {
        Code: "subdetail-udi",
        Expression: "Claim.item.detail.subDetail.udi",
      },      {
        Code: "use",
        Expression: "Claim.use",
      },    },    "ClaimResponse": {      {
        Code: "_id",
        Expression: "ClaimResponse.id",
      },      {
        Code: "_lastUpdated",
        Expression: "ClaimResponse.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "ClaimResponse.meta.profile",
      },      {
        Code: "_security",
        Expression: "ClaimResponse.meta.security",
      },      {
        Code: "_source",
        Expression: "ClaimResponse.meta.source",
      },      {
        Code: "_tag",
        Expression: "ClaimResponse.meta.tag",
      },      {
        Code: "_id",
        Expression: "ClaimResponse.id",
      },      {
        Code: "_lastUpdated",
        Expression: "ClaimResponse.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "ClaimResponse.meta.profile",
      },      {
        Code: "_security",
        Expression: "ClaimResponse.meta.security",
      },      {
        Code: "_source",
        Expression: "ClaimResponse.meta.source",
      },      {
        Code: "_tag",
        Expression: "ClaimResponse.meta.tag",
      },      {
        Code: "created",
        Expression: "ClaimResponse.created",
      },      {
        Code: "disposition",
        Expression: "ClaimResponse.disposition",
      },      {
        Code: "identifier",
        Expression: "ClaimResponse.identifier",
      },      {
        Code: "insurer",
        Expression: "ClaimResponse.insurer",
      },      {
        Code: "outcome",
        Expression: "ClaimResponse.outcome",
      },      {
        Code: "patient",
        Expression: "ClaimResponse.patient",
      },      {
        Code: "payment-date",
        Expression: "ClaimResponse.payment.date",
      },      {
        Code: "request",
        Expression: "ClaimResponse.request",
      },      {
        Code: "requestor",
        Expression: "ClaimResponse.requestor",
      },      {
        Code: "status",
        Expression: "ClaimResponse.status",
      },      {
        Code: "use",
        Expression: "ClaimResponse.use",
      },    },    "Communication": {      {
        Code: "_id",
        Expression: "Communication.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Communication.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Communication.meta.profile",
      },      {
        Code: "_security",
        Expression: "Communication.meta.security",
      },      {
        Code: "_source",
        Expression: "Communication.meta.source",
      },      {
        Code: "_tag",
        Expression: "Communication.meta.tag",
      },      {
        Code: "_id",
        Expression: "Communication.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Communication.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Communication.meta.profile",
      },      {
        Code: "_security",
        Expression: "Communication.meta.security",
      },      {
        Code: "_source",
        Expression: "Communication.meta.source",
      },      {
        Code: "_tag",
        Expression: "Communication.meta.tag",
      },      {
        Code: "based-on",
        Expression: "Communication.basedOn",
      },      {
        Code: "category",
        Expression: "Communication.category",
      },      {
        Code: "encounter",
        Expression: "Communication.encounter",
      },      {
        Code: "identifier",
        Expression: "Communication.identifier",
      },      {
        Code: "instantiates-canonical",
        Expression: "Communication.instantiatesCanonical",
      },      {
        Code: "instantiates-uri",
        Expression: "Communication.instantiatesUri",
      },      {
        Code: "medium",
        Expression: "Communication.medium",
      },      {
        Code: "part-of",
        Expression: "Communication.partOf",
      },      {
        Code: "patient",
        Expression: "Communication.subject.where(resolve() is Patient)",
      },      {
        Code: "received",
        Expression: "Communication.received",
      },      {
        Code: "recipient",
        Expression: "Communication.recipient",
      },      {
        Code: "sender",
        Expression: "Communication.sender",
      },      {
        Code: "sent",
        Expression: "Communication.sent",
      },      {
        Code: "status",
        Expression: "Communication.status",
      },      {
        Code: "subject",
        Expression: "Communication.subject",
      },    },    "CommunicationRequest": {      {
        Code: "_id",
        Expression: "CommunicationRequest.id",
      },      {
        Code: "_lastUpdated",
        Expression: "CommunicationRequest.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "CommunicationRequest.meta.profile",
      },      {
        Code: "_security",
        Expression: "CommunicationRequest.meta.security",
      },      {
        Code: "_source",
        Expression: "CommunicationRequest.meta.source",
      },      {
        Code: "_tag",
        Expression: "CommunicationRequest.meta.tag",
      },      {
        Code: "_id",
        Expression: "CommunicationRequest.id",
      },      {
        Code: "_lastUpdated",
        Expression: "CommunicationRequest.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "CommunicationRequest.meta.profile",
      },      {
        Code: "_security",
        Expression: "CommunicationRequest.meta.security",
      },      {
        Code: "_source",
        Expression: "CommunicationRequest.meta.source",
      },      {
        Code: "_tag",
        Expression: "CommunicationRequest.meta.tag",
      },      {
        Code: "authored",
        Expression: "CommunicationRequest.authoredOn",
      },      {
        Code: "based-on",
        Expression: "CommunicationRequest.basedOn",
      },      {
        Code: "category",
        Expression: "CommunicationRequest.category",
      },      {
        Code: "encounter",
        Expression: "CommunicationRequest.encounter",
      },      {
        Code: "group-identifier",
        Expression: "CommunicationRequest.groupIdentifier",
      },      {
        Code: "identifier",
        Expression: "CommunicationRequest.identifier",
      },      {
        Code: "medium",
        Expression: "CommunicationRequest.medium",
      },      {
        Code: "occurrence",
        Expression: "(CommunicationRequest.occurrence as dateTime)",
      },      {
        Code: "patient",
        Expression: "CommunicationRequest.subject.where(resolve() is Patient)",
      },      {
        Code: "priority",
        Expression: "CommunicationRequest.priority",
      },      {
        Code: "recipient",
        Expression: "CommunicationRequest.recipient",
      },      {
        Code: "replaces",
        Expression: "CommunicationRequest.replaces",
      },      {
        Code: "requester",
        Expression: "CommunicationRequest.requester",
      },      {
        Code: "sender",
        Expression: "CommunicationRequest.sender",
      },      {
        Code: "status",
        Expression: "CommunicationRequest.status",
      },      {
        Code: "subject",
        Expression: "CommunicationRequest.subject",
      },    },    "Contract": {      {
        Code: "_id",
        Expression: "Contract.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Contract.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Contract.meta.profile",
      },      {
        Code: "_security",
        Expression: "Contract.meta.security",
      },      {
        Code: "_source",
        Expression: "Contract.meta.source",
      },      {
        Code: "_tag",
        Expression: "Contract.meta.tag",
      },      {
        Code: "_id",
        Expression: "Contract.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Contract.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Contract.meta.profile",
      },      {
        Code: "_security",
        Expression: "Contract.meta.security",
      },      {
        Code: "_source",
        Expression: "Contract.meta.source",
      },      {
        Code: "_tag",
        Expression: "Contract.meta.tag",
      },      {
        Code: "authority",
        Expression: "Contract.authority",
      },      {
        Code: "domain",
        Expression: "Contract.domain",
      },      {
        Code: "identifier",
        Expression: "Contract.identifier",
      },      {
        Code: "instantiates",
        Expression: "Contract.instantiatesUri",
      },      {
        Code: "issued",
        Expression: "Contract.issued",
      },      {
        Code: "patient",
        Expression: "Contract.subject.where(resolve() is Patient)",
      },      {
        Code: "signer",
        Expression: "Contract.signer.party",
      },      {
        Code: "status",
        Expression: "Contract.status",
      },      {
        Code: "subject",
        Expression: "Contract.subject",
      },      {
        Code: "url",
        Expression: "Contract.url",
      },    },    "Coverage": {      {
        Code: "_id",
        Expression: "Coverage.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Coverage.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Coverage.meta.profile",
      },      {
        Code: "_security",
        Expression: "Coverage.meta.security",
      },      {
        Code: "_source",
        Expression: "Coverage.meta.source",
      },      {
        Code: "_tag",
        Expression: "Coverage.meta.tag",
      },      {
        Code: "_id",
        Expression: "Coverage.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Coverage.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Coverage.meta.profile",
      },      {
        Code: "_security",
        Expression: "Coverage.meta.security",
      },      {
        Code: "_source",
        Expression: "Coverage.meta.source",
      },      {
        Code: "_tag",
        Expression: "Coverage.meta.tag",
      },      {
        Code: "beneficiary",
        Expression: "Coverage.beneficiary",
      },      {
        Code: "class-type",
        Expression: "Coverage.class.type",
      },      {
        Code: "class-value",
        Expression: "Coverage.class.value",
      },      {
        Code: "dependent",
        Expression: "Coverage.dependent",
      },      {
        Code: "identifier",
        Expression: "Coverage.identifier",
      },      {
        Code: "patient",
        Expression: "Coverage.beneficiary",
      },      {
        Code: "payor",
        Expression: "Coverage.payor",
      },      {
        Code: "policy-holder",
        Expression: "Coverage.policyHolder",
      },      {
        Code: "status",
        Expression: "Coverage.status",
      },      {
        Code: "subscriber",
        Expression: "Coverage.subscriber",
      },      {
        Code: "type",
        Expression: "Coverage.type",
      },    },    "CoverageEligibilityRequest": {      {
        Code: "_id",
        Expression: "CoverageEligibilityRequest.id",
      },      {
        Code: "_lastUpdated",
        Expression: "CoverageEligibilityRequest.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "CoverageEligibilityRequest.meta.profile",
      },      {
        Code: "_security",
        Expression: "CoverageEligibilityRequest.meta.security",
      },      {
        Code: "_source",
        Expression: "CoverageEligibilityRequest.meta.source",
      },      {
        Code: "_tag",
        Expression: "CoverageEligibilityRequest.meta.tag",
      },      {
        Code: "_id",
        Expression: "CoverageEligibilityRequest.id",
      },      {
        Code: "_lastUpdated",
        Expression: "CoverageEligibilityRequest.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "CoverageEligibilityRequest.meta.profile",
      },      {
        Code: "_security",
        Expression: "CoverageEligibilityRequest.meta.security",
      },      {
        Code: "_source",
        Expression: "CoverageEligibilityRequest.meta.source",
      },      {
        Code: "_tag",
        Expression: "CoverageEligibilityRequest.meta.tag",
      },      {
        Code: "created",
        Expression: "CoverageEligibilityRequest.created",
      },      {
        Code: "enterer",
        Expression: "CoverageEligibilityRequest.enterer",
      },      {
        Code: "facility",
        Expression: "CoverageEligibilityRequest.facility",
      },      {
        Code: "identifier",
        Expression: "CoverageEligibilityRequest.identifier",
      },      {
        Code: "patient",
        Expression: "CoverageEligibilityRequest.patient",
      },      {
        Code: "provider",
        Expression: "CoverageEligibilityRequest.provider",
      },      {
        Code: "status",
        Expression: "CoverageEligibilityRequest.status",
      },    },    "CoverageEligibilityResponse": {      {
        Code: "_id",
        Expression: "CoverageEligibilityResponse.id",
      },      {
        Code: "_lastUpdated",
        Expression: "CoverageEligibilityResponse.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "CoverageEligibilityResponse.meta.profile",
      },      {
        Code: "_security",
        Expression: "CoverageEligibilityResponse.meta.security",
      },      {
        Code: "_source",
        Expression: "CoverageEligibilityResponse.meta.source",
      },      {
        Code: "_tag",
        Expression: "CoverageEligibilityResponse.meta.tag",
      },      {
        Code: "_id",
        Expression: "CoverageEligibilityResponse.id",
      },      {
        Code: "_lastUpdated",
        Expression: "CoverageEligibilityResponse.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "CoverageEligibilityResponse.meta.profile",
      },      {
        Code: "_security",
        Expression: "CoverageEligibilityResponse.meta.security",
      },      {
        Code: "_source",
        Expression: "CoverageEligibilityResponse.meta.source",
      },      {
        Code: "_tag",
        Expression: "CoverageEligibilityResponse.meta.tag",
      },      {
        Code: "created",
        Expression: "CoverageEligibilityResponse.created",
      },      {
        Code: "disposition",
        Expression: "CoverageEligibilityResponse.disposition",
      },      {
        Code: "identifier",
        Expression: "CoverageEligibilityResponse.identifier",
      },      {
        Code: "insurer",
        Expression: "CoverageEligibilityResponse.insurer",
      },      {
        Code: "outcome",
        Expression: "CoverageEligibilityResponse.outcome",
      },      {
        Code: "patient",
        Expression: "CoverageEligibilityResponse.patient",
      },      {
        Code: "request",
        Expression: "CoverageEligibilityResponse.request",
      },      {
        Code: "requestor",
        Expression: "CoverageEligibilityResponse.requestor",
      },      {
        Code: "status",
        Expression: "CoverageEligibilityResponse.status",
      },    },    "Device": {      {
        Code: "_id",
        Expression: "Device.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Device.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Device.meta.profile",
      },      {
        Code: "_security",
        Expression: "Device.meta.security",
      },      {
        Code: "_source",
        Expression: "Device.meta.source",
      },      {
        Code: "_tag",
        Expression: "Device.meta.tag",
      },      {
        Code: "_id",
        Expression: "Device.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Device.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Device.meta.profile",
      },      {
        Code: "_security",
        Expression: "Device.meta.security",
      },      {
        Code: "_source",
        Expression: "Device.meta.source",
      },      {
        Code: "_tag",
        Expression: "Device.meta.tag",
      },      {
        Code: "device-name",
        Expression: "",
      },      {
        Code: "identifier",
        Expression: "Device.identifier",
      },      {
        Code: "location",
        Expression: "Device.location",
      },      {
        Code: "manufacturer",
        Expression: "Device.manufacturer",
      },      {
        Code: "model",
        Expression: "Device.modelNumber",
      },      {
        Code: "organization",
        Expression: "Device.owner",
      },      {
        Code: "patient",
        Expression: "Device.patient",
      },      {
        Code: "status",
        Expression: "Device.status",
      },      {
        Code: "type",
        Expression: "Device.type",
      },      {
        Code: "udi-carrier",
        Expression: "Device.udiCarrier.carrierHRF",
      },      {
        Code: "udi-di",
        Expression: "Device.udiCarrier.deviceIdentifier",
      },      {
        Code: "url",
        Expression: "Device.url",
      },    },    "DeviceDefinition": {      {
        Code: "_id",
        Expression: "DeviceDefinition.id",
      },      {
        Code: "_lastUpdated",
        Expression: "DeviceDefinition.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "DeviceDefinition.meta.profile",
      },      {
        Code: "_security",
        Expression: "DeviceDefinition.meta.security",
      },      {
        Code: "_source",
        Expression: "DeviceDefinition.meta.source",
      },      {
        Code: "_tag",
        Expression: "DeviceDefinition.meta.tag",
      },      {
        Code: "_id",
        Expression: "DeviceDefinition.id",
      },      {
        Code: "_lastUpdated",
        Expression: "DeviceDefinition.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "DeviceDefinition.meta.profile",
      },      {
        Code: "_security",
        Expression: "DeviceDefinition.meta.security",
      },      {
        Code: "_source",
        Expression: "DeviceDefinition.meta.source",
      },      {
        Code: "_tag",
        Expression: "DeviceDefinition.meta.tag",
      },      {
        Code: "identifier",
        Expression: "DeviceDefinition.identifier",
      },      {
        Code: "parent",
        Expression: "DeviceDefinition.parentDevice",
      },      {
        Code: "type",
        Expression: "DeviceDefinition.type",
      },    },    "DeviceMetric": {      {
        Code: "_id",
        Expression: "DeviceMetric.id",
      },      {
        Code: "_lastUpdated",
        Expression: "DeviceMetric.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "DeviceMetric.meta.profile",
      },      {
        Code: "_security",
        Expression: "DeviceMetric.meta.security",
      },      {
        Code: "_source",
        Expression: "DeviceMetric.meta.source",
      },      {
        Code: "_tag",
        Expression: "DeviceMetric.meta.tag",
      },      {
        Code: "_id",
        Expression: "DeviceMetric.id",
      },      {
        Code: "_lastUpdated",
        Expression: "DeviceMetric.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "DeviceMetric.meta.profile",
      },      {
        Code: "_security",
        Expression: "DeviceMetric.meta.security",
      },      {
        Code: "_source",
        Expression: "DeviceMetric.meta.source",
      },      {
        Code: "_tag",
        Expression: "DeviceMetric.meta.tag",
      },      {
        Code: "category",
        Expression: "DeviceMetric.category",
      },      {
        Code: "identifier",
        Expression: "DeviceMetric.identifier",
      },      {
        Code: "parent",
        Expression: "DeviceMetric.parent",
      },      {
        Code: "source",
        Expression: "DeviceMetric.source",
      },      {
        Code: "type",
        Expression: "DeviceMetric.type",
      },    },    "EffectEvidenceSynthesis": {      {
        Code: "_id",
        Expression: "EffectEvidenceSynthesis.id",
      },      {
        Code: "_lastUpdated",
        Expression: "EffectEvidenceSynthesis.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "EffectEvidenceSynthesis.meta.profile",
      },      {
        Code: "_security",
        Expression: "EffectEvidenceSynthesis.meta.security",
      },      {
        Code: "_source",
        Expression: "EffectEvidenceSynthesis.meta.source",
      },      {
        Code: "_tag",
        Expression: "EffectEvidenceSynthesis.meta.tag",
      },      {
        Code: "_id",
        Expression: "EffectEvidenceSynthesis.id",
      },      {
        Code: "_lastUpdated",
        Expression: "EffectEvidenceSynthesis.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "EffectEvidenceSynthesis.meta.profile",
      },      {
        Code: "_security",
        Expression: "EffectEvidenceSynthesis.meta.security",
      },      {
        Code: "_source",
        Expression: "EffectEvidenceSynthesis.meta.source",
      },      {
        Code: "_tag",
        Expression: "EffectEvidenceSynthesis.meta.tag",
      },      {
        Code: "context",
        Expression: "(EffectEvidenceSynthesis.useContext.value as CodeableConcept)",
      },      {
        Code: "context-quantity",
        Expression: "",
      },      {
        Code: "context-type",
        Expression: "EffectEvidenceSynthesis.useContext.code",
      },      {
        Code: "date",
        Expression: "EffectEvidenceSynthesis.date",
      },      {
        Code: "description",
        Expression: "EffectEvidenceSynthesis.description",
      },      {
        Code: "effective",
        Expression: "EffectEvidenceSynthesis.effectivePeriod",
      },      {
        Code: "identifier",
        Expression: "EffectEvidenceSynthesis.identifier",
      },      {
        Code: "jurisdiction",
        Expression: "EffectEvidenceSynthesis.jurisdiction",
      },      {
        Code: "name",
        Expression: "EffectEvidenceSynthesis.name",
      },      {
        Code: "publisher",
        Expression: "EffectEvidenceSynthesis.publisher",
      },      {
        Code: "status",
        Expression: "EffectEvidenceSynthesis.status",
      },      {
        Code: "title",
        Expression: "EffectEvidenceSynthesis.title",
      },      {
        Code: "url",
        Expression: "EffectEvidenceSynthesis.url",
      },      {
        Code: "version",
        Expression: "EffectEvidenceSynthesis.version",
      },      {
        Code: "context-type-quantity",
        Expression: "EffectEvidenceSynthesis.useContext",
      },      {
        Code: "context-type-value",
        Expression: "EffectEvidenceSynthesis.useContext",
      },    },    "Endpoint": {      {
        Code: "_id",
        Expression: "Endpoint.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Endpoint.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Endpoint.meta.profile",
      },      {
        Code: "_security",
        Expression: "Endpoint.meta.security",
      },      {
        Code: "_source",
        Expression: "Endpoint.meta.source",
      },      {
        Code: "_tag",
        Expression: "Endpoint.meta.tag",
      },      {
        Code: "_id",
        Expression: "Endpoint.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Endpoint.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Endpoint.meta.profile",
      },      {
        Code: "_security",
        Expression: "Endpoint.meta.security",
      },      {
        Code: "_source",
        Expression: "Endpoint.meta.source",
      },      {
        Code: "_tag",
        Expression: "Endpoint.meta.tag",
      },      {
        Code: "connection-type",
        Expression: "Endpoint.connectionType",
      },      {
        Code: "identifier",
        Expression: "Endpoint.identifier",
      },      {
        Code: "name",
        Expression: "Endpoint.name",
      },      {
        Code: "organization",
        Expression: "Endpoint.managingOrganization",
      },      {
        Code: "payload-type",
        Expression: "Endpoint.payloadType",
      },      {
        Code: "status",
        Expression: "Endpoint.status",
      },    },    "EnrollmentRequest": {      {
        Code: "_id",
        Expression: "EnrollmentRequest.id",
      },      {
        Code: "_lastUpdated",
        Expression: "EnrollmentRequest.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "EnrollmentRequest.meta.profile",
      },      {
        Code: "_security",
        Expression: "EnrollmentRequest.meta.security",
      },      {
        Code: "_source",
        Expression: "EnrollmentRequest.meta.source",
      },      {
        Code: "_tag",
        Expression: "EnrollmentRequest.meta.tag",
      },      {
        Code: "_id",
        Expression: "EnrollmentRequest.id",
      },      {
        Code: "_lastUpdated",
        Expression: "EnrollmentRequest.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "EnrollmentRequest.meta.profile",
      },      {
        Code: "_security",
        Expression: "EnrollmentRequest.meta.security",
      },      {
        Code: "_source",
        Expression: "EnrollmentRequest.meta.source",
      },      {
        Code: "_tag",
        Expression: "EnrollmentRequest.meta.tag",
      },      {
        Code: "identifier",
        Expression: "EnrollmentRequest.identifier",
      },      {
        Code: "patient",
        Expression: "EnrollmentRequest.candidate",
      },      {
        Code: "status",
        Expression: "EnrollmentRequest.status",
      },      {
        Code: "subject",
        Expression: "EnrollmentRequest.candidate",
      },    },    "EnrollmentResponse": {      {
        Code: "_id",
        Expression: "EnrollmentResponse.id",
      },      {
        Code: "_lastUpdated",
        Expression: "EnrollmentResponse.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "EnrollmentResponse.meta.profile",
      },      {
        Code: "_security",
        Expression: "EnrollmentResponse.meta.security",
      },      {
        Code: "_source",
        Expression: "EnrollmentResponse.meta.source",
      },      {
        Code: "_tag",
        Expression: "EnrollmentResponse.meta.tag",
      },      {
        Code: "_id",
        Expression: "EnrollmentResponse.id",
      },      {
        Code: "_lastUpdated",
        Expression: "EnrollmentResponse.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "EnrollmentResponse.meta.profile",
      },      {
        Code: "_security",
        Expression: "EnrollmentResponse.meta.security",
      },      {
        Code: "_source",
        Expression: "EnrollmentResponse.meta.source",
      },      {
        Code: "_tag",
        Expression: "EnrollmentResponse.meta.tag",
      },      {
        Code: "identifier",
        Expression: "EnrollmentResponse.identifier",
      },      {
        Code: "request",
        Expression: "EnrollmentResponse.request",
      },      {
        Code: "status",
        Expression: "EnrollmentResponse.status",
      },    },    "EventDefinition": {      {
        Code: "_id",
        Expression: "EventDefinition.id",
      },      {
        Code: "_lastUpdated",
        Expression: "EventDefinition.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "EventDefinition.meta.profile",
      },      {
        Code: "_security",
        Expression: "EventDefinition.meta.security",
      },      {
        Code: "_source",
        Expression: "EventDefinition.meta.source",
      },      {
        Code: "_tag",
        Expression: "EventDefinition.meta.tag",
      },      {
        Code: "_id",
        Expression: "EventDefinition.id",
      },      {
        Code: "_lastUpdated",
        Expression: "EventDefinition.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "EventDefinition.meta.profile",
      },      {
        Code: "_security",
        Expression: "EventDefinition.meta.security",
      },      {
        Code: "_source",
        Expression: "EventDefinition.meta.source",
      },      {
        Code: "_tag",
        Expression: "EventDefinition.meta.tag",
      },      {
        Code: "composed-of",
        Expression: "EventDefinition.relatedArtifact.where(type='composed-of').resource",
      },      {
        Code: "context",
        Expression: "(EventDefinition.useContext.value as CodeableConcept)",
      },      {
        Code: "context-quantity",
        Expression: "",
      },      {
        Code: "context-type",
        Expression: "EventDefinition.useContext.code",
      },      {
        Code: "date",
        Expression: "EventDefinition.date",
      },      {
        Code: "depends-on",
        Expression: "EventDefinition.relatedArtifact.where(type='depends-on').resource",
      },      {
        Code: "derived-from",
        Expression: "EventDefinition.relatedArtifact.where(type='derived-from').resource",
      },      {
        Code: "description",
        Expression: "EventDefinition.description",
      },      {
        Code: "effective",
        Expression: "EventDefinition.effectivePeriod",
      },      {
        Code: "identifier",
        Expression: "EventDefinition.identifier",
      },      {
        Code: "jurisdiction",
        Expression: "EventDefinition.jurisdiction",
      },      {
        Code: "name",
        Expression: "EventDefinition.name",
      },      {
        Code: "predecessor",
        Expression: "EventDefinition.relatedArtifact.where(type='predecessor').resource",
      },      {
        Code: "publisher",
        Expression: "EventDefinition.publisher",
      },      {
        Code: "status",
        Expression: "EventDefinition.status",
      },      {
        Code: "successor",
        Expression: "EventDefinition.relatedArtifact.where(type='successor').resource",
      },      {
        Code: "title",
        Expression: "EventDefinition.title",
      },      {
        Code: "topic",
        Expression: "EventDefinition.topic",
      },      {
        Code: "url",
        Expression: "EventDefinition.url",
      },      {
        Code: "version",
        Expression: "EventDefinition.version",
      },      {
        Code: "context-type-quantity",
        Expression: "EventDefinition.useContext",
      },      {
        Code: "context-type-value",
        Expression: "EventDefinition.useContext",
      },    },    "Evidence": {      {
        Code: "_id",
        Expression: "Evidence.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Evidence.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Evidence.meta.profile",
      },      {
        Code: "_security",
        Expression: "Evidence.meta.security",
      },      {
        Code: "_source",
        Expression: "Evidence.meta.source",
      },      {
        Code: "_tag",
        Expression: "Evidence.meta.tag",
      },      {
        Code: "_id",
        Expression: "Evidence.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Evidence.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Evidence.meta.profile",
      },      {
        Code: "_security",
        Expression: "Evidence.meta.security",
      },      {
        Code: "_source",
        Expression: "Evidence.meta.source",
      },      {
        Code: "_tag",
        Expression: "Evidence.meta.tag",
      },      {
        Code: "composed-of",
        Expression: "Evidence.relatedArtifact.where(type='composed-of').resource",
      },      {
        Code: "context",
        Expression: "(Evidence.useContext.value as CodeableConcept)",
      },      {
        Code: "context-quantity",
        Expression: "",
      },      {
        Code: "context-type",
        Expression: "Evidence.useContext.code",
      },      {
        Code: "date",
        Expression: "Evidence.date",
      },      {
        Code: "depends-on",
        Expression: "Evidence.relatedArtifact.where(type='depends-on').resource",
      },      {
        Code: "derived-from",
        Expression: "Evidence.relatedArtifact.where(type='derived-from').resource",
      },      {
        Code: "description",
        Expression: "Evidence.description",
      },      {
        Code: "effective",
        Expression: "Evidence.effectivePeriod",
      },      {
        Code: "identifier",
        Expression: "Evidence.identifier",
      },      {
        Code: "jurisdiction",
        Expression: "Evidence.jurisdiction",
      },      {
        Code: "name",
        Expression: "Evidence.name",
      },      {
        Code: "predecessor",
        Expression: "Evidence.relatedArtifact.where(type='predecessor').resource",
      },      {
        Code: "publisher",
        Expression: "Evidence.publisher",
      },      {
        Code: "status",
        Expression: "Evidence.status",
      },      {
        Code: "successor",
        Expression: "Evidence.relatedArtifact.where(type='successor').resource",
      },      {
        Code: "title",
        Expression: "Evidence.title",
      },      {
        Code: "topic",
        Expression: "Evidence.topic",
      },      {
        Code: "url",
        Expression: "Evidence.url",
      },      {
        Code: "version",
        Expression: "Evidence.version",
      },      {
        Code: "context-type-quantity",
        Expression: "Evidence.useContext",
      },      {
        Code: "context-type-value",
        Expression: "Evidence.useContext",
      },    },    "EvidenceVariable": {      {
        Code: "_id",
        Expression: "EvidenceVariable.id",
      },      {
        Code: "_lastUpdated",
        Expression: "EvidenceVariable.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "EvidenceVariable.meta.profile",
      },      {
        Code: "_security",
        Expression: "EvidenceVariable.meta.security",
      },      {
        Code: "_source",
        Expression: "EvidenceVariable.meta.source",
      },      {
        Code: "_tag",
        Expression: "EvidenceVariable.meta.tag",
      },      {
        Code: "_id",
        Expression: "EvidenceVariable.id",
      },      {
        Code: "_lastUpdated",
        Expression: "EvidenceVariable.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "EvidenceVariable.meta.profile",
      },      {
        Code: "_security",
        Expression: "EvidenceVariable.meta.security",
      },      {
        Code: "_source",
        Expression: "EvidenceVariable.meta.source",
      },      {
        Code: "_tag",
        Expression: "EvidenceVariable.meta.tag",
      },      {
        Code: "composed-of",
        Expression: "EvidenceVariable.relatedArtifact.where(type='composed-of').resource",
      },      {
        Code: "context",
        Expression: "(EvidenceVariable.useContext.value as CodeableConcept)",
      },      {
        Code: "context-quantity",
        Expression: "",
      },      {
        Code: "context-type",
        Expression: "EvidenceVariable.useContext.code",
      },      {
        Code: "date",
        Expression: "EvidenceVariable.date",
      },      {
        Code: "depends-on",
        Expression: "EvidenceVariable.relatedArtifact.where(type='depends-on').resource",
      },      {
        Code: "derived-from",
        Expression: "EvidenceVariable.relatedArtifact.where(type='derived-from').resource",
      },      {
        Code: "description",
        Expression: "EvidenceVariable.description",
      },      {
        Code: "effective",
        Expression: "EvidenceVariable.effectivePeriod",
      },      {
        Code: "identifier",
        Expression: "EvidenceVariable.identifier",
      },      {
        Code: "jurisdiction",
        Expression: "EvidenceVariable.jurisdiction",
      },      {
        Code: "name",
        Expression: "EvidenceVariable.name",
      },      {
        Code: "predecessor",
        Expression: "EvidenceVariable.relatedArtifact.where(type='predecessor').resource",
      },      {
        Code: "publisher",
        Expression: "EvidenceVariable.publisher",
      },      {
        Code: "status",
        Expression: "EvidenceVariable.status",
      },      {
        Code: "successor",
        Expression: "EvidenceVariable.relatedArtifact.where(type='successor').resource",
      },      {
        Code: "title",
        Expression: "EvidenceVariable.title",
      },      {
        Code: "topic",
        Expression: "EvidenceVariable.topic",
      },      {
        Code: "url",
        Expression: "EvidenceVariable.url",
      },      {
        Code: "version",
        Expression: "EvidenceVariable.version",
      },      {
        Code: "context-type-quantity",
        Expression: "EvidenceVariable.useContext",
      },      {
        Code: "context-type-value",
        Expression: "EvidenceVariable.useContext",
      },    },    "ExampleScenario": {      {
        Code: "_id",
        Expression: "ExampleScenario.id",
      },      {
        Code: "_lastUpdated",
        Expression: "ExampleScenario.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "ExampleScenario.meta.profile",
      },      {
        Code: "_security",
        Expression: "ExampleScenario.meta.security",
      },      {
        Code: "_source",
        Expression: "ExampleScenario.meta.source",
      },      {
        Code: "_tag",
        Expression: "ExampleScenario.meta.tag",
      },      {
        Code: "_id",
        Expression: "ExampleScenario.id",
      },      {
        Code: "_lastUpdated",
        Expression: "ExampleScenario.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "ExampleScenario.meta.profile",
      },      {
        Code: "_security",
        Expression: "ExampleScenario.meta.security",
      },      {
        Code: "_source",
        Expression: "ExampleScenario.meta.source",
      },      {
        Code: "_tag",
        Expression: "ExampleScenario.meta.tag",
      },      {
        Code: "context",
        Expression: "(ExampleScenario.useContext.value as CodeableConcept)",
      },      {
        Code: "context-quantity",
        Expression: "",
      },      {
        Code: "context-type",
        Expression: "ExampleScenario.useContext.code",
      },      {
        Code: "date",
        Expression: "ExampleScenario.date",
      },      {
        Code: "identifier",
        Expression: "ExampleScenario.identifier",
      },      {
        Code: "jurisdiction",
        Expression: "ExampleScenario.jurisdiction",
      },      {
        Code: "name",
        Expression: "ExampleScenario.name",
      },      {
        Code: "publisher",
        Expression: "ExampleScenario.publisher",
      },      {
        Code: "status",
        Expression: "ExampleScenario.status",
      },      {
        Code: "url",
        Expression: "ExampleScenario.url",
      },      {
        Code: "version",
        Expression: "ExampleScenario.version",
      },      {
        Code: "context-type-quantity",
        Expression: "ExampleScenario.useContext",
      },      {
        Code: "context-type-value",
        Expression: "ExampleScenario.useContext",
      },    },    "ExplanationOfBenefit": {      {
        Code: "_id",
        Expression: "ExplanationOfBenefit.id",
      },      {
        Code: "_lastUpdated",
        Expression: "ExplanationOfBenefit.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "ExplanationOfBenefit.meta.profile",
      },      {
        Code: "_security",
        Expression: "ExplanationOfBenefit.meta.security",
      },      {
        Code: "_source",
        Expression: "ExplanationOfBenefit.meta.source",
      },      {
        Code: "_tag",
        Expression: "ExplanationOfBenefit.meta.tag",
      },      {
        Code: "_id",
        Expression: "ExplanationOfBenefit.id",
      },      {
        Code: "_lastUpdated",
        Expression: "ExplanationOfBenefit.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "ExplanationOfBenefit.meta.profile",
      },      {
        Code: "_security",
        Expression: "ExplanationOfBenefit.meta.security",
      },      {
        Code: "_source",
        Expression: "ExplanationOfBenefit.meta.source",
      },      {
        Code: "_tag",
        Expression: "ExplanationOfBenefit.meta.tag",
      },      {
        Code: "care-team",
        Expression: "ExplanationOfBenefit.careTeam.provider",
      },      {
        Code: "claim",
        Expression: "ExplanationOfBenefit.claim",
      },      {
        Code: "coverage",
        Expression: "ExplanationOfBenefit.insurance.coverage",
      },      {
        Code: "created",
        Expression: "ExplanationOfBenefit.created",
      },      {
        Code: "detail-udi",
        Expression: "ExplanationOfBenefit.item.detail.udi",
      },      {
        Code: "disposition",
        Expression: "ExplanationOfBenefit.disposition",
      },      {
        Code: "encounter",
        Expression: "ExplanationOfBenefit.item.encounter",
      },      {
        Code: "enterer",
        Expression: "ExplanationOfBenefit.enterer",
      },      {
        Code: "facility",
        Expression: "ExplanationOfBenefit.facility",
      },      {
        Code: "identifier",
        Expression: "ExplanationOfBenefit.identifier",
      },      {
        Code: "item-udi",
        Expression: "ExplanationOfBenefit.item.udi",
      },      {
        Code: "patient",
        Expression: "ExplanationOfBenefit.patient",
      },      {
        Code: "payee",
        Expression: "ExplanationOfBenefit.payee.party",
      },      {
        Code: "procedure-udi",
        Expression: "ExplanationOfBenefit.procedure.udi",
      },      {
        Code: "provider",
        Expression: "ExplanationOfBenefit.provider",
      },      {
        Code: "status",
        Expression: "ExplanationOfBenefit.status",
      },      {
        Code: "subdetail-udi",
        Expression: "ExplanationOfBenefit.item.detail.subDetail.udi",
      },    },    "Group": {      {
        Code: "_id",
        Expression: "Group.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Group.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Group.meta.profile",
      },      {
        Code: "_security",
        Expression: "Group.meta.security",
      },      {
        Code: "_source",
        Expression: "Group.meta.source",
      },      {
        Code: "_tag",
        Expression: "Group.meta.tag",
      },      {
        Code: "_id",
        Expression: "Group.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Group.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Group.meta.profile",
      },      {
        Code: "_security",
        Expression: "Group.meta.security",
      },      {
        Code: "_source",
        Expression: "Group.meta.source",
      },      {
        Code: "_tag",
        Expression: "Group.meta.tag",
      },      {
        Code: "actual",
        Expression: "Group.actual",
      },      {
        Code: "characteristic",
        Expression: "Group.characteristic.code",
      },      {
        Code: "code",
        Expression: "Group.code",
      },      {
        Code: "exclude",
        Expression: "Group.characteristic.exclude",
      },      {
        Code: "identifier",
        Expression: "Group.identifier",
      },      {
        Code: "managing-entity",
        Expression: "Group.managingEntity",
      },      {
        Code: "member",
        Expression: "Group.member.entity",
      },      {
        Code: "type",
        Expression: "Group.type",
      },      {
        Code: "value",
        Expression: "",
      },      {
        Code: "characteristic-value",
        Expression: "Group.characteristic",
      },    },    "GuidanceResponse": {      {
        Code: "_id",
        Expression: "GuidanceResponse.id",
      },      {
        Code: "_lastUpdated",
        Expression: "GuidanceResponse.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "GuidanceResponse.meta.profile",
      },      {
        Code: "_security",
        Expression: "GuidanceResponse.meta.security",
      },      {
        Code: "_source",
        Expression: "GuidanceResponse.meta.source",
      },      {
        Code: "_tag",
        Expression: "GuidanceResponse.meta.tag",
      },      {
        Code: "_id",
        Expression: "GuidanceResponse.id",
      },      {
        Code: "_lastUpdated",
        Expression: "GuidanceResponse.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "GuidanceResponse.meta.profile",
      },      {
        Code: "_security",
        Expression: "GuidanceResponse.meta.security",
      },      {
        Code: "_source",
        Expression: "GuidanceResponse.meta.source",
      },      {
        Code: "_tag",
        Expression: "GuidanceResponse.meta.tag",
      },      {
        Code: "identifier",
        Expression: "GuidanceResponse.identifier",
      },      {
        Code: "patient",
        Expression: "GuidanceResponse.subject.where(resolve() is Patient)",
      },      {
        Code: "request",
        Expression: "GuidanceResponse.requestIdentifier",
      },      {
        Code: "subject",
        Expression: "GuidanceResponse.subject",
      },    },    "HealthcareService": {      {
        Code: "_id",
        Expression: "HealthcareService.id",
      },      {
        Code: "_lastUpdated",
        Expression: "HealthcareService.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "HealthcareService.meta.profile",
      },      {
        Code: "_security",
        Expression: "HealthcareService.meta.security",
      },      {
        Code: "_source",
        Expression: "HealthcareService.meta.source",
      },      {
        Code: "_tag",
        Expression: "HealthcareService.meta.tag",
      },      {
        Code: "_id",
        Expression: "HealthcareService.id",
      },      {
        Code: "_lastUpdated",
        Expression: "HealthcareService.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "HealthcareService.meta.profile",
      },      {
        Code: "_security",
        Expression: "HealthcareService.meta.security",
      },      {
        Code: "_source",
        Expression: "HealthcareService.meta.source",
      },      {
        Code: "_tag",
        Expression: "HealthcareService.meta.tag",
      },      {
        Code: "active",
        Expression: "HealthcareService.active",
      },      {
        Code: "characteristic",
        Expression: "HealthcareService.characteristic",
      },      {
        Code: "coverage-area",
        Expression: "HealthcareService.coverageArea",
      },      {
        Code: "endpoint",
        Expression: "HealthcareService.endpoint",
      },      {
        Code: "identifier",
        Expression: "HealthcareService.identifier",
      },      {
        Code: "location",
        Expression: "HealthcareService.location",
      },      {
        Code: "name",
        Expression: "HealthcareService.name",
      },      {
        Code: "organization",
        Expression: "HealthcareService.providedBy",
      },      {
        Code: "program",
        Expression: "HealthcareService.program",
      },      {
        Code: "service-category",
        Expression: "HealthcareService.category",
      },      {
        Code: "service-type",
        Expression: "HealthcareService.type",
      },      {
        Code: "specialty",
        Expression: "HealthcareService.specialty",
      },    },    "ImmunizationEvaluation": {      {
        Code: "_id",
        Expression: "ImmunizationEvaluation.id",
      },      {
        Code: "_lastUpdated",
        Expression: "ImmunizationEvaluation.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "ImmunizationEvaluation.meta.profile",
      },      {
        Code: "_security",
        Expression: "ImmunizationEvaluation.meta.security",
      },      {
        Code: "_source",
        Expression: "ImmunizationEvaluation.meta.source",
      },      {
        Code: "_tag",
        Expression: "ImmunizationEvaluation.meta.tag",
      },      {
        Code: "_id",
        Expression: "ImmunizationEvaluation.id",
      },      {
        Code: "_lastUpdated",
        Expression: "ImmunizationEvaluation.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "ImmunizationEvaluation.meta.profile",
      },      {
        Code: "_security",
        Expression: "ImmunizationEvaluation.meta.security",
      },      {
        Code: "_source",
        Expression: "ImmunizationEvaluation.meta.source",
      },      {
        Code: "_tag",
        Expression: "ImmunizationEvaluation.meta.tag",
      },      {
        Code: "date",
        Expression: "ImmunizationEvaluation.date",
      },      {
        Code: "dose-status",
        Expression: "ImmunizationEvaluation.doseStatus",
      },      {
        Code: "identifier",
        Expression: "ImmunizationEvaluation.identifier",
      },      {
        Code: "immunization-event",
        Expression: "ImmunizationEvaluation.immunizationEvent",
      },      {
        Code: "patient",
        Expression: "ImmunizationEvaluation.patient",
      },      {
        Code: "status",
        Expression: "ImmunizationEvaluation.status",
      },      {
        Code: "target-disease",
        Expression: "ImmunizationEvaluation.targetDisease",
      },    },    "ImmunizationRecommendation": {      {
        Code: "_id",
        Expression: "ImmunizationRecommendation.id",
      },      {
        Code: "_lastUpdated",
        Expression: "ImmunizationRecommendation.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "ImmunizationRecommendation.meta.profile",
      },      {
        Code: "_security",
        Expression: "ImmunizationRecommendation.meta.security",
      },      {
        Code: "_source",
        Expression: "ImmunizationRecommendation.meta.source",
      },      {
        Code: "_tag",
        Expression: "ImmunizationRecommendation.meta.tag",
      },      {
        Code: "_id",
        Expression: "ImmunizationRecommendation.id",
      },      {
        Code: "_lastUpdated",
        Expression: "ImmunizationRecommendation.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "ImmunizationRecommendation.meta.profile",
      },      {
        Code: "_security",
        Expression: "ImmunizationRecommendation.meta.security",
      },      {
        Code: "_source",
        Expression: "ImmunizationRecommendation.meta.source",
      },      {
        Code: "_tag",
        Expression: "ImmunizationRecommendation.meta.tag",
      },      {
        Code: "date",
        Expression: "ImmunizationRecommendation.date",
      },      {
        Code: "identifier",
        Expression: "ImmunizationRecommendation.identifier",
      },      {
        Code: "information",
        Expression: "ImmunizationRecommendation.recommendation.supportingPatientInformation",
      },      {
        Code: "patient",
        Expression: "ImmunizationRecommendation.patient",
      },      {
        Code: "status",
        Expression: "ImmunizationRecommendation.recommendation.forecastStatus",
      },      {
        Code: "support",
        Expression: "ImmunizationRecommendation.recommendation.supportingImmunization",
      },      {
        Code: "target-disease",
        Expression: "ImmunizationRecommendation.recommendation.targetDisease",
      },      {
        Code: "vaccine-type",
        Expression: "ImmunizationRecommendation.recommendation.vaccineCode",
      },    },    "InsurancePlan": {      {
        Code: "_id",
        Expression: "InsurancePlan.id",
      },      {
        Code: "_lastUpdated",
        Expression: "InsurancePlan.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "InsurancePlan.meta.profile",
      },      {
        Code: "_security",
        Expression: "InsurancePlan.meta.security",
      },      {
        Code: "_source",
        Expression: "InsurancePlan.meta.source",
      },      {
        Code: "_tag",
        Expression: "InsurancePlan.meta.tag",
      },      {
        Code: "_id",
        Expression: "InsurancePlan.id",
      },      {
        Code: "_lastUpdated",
        Expression: "InsurancePlan.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "InsurancePlan.meta.profile",
      },      {
        Code: "_security",
        Expression: "InsurancePlan.meta.security",
      },      {
        Code: "_source",
        Expression: "InsurancePlan.meta.source",
      },      {
        Code: "_tag",
        Expression: "InsurancePlan.meta.tag",
      },      {
        Code: "address",
        Expression: "InsurancePlan.contact.address",
      },      {
        Code: "address-city",
        Expression: "InsurancePlan.contact.address.city",
      },      {
        Code: "address-country",
        Expression: "InsurancePlan.contact.address.country",
      },      {
        Code: "address-postalcode",
        Expression: "InsurancePlan.contact.address.postalCode",
      },      {
        Code: "address-state",
        Expression: "InsurancePlan.contact.address.state",
      },      {
        Code: "address-use",
        Expression: "InsurancePlan.contact.address.use",
      },      {
        Code: "administered-by",
        Expression: "InsurancePlan.administeredBy",
      },      {
        Code: "endpoint",
        Expression: "InsurancePlan.endpoint",
      },      {
        Code: "identifier",
        Expression: "InsurancePlan.identifier",
      },      {
        Code: "name",
        Expression: "",
      },      {
        Code: "owned-by",
        Expression: "InsurancePlan.ownedBy",
      },      {
        Code: "phonetic",
        Expression: "InsurancePlan.name",
      },      {
        Code: "status",
        Expression: "InsurancePlan.status",
      },      {
        Code: "type",
        Expression: "InsurancePlan.type",
      },    },    "Invoice": {      {
        Code: "_id",
        Expression: "Invoice.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Invoice.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Invoice.meta.profile",
      },      {
        Code: "_security",
        Expression: "Invoice.meta.security",
      },      {
        Code: "_source",
        Expression: "Invoice.meta.source",
      },      {
        Code: "_tag",
        Expression: "Invoice.meta.tag",
      },      {
        Code: "_id",
        Expression: "Invoice.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Invoice.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Invoice.meta.profile",
      },      {
        Code: "_security",
        Expression: "Invoice.meta.security",
      },      {
        Code: "_source",
        Expression: "Invoice.meta.source",
      },      {
        Code: "_tag",
        Expression: "Invoice.meta.tag",
      },      {
        Code: "account",
        Expression: "Invoice.account",
      },      {
        Code: "date",
        Expression: "Invoice.date",
      },      {
        Code: "identifier",
        Expression: "Invoice.identifier",
      },      {
        Code: "issuer",
        Expression: "Invoice.issuer",
      },      {
        Code: "participant",
        Expression: "Invoice.participant.actor",
      },      {
        Code: "participant-role",
        Expression: "Invoice.participant.role",
      },      {
        Code: "patient",
        Expression: "Invoice.subject.where(resolve() is Patient)",
      },      {
        Code: "recipient",
        Expression: "Invoice.recipient",
      },      {
        Code: "status",
        Expression: "Invoice.status",
      },      {
        Code: "subject",
        Expression: "Invoice.subject",
      },      {
        Code: "totalgross",
        Expression: "Invoice.totalGross",
      },      {
        Code: "totalnet",
        Expression: "Invoice.totalNet",
      },      {
        Code: "type",
        Expression: "Invoice.type",
      },    },    "Library": {      {
        Code: "_id",
        Expression: "Library.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Library.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Library.meta.profile",
      },      {
        Code: "_security",
        Expression: "Library.meta.security",
      },      {
        Code: "_source",
        Expression: "Library.meta.source",
      },      {
        Code: "_tag",
        Expression: "Library.meta.tag",
      },      {
        Code: "_id",
        Expression: "Library.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Library.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Library.meta.profile",
      },      {
        Code: "_security",
        Expression: "Library.meta.security",
      },      {
        Code: "_source",
        Expression: "Library.meta.source",
      },      {
        Code: "_tag",
        Expression: "Library.meta.tag",
      },      {
        Code: "composed-of",
        Expression: "Library.relatedArtifact.where(type='composed-of').resource",
      },      {
        Code: "content-type",
        Expression: "Library.content.contentType",
      },      {
        Code: "context",
        Expression: "(Library.useContext.value as CodeableConcept)",
      },      {
        Code: "context-quantity",
        Expression: "",
      },      {
        Code: "context-type",
        Expression: "Library.useContext.code",
      },      {
        Code: "date",
        Expression: "Library.date",
      },      {
        Code: "depends-on",
        Expression: "Library.relatedArtifact.where(type='depends-on').resource",
      },      {
        Code: "derived-from",
        Expression: "Library.relatedArtifact.where(type='derived-from').resource",
      },      {
        Code: "description",
        Expression: "Library.description",
      },      {
        Code: "effective",
        Expression: "Library.effectivePeriod",
      },      {
        Code: "identifier",
        Expression: "Library.identifier",
      },      {
        Code: "jurisdiction",
        Expression: "Library.jurisdiction",
      },      {
        Code: "name",
        Expression: "Library.name",
      },      {
        Code: "predecessor",
        Expression: "Library.relatedArtifact.where(type='predecessor').resource",
      },      {
        Code: "publisher",
        Expression: "Library.publisher",
      },      {
        Code: "status",
        Expression: "Library.status",
      },      {
        Code: "successor",
        Expression: "Library.relatedArtifact.where(type='successor').resource",
      },      {
        Code: "title",
        Expression: "Library.title",
      },      {
        Code: "topic",
        Expression: "Library.topic",
      },      {
        Code: "type",
        Expression: "Library.type",
      },      {
        Code: "url",
        Expression: "Library.url",
      },      {
        Code: "version",
        Expression: "Library.version",
      },      {
        Code: "context-type-quantity",
        Expression: "Library.useContext",
      },      {
        Code: "context-type-value",
        Expression: "Library.useContext",
      },    },    "Linkage": {      {
        Code: "_id",
        Expression: "Linkage.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Linkage.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Linkage.meta.profile",
      },      {
        Code: "_security",
        Expression: "Linkage.meta.security",
      },      {
        Code: "_source",
        Expression: "Linkage.meta.source",
      },      {
        Code: "_tag",
        Expression: "Linkage.meta.tag",
      },      {
        Code: "_id",
        Expression: "Linkage.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Linkage.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Linkage.meta.profile",
      },      {
        Code: "_security",
        Expression: "Linkage.meta.security",
      },      {
        Code: "_source",
        Expression: "Linkage.meta.source",
      },      {
        Code: "_tag",
        Expression: "Linkage.meta.tag",
      },      {
        Code: "author",
        Expression: "Linkage.author",
      },      {
        Code: "item",
        Expression: "Linkage.item.resource",
      },      {
        Code: "source",
        Expression: "Linkage.item.resource",
      },    },    "Location": {      {
        Code: "_id",
        Expression: "Location.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Location.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Location.meta.profile",
      },      {
        Code: "_security",
        Expression: "Location.meta.security",
      },      {
        Code: "_source",
        Expression: "Location.meta.source",
      },      {
        Code: "_tag",
        Expression: "Location.meta.tag",
      },      {
        Code: "_id",
        Expression: "Location.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Location.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Location.meta.profile",
      },      {
        Code: "_security",
        Expression: "Location.meta.security",
      },      {
        Code: "_source",
        Expression: "Location.meta.source",
      },      {
        Code: "_tag",
        Expression: "Location.meta.tag",
      },      {
        Code: "address",
        Expression: "Location.address",
      },      {
        Code: "address-city",
        Expression: "Location.address.city",
      },      {
        Code: "address-country",
        Expression: "Location.address.country",
      },      {
        Code: "address-postalcode",
        Expression: "Location.address.postalCode",
      },      {
        Code: "address-state",
        Expression: "Location.address.state",
      },      {
        Code: "address-use",
        Expression: "Location.address.use",
      },      {
        Code: "endpoint",
        Expression: "Location.endpoint",
      },      {
        Code: "identifier",
        Expression: "Location.identifier",
      },      {
        Code: "name",
        Expression: "",
      },      {
        Code: "near",
        Expression: "Location.position",
      },      {
        Code: "operational-status",
        Expression: "Location.operationalStatus",
      },      {
        Code: "organization",
        Expression: "Location.managingOrganization",
      },      {
        Code: "partof",
        Expression: "Location.partOf",
      },      {
        Code: "status",
        Expression: "Location.status",
      },      {
        Code: "type",
        Expression: "Location.type",
      },    },    "Measure": {      {
        Code: "_id",
        Expression: "Measure.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Measure.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Measure.meta.profile",
      },      {
        Code: "_security",
        Expression: "Measure.meta.security",
      },      {
        Code: "_source",
        Expression: "Measure.meta.source",
      },      {
        Code: "_tag",
        Expression: "Measure.meta.tag",
      },      {
        Code: "_id",
        Expression: "Measure.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Measure.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Measure.meta.profile",
      },      {
        Code: "_security",
        Expression: "Measure.meta.security",
      },      {
        Code: "_source",
        Expression: "Measure.meta.source",
      },      {
        Code: "_tag",
        Expression: "Measure.meta.tag",
      },      {
        Code: "composed-of",
        Expression: "Measure.relatedArtifact.where(type='composed-of').resource",
      },      {
        Code: "context",
        Expression: "(Measure.useContext.value as CodeableConcept)",
      },      {
        Code: "context-quantity",
        Expression: "",
      },      {
        Code: "context-type",
        Expression: "Measure.useContext.code",
      },      {
        Code: "date",
        Expression: "Measure.date",
      },      {
        Code: "depends-on",
        Expression: "",
      },      {
        Code: "derived-from",
        Expression: "Measure.relatedArtifact.where(type='derived-from').resource",
      },      {
        Code: "description",
        Expression: "Measure.description",
      },      {
        Code: "effective",
        Expression: "Measure.effectivePeriod",
      },      {
        Code: "identifier",
        Expression: "Measure.identifier",
      },      {
        Code: "jurisdiction",
        Expression: "Measure.jurisdiction",
      },      {
        Code: "name",
        Expression: "Measure.name",
      },      {
        Code: "predecessor",
        Expression: "Measure.relatedArtifact.where(type='predecessor').resource",
      },      {
        Code: "publisher",
        Expression: "Measure.publisher",
      },      {
        Code: "status",
        Expression: "Measure.status",
      },      {
        Code: "successor",
        Expression: "Measure.relatedArtifact.where(type='successor').resource",
      },      {
        Code: "title",
        Expression: "Measure.title",
      },      {
        Code: "topic",
        Expression: "Measure.topic",
      },      {
        Code: "url",
        Expression: "Measure.url",
      },      {
        Code: "version",
        Expression: "Measure.version",
      },      {
        Code: "context-type-quantity",
        Expression: "Measure.useContext",
      },      {
        Code: "context-type-value",
        Expression: "Measure.useContext",
      },    },    "MeasureReport": {      {
        Code: "_id",
        Expression: "MeasureReport.id",
      },      {
        Code: "_lastUpdated",
        Expression: "MeasureReport.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "MeasureReport.meta.profile",
      },      {
        Code: "_security",
        Expression: "MeasureReport.meta.security",
      },      {
        Code: "_source",
        Expression: "MeasureReport.meta.source",
      },      {
        Code: "_tag",
        Expression: "MeasureReport.meta.tag",
      },      {
        Code: "_id",
        Expression: "MeasureReport.id",
      },      {
        Code: "_lastUpdated",
        Expression: "MeasureReport.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "MeasureReport.meta.profile",
      },      {
        Code: "_security",
        Expression: "MeasureReport.meta.security",
      },      {
        Code: "_source",
        Expression: "MeasureReport.meta.source",
      },      {
        Code: "_tag",
        Expression: "MeasureReport.meta.tag",
      },      {
        Code: "date",
        Expression: "MeasureReport.date",
      },      {
        Code: "evaluated-resource",
        Expression: "MeasureReport.evaluatedResource",
      },      {
        Code: "identifier",
        Expression: "MeasureReport.identifier",
      },      {
        Code: "measure",
        Expression: "MeasureReport.measure",
      },      {
        Code: "patient",
        Expression: "MeasureReport.subject.where(resolve() is Patient)",
      },      {
        Code: "period",
        Expression: "MeasureReport.period",
      },      {
        Code: "reporter",
        Expression: "MeasureReport.reporter",
      },      {
        Code: "status",
        Expression: "MeasureReport.status",
      },      {
        Code: "subject",
        Expression: "MeasureReport.subject",
      },    },    "Media": {      {
        Code: "_id",
        Expression: "Media.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Media.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Media.meta.profile",
      },      {
        Code: "_security",
        Expression: "Media.meta.security",
      },      {
        Code: "_source",
        Expression: "Media.meta.source",
      },      {
        Code: "_tag",
        Expression: "Media.meta.tag",
      },      {
        Code: "_id",
        Expression: "Media.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Media.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Media.meta.profile",
      },      {
        Code: "_security",
        Expression: "Media.meta.security",
      },      {
        Code: "_source",
        Expression: "Media.meta.source",
      },      {
        Code: "_tag",
        Expression: "Media.meta.tag",
      },      {
        Code: "based-on",
        Expression: "Media.basedOn",
      },      {
        Code: "created",
        Expression: "Media.created",
      },      {
        Code: "device",
        Expression: "Media.device",
      },      {
        Code: "encounter",
        Expression: "Media.encounter",
      },      {
        Code: "identifier",
        Expression: "Media.identifier",
      },      {
        Code: "modality",
        Expression: "Media.modality",
      },      {
        Code: "operator",
        Expression: "Media.operator",
      },      {
        Code: "patient",
        Expression: "Media.subject.where(resolve() is Patient)",
      },      {
        Code: "site",
        Expression: "Media.bodySite",
      },      {
        Code: "status",
        Expression: "Media.status",
      },      {
        Code: "subject",
        Expression: "Media.subject",
      },      {
        Code: "type",
        Expression: "Media.type",
      },      {
        Code: "view",
        Expression: "Media.view",
      },    },    "MedicationKnowledge": {      {
        Code: "_id",
        Expression: "MedicationKnowledge.id",
      },      {
        Code: "_lastUpdated",
        Expression: "MedicationKnowledge.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "MedicationKnowledge.meta.profile",
      },      {
        Code: "_security",
        Expression: "MedicationKnowledge.meta.security",
      },      {
        Code: "_source",
        Expression: "MedicationKnowledge.meta.source",
      },      {
        Code: "_tag",
        Expression: "MedicationKnowledge.meta.tag",
      },      {
        Code: "_id",
        Expression: "MedicationKnowledge.id",
      },      {
        Code: "_lastUpdated",
        Expression: "MedicationKnowledge.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "MedicationKnowledge.meta.profile",
      },      {
        Code: "_security",
        Expression: "MedicationKnowledge.meta.security",
      },      {
        Code: "_source",
        Expression: "MedicationKnowledge.meta.source",
      },      {
        Code: "_tag",
        Expression: "MedicationKnowledge.meta.tag",
      },      {
        Code: "classification",
        Expression: "MedicationKnowledge.medicineClassification.classification",
      },      {
        Code: "classification-type",
        Expression: "MedicationKnowledge.medicineClassification.type",
      },      {
        Code: "code",
        Expression: "MedicationKnowledge.code",
      },      {
        Code: "doseform",
        Expression: "MedicationKnowledge.doseForm",
      },      {
        Code: "ingredient",
        Expression: "(MedicationKnowledge.ingredient.item as Reference)",
      },      {
        Code: "ingredient-code",
        Expression: "(MedicationKnowledge.ingredient.item as CodeableConcept)",
      },      {
        Code: "manufacturer",
        Expression: "MedicationKnowledge.manufacturer",
      },      {
        Code: "monitoring-program-name",
        Expression: "MedicationKnowledge.monitoringProgram.name",
      },      {
        Code: "monitoring-program-type",
        Expression: "MedicationKnowledge.monitoringProgram.type",
      },      {
        Code: "monograph",
        Expression: "MedicationKnowledge.monograph.source",
      },      {
        Code: "monograph-type",
        Expression: "MedicationKnowledge.monograph.type",
      },      {
        Code: "source-cost",
        Expression: "MedicationKnowledge.cost.source",
      },      {
        Code: "status",
        Expression: "MedicationKnowledge.status",
      },    },    "MedicinalProduct": {      {
        Code: "_id",
        Expression: "MedicinalProduct.id",
      },      {
        Code: "_lastUpdated",
        Expression: "MedicinalProduct.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "MedicinalProduct.meta.profile",
      },      {
        Code: "_security",
        Expression: "MedicinalProduct.meta.security",
      },      {
        Code: "_source",
        Expression: "MedicinalProduct.meta.source",
      },      {
        Code: "_tag",
        Expression: "MedicinalProduct.meta.tag",
      },      {
        Code: "_id",
        Expression: "MedicinalProduct.id",
      },      {
        Code: "_lastUpdated",
        Expression: "MedicinalProduct.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "MedicinalProduct.meta.profile",
      },      {
        Code: "_security",
        Expression: "MedicinalProduct.meta.security",
      },      {
        Code: "_source",
        Expression: "MedicinalProduct.meta.source",
      },      {
        Code: "_tag",
        Expression: "MedicinalProduct.meta.tag",
      },      {
        Code: "identifier",
        Expression: "MedicinalProduct.identifier",
      },      {
        Code: "name",
        Expression: "MedicinalProduct.name.productName",
      },      {
        Code: "name-language",
        Expression: "MedicinalProduct.name.countryLanguage.language",
      },    },    "MedicinalProductAuthorization": {      {
        Code: "_id",
        Expression: "MedicinalProductAuthorization.id",
      },      {
        Code: "_lastUpdated",
        Expression: "MedicinalProductAuthorization.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "MedicinalProductAuthorization.meta.profile",
      },      {
        Code: "_security",
        Expression: "MedicinalProductAuthorization.meta.security",
      },      {
        Code: "_source",
        Expression: "MedicinalProductAuthorization.meta.source",
      },      {
        Code: "_tag",
        Expression: "MedicinalProductAuthorization.meta.tag",
      },      {
        Code: "_id",
        Expression: "MedicinalProductAuthorization.id",
      },      {
        Code: "_lastUpdated",
        Expression: "MedicinalProductAuthorization.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "MedicinalProductAuthorization.meta.profile",
      },      {
        Code: "_security",
        Expression: "MedicinalProductAuthorization.meta.security",
      },      {
        Code: "_source",
        Expression: "MedicinalProductAuthorization.meta.source",
      },      {
        Code: "_tag",
        Expression: "MedicinalProductAuthorization.meta.tag",
      },      {
        Code: "country",
        Expression: "MedicinalProductAuthorization.country",
      },      {
        Code: "holder",
        Expression: "MedicinalProductAuthorization.holder",
      },      {
        Code: "identifier",
        Expression: "MedicinalProductAuthorization.identifier",
      },      {
        Code: "status",
        Expression: "MedicinalProductAuthorization.status",
      },      {
        Code: "subject",
        Expression: "MedicinalProductAuthorization.subject",
      },    },    "MedicinalProductContraindication": {      {
        Code: "_id",
        Expression: "MedicinalProductContraindication.id",
      },      {
        Code: "_lastUpdated",
        Expression: "MedicinalProductContraindication.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "MedicinalProductContraindication.meta.profile",
      },      {
        Code: "_security",
        Expression: "MedicinalProductContraindication.meta.security",
      },      {
        Code: "_source",
        Expression: "MedicinalProductContraindication.meta.source",
      },      {
        Code: "_tag",
        Expression: "MedicinalProductContraindication.meta.tag",
      },      {
        Code: "_id",
        Expression: "MedicinalProductContraindication.id",
      },      {
        Code: "_lastUpdated",
        Expression: "MedicinalProductContraindication.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "MedicinalProductContraindication.meta.profile",
      },      {
        Code: "_security",
        Expression: "MedicinalProductContraindication.meta.security",
      },      {
        Code: "_source",
        Expression: "MedicinalProductContraindication.meta.source",
      },      {
        Code: "_tag",
        Expression: "MedicinalProductContraindication.meta.tag",
      },      {
        Code: "subject",
        Expression: "MedicinalProductContraindication.subject",
      },    },    "MedicinalProductIndication": {      {
        Code: "_id",
        Expression: "MedicinalProductIndication.id",
      },      {
        Code: "_lastUpdated",
        Expression: "MedicinalProductIndication.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "MedicinalProductIndication.meta.profile",
      },      {
        Code: "_security",
        Expression: "MedicinalProductIndication.meta.security",
      },      {
        Code: "_source",
        Expression: "MedicinalProductIndication.meta.source",
      },      {
        Code: "_tag",
        Expression: "MedicinalProductIndication.meta.tag",
      },      {
        Code: "_id",
        Expression: "MedicinalProductIndication.id",
      },      {
        Code: "_lastUpdated",
        Expression: "MedicinalProductIndication.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "MedicinalProductIndication.meta.profile",
      },      {
        Code: "_security",
        Expression: "MedicinalProductIndication.meta.security",
      },      {
        Code: "_source",
        Expression: "MedicinalProductIndication.meta.source",
      },      {
        Code: "_tag",
        Expression: "MedicinalProductIndication.meta.tag",
      },      {
        Code: "subject",
        Expression: "MedicinalProductIndication.subject",
      },    },    "MedicinalProductInteraction": {      {
        Code: "_id",
        Expression: "MedicinalProductInteraction.id",
      },      {
        Code: "_lastUpdated",
        Expression: "MedicinalProductInteraction.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "MedicinalProductInteraction.meta.profile",
      },      {
        Code: "_security",
        Expression: "MedicinalProductInteraction.meta.security",
      },      {
        Code: "_source",
        Expression: "MedicinalProductInteraction.meta.source",
      },      {
        Code: "_tag",
        Expression: "MedicinalProductInteraction.meta.tag",
      },      {
        Code: "_id",
        Expression: "MedicinalProductInteraction.id",
      },      {
        Code: "_lastUpdated",
        Expression: "MedicinalProductInteraction.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "MedicinalProductInteraction.meta.profile",
      },      {
        Code: "_security",
        Expression: "MedicinalProductInteraction.meta.security",
      },      {
        Code: "_source",
        Expression: "MedicinalProductInteraction.meta.source",
      },      {
        Code: "_tag",
        Expression: "MedicinalProductInteraction.meta.tag",
      },      {
        Code: "subject",
        Expression: "MedicinalProductInteraction.subject",
      },    },    "MedicinalProductPackaged": {      {
        Code: "_id",
        Expression: "MedicinalProductPackaged.id",
      },      {
        Code: "_lastUpdated",
        Expression: "MedicinalProductPackaged.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "MedicinalProductPackaged.meta.profile",
      },      {
        Code: "_security",
        Expression: "MedicinalProductPackaged.meta.security",
      },      {
        Code: "_source",
        Expression: "MedicinalProductPackaged.meta.source",
      },      {
        Code: "_tag",
        Expression: "MedicinalProductPackaged.meta.tag",
      },      {
        Code: "_id",
        Expression: "MedicinalProductPackaged.id",
      },      {
        Code: "_lastUpdated",
        Expression: "MedicinalProductPackaged.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "MedicinalProductPackaged.meta.profile",
      },      {
        Code: "_security",
        Expression: "MedicinalProductPackaged.meta.security",
      },      {
        Code: "_source",
        Expression: "MedicinalProductPackaged.meta.source",
      },      {
        Code: "_tag",
        Expression: "MedicinalProductPackaged.meta.tag",
      },      {
        Code: "identifier",
        Expression: "MedicinalProductPackaged.identifier",
      },      {
        Code: "subject",
        Expression: "MedicinalProductPackaged.subject",
      },    },    "MedicinalProductPharmaceutical": {      {
        Code: "_id",
        Expression: "MedicinalProductPharmaceutical.id",
      },      {
        Code: "_lastUpdated",
        Expression: "MedicinalProductPharmaceutical.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "MedicinalProductPharmaceutical.meta.profile",
      },      {
        Code: "_security",
        Expression: "MedicinalProductPharmaceutical.meta.security",
      },      {
        Code: "_source",
        Expression: "MedicinalProductPharmaceutical.meta.source",
      },      {
        Code: "_tag",
        Expression: "MedicinalProductPharmaceutical.meta.tag",
      },      {
        Code: "_id",
        Expression: "MedicinalProductPharmaceutical.id",
      },      {
        Code: "_lastUpdated",
        Expression: "MedicinalProductPharmaceutical.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "MedicinalProductPharmaceutical.meta.profile",
      },      {
        Code: "_security",
        Expression: "MedicinalProductPharmaceutical.meta.security",
      },      {
        Code: "_source",
        Expression: "MedicinalProductPharmaceutical.meta.source",
      },      {
        Code: "_tag",
        Expression: "MedicinalProductPharmaceutical.meta.tag",
      },      {
        Code: "identifier",
        Expression: "MedicinalProductPharmaceutical.identifier",
      },      {
        Code: "route",
        Expression: "MedicinalProductPharmaceutical.routeOfAdministration.code",
      },      {
        Code: "target-species",
        Expression: "MedicinalProductPharmaceutical.routeOfAdministration.targetSpecies.code",
      },    },    "MedicinalProductUndesirableEffect": {      {
        Code: "_id",
        Expression: "MedicinalProductUndesirableEffect.id",
      },      {
        Code: "_lastUpdated",
        Expression: "MedicinalProductUndesirableEffect.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "MedicinalProductUndesirableEffect.meta.profile",
      },      {
        Code: "_security",
        Expression: "MedicinalProductUndesirableEffect.meta.security",
      },      {
        Code: "_source",
        Expression: "MedicinalProductUndesirableEffect.meta.source",
      },      {
        Code: "_tag",
        Expression: "MedicinalProductUndesirableEffect.meta.tag",
      },      {
        Code: "_id",
        Expression: "MedicinalProductUndesirableEffect.id",
      },      {
        Code: "_lastUpdated",
        Expression: "MedicinalProductUndesirableEffect.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "MedicinalProductUndesirableEffect.meta.profile",
      },      {
        Code: "_security",
        Expression: "MedicinalProductUndesirableEffect.meta.security",
      },      {
        Code: "_source",
        Expression: "MedicinalProductUndesirableEffect.meta.source",
      },      {
        Code: "_tag",
        Expression: "MedicinalProductUndesirableEffect.meta.tag",
      },      {
        Code: "subject",
        Expression: "MedicinalProductUndesirableEffect.subject",
      },    },    "MessageHeader": {      {
        Code: "_id",
        Expression: "MessageHeader.id",
      },      {
        Code: "_lastUpdated",
        Expression: "MessageHeader.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "MessageHeader.meta.profile",
      },      {
        Code: "_security",
        Expression: "MessageHeader.meta.security",
      },      {
        Code: "_source",
        Expression: "MessageHeader.meta.source",
      },      {
        Code: "_tag",
        Expression: "MessageHeader.meta.tag",
      },      {
        Code: "_id",
        Expression: "MessageHeader.id",
      },      {
        Code: "_lastUpdated",
        Expression: "MessageHeader.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "MessageHeader.meta.profile",
      },      {
        Code: "_security",
        Expression: "MessageHeader.meta.security",
      },      {
        Code: "_source",
        Expression: "MessageHeader.meta.source",
      },      {
        Code: "_tag",
        Expression: "MessageHeader.meta.tag",
      },      {
        Code: "author",
        Expression: "MessageHeader.author",
      },      {
        Code: "code",
        Expression: "MessageHeader.response.code",
      },      {
        Code: "destination",
        Expression: "MessageHeader.destination.name",
      },      {
        Code: "destination-uri",
        Expression: "MessageHeader.destination.endpoint",
      },      {
        Code: "enterer",
        Expression: "MessageHeader.enterer",
      },      {
        Code: "event",
        Expression: "MessageHeader.event",
      },      {
        Code: "focus",
        Expression: "MessageHeader.focus",
      },      {
        Code: "receiver",
        Expression: "MessageHeader.destination.receiver",
      },      {
        Code: "response-id",
        Expression: "MessageHeader.response.identifier",
      },      {
        Code: "responsible",
        Expression: "MessageHeader.responsible",
      },      {
        Code: "sender",
        Expression: "MessageHeader.sender",
      },      {
        Code: "source",
        Expression: "MessageHeader.source.name",
      },      {
        Code: "source-uri",
        Expression: "MessageHeader.source.endpoint",
      },      {
        Code: "target",
        Expression: "MessageHeader.destination.target",
      },    },    "MolecularSequence": {      {
        Code: "_id",
        Expression: "MolecularSequence.id",
      },      {
        Code: "_lastUpdated",
        Expression: "MolecularSequence.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "MolecularSequence.meta.profile",
      },      {
        Code: "_security",
        Expression: "MolecularSequence.meta.security",
      },      {
        Code: "_source",
        Expression: "MolecularSequence.meta.source",
      },      {
        Code: "_tag",
        Expression: "MolecularSequence.meta.tag",
      },      {
        Code: "_id",
        Expression: "MolecularSequence.id",
      },      {
        Code: "_lastUpdated",
        Expression: "MolecularSequence.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "MolecularSequence.meta.profile",
      },      {
        Code: "_security",
        Expression: "MolecularSequence.meta.security",
      },      {
        Code: "_source",
        Expression: "MolecularSequence.meta.source",
      },      {
        Code: "_tag",
        Expression: "MolecularSequence.meta.tag",
      },      {
        Code: "chromosome",
        Expression: "MolecularSequence.referenceSeq.chromosome",
      },      {
        Code: "identifier",
        Expression: "MolecularSequence.identifier",
      },      {
        Code: "patient",
        Expression: "MolecularSequence.patient",
      },      {
        Code: "referenceseqid",
        Expression: "MolecularSequence.referenceSeq.referenceSeqId",
      },      {
        Code: "type",
        Expression: "MolecularSequence.type",
      },      {
        Code: "variant-end",
        Expression: "MolecularSequence.variant.end",
      },      {
        Code: "variant-start",
        Expression: "MolecularSequence.variant.start",
      },      {
        Code: "window-end",
        Expression: "MolecularSequence.referenceSeq.windowEnd",
      },      {
        Code: "window-start",
        Expression: "MolecularSequence.referenceSeq.windowStart",
      },      {
        Code: "chromosome-variant-coordinate",
        Expression: "MolecularSequence.variant",
      },      {
        Code: "chromosome-window-coordinate",
        Expression: "MolecularSequence.referenceSeq",
      },      {
        Code: "referenceseqid-variant-coordinate",
        Expression: "MolecularSequence.variant",
      },      {
        Code: "referenceseqid-window-coordinate",
        Expression: "MolecularSequence.referenceSeq",
      },    },    "Organization": {      {
        Code: "_id",
        Expression: "Organization.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Organization.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Organization.meta.profile",
      },      {
        Code: "_security",
        Expression: "Organization.meta.security",
      },      {
        Code: "_source",
        Expression: "Organization.meta.source",
      },      {
        Code: "_tag",
        Expression: "Organization.meta.tag",
      },      {
        Code: "_id",
        Expression: "Organization.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Organization.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Organization.meta.profile",
      },      {
        Code: "_security",
        Expression: "Organization.meta.security",
      },      {
        Code: "_source",
        Expression: "Organization.meta.source",
      },      {
        Code: "_tag",
        Expression: "Organization.meta.tag",
      },      {
        Code: "active",
        Expression: "Organization.active",
      },      {
        Code: "address",
        Expression: "Organization.address",
      },      {
        Code: "address-city",
        Expression: "Organization.address.city",
      },      {
        Code: "address-country",
        Expression: "Organization.address.country",
      },      {
        Code: "address-postalcode",
        Expression: "Organization.address.postalCode",
      },      {
        Code: "address-state",
        Expression: "Organization.address.state",
      },      {
        Code: "address-use",
        Expression: "Organization.address.use",
      },      {
        Code: "endpoint",
        Expression: "Organization.endpoint",
      },      {
        Code: "identifier",
        Expression: "Organization.identifier",
      },      {
        Code: "name",
        Expression: "",
      },      {
        Code: "partof",
        Expression: "Organization.partOf",
      },      {
        Code: "phonetic",
        Expression: "Organization.name",
      },      {
        Code: "type",
        Expression: "Organization.type",
      },    },    "OrganizationAffiliation": {      {
        Code: "_id",
        Expression: "OrganizationAffiliation.id",
      },      {
        Code: "_lastUpdated",
        Expression: "OrganizationAffiliation.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "OrganizationAffiliation.meta.profile",
      },      {
        Code: "_security",
        Expression: "OrganizationAffiliation.meta.security",
      },      {
        Code: "_source",
        Expression: "OrganizationAffiliation.meta.source",
      },      {
        Code: "_tag",
        Expression: "OrganizationAffiliation.meta.tag",
      },      {
        Code: "_id",
        Expression: "OrganizationAffiliation.id",
      },      {
        Code: "_lastUpdated",
        Expression: "OrganizationAffiliation.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "OrganizationAffiliation.meta.profile",
      },      {
        Code: "_security",
        Expression: "OrganizationAffiliation.meta.security",
      },      {
        Code: "_source",
        Expression: "OrganizationAffiliation.meta.source",
      },      {
        Code: "_tag",
        Expression: "OrganizationAffiliation.meta.tag",
      },      {
        Code: "active",
        Expression: "OrganizationAffiliation.active",
      },      {
        Code: "date",
        Expression: "OrganizationAffiliation.period",
      },      {
        Code: "email",
        Expression: "OrganizationAffiliation.telecom.where(system='email')",
      },      {
        Code: "endpoint",
        Expression: "OrganizationAffiliation.endpoint",
      },      {
        Code: "identifier",
        Expression: "OrganizationAffiliation.identifier",
      },      {
        Code: "location",
        Expression: "OrganizationAffiliation.location",
      },      {
        Code: "network",
        Expression: "OrganizationAffiliation.network",
      },      {
        Code: "participating-organization",
        Expression: "OrganizationAffiliation.participatingOrganization",
      },      {
        Code: "phone",
        Expression: "OrganizationAffiliation.telecom.where(system='phone')",
      },      {
        Code: "primary-organization",
        Expression: "OrganizationAffiliation.organization",
      },      {
        Code: "role",
        Expression: "OrganizationAffiliation.code",
      },      {
        Code: "service",
        Expression: "OrganizationAffiliation.healthcareService",
      },      {
        Code: "specialty",
        Expression: "OrganizationAffiliation.specialty",
      },      {
        Code: "telecom",
        Expression: "OrganizationAffiliation.telecom",
      },    },    "Patient": {      {
        Code: "_id",
        Expression: "Patient.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Patient.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Patient.meta.profile",
      },      {
        Code: "_security",
        Expression: "Patient.meta.security",
      },      {
        Code: "_source",
        Expression: "Patient.meta.source",
      },      {
        Code: "_tag",
        Expression: "Patient.meta.tag",
      },      {
        Code: "_id",
        Expression: "Patient.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Patient.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Patient.meta.profile",
      },      {
        Code: "_security",
        Expression: "Patient.meta.security",
      },      {
        Code: "_source",
        Expression: "Patient.meta.source",
      },      {
        Code: "_tag",
        Expression: "Patient.meta.tag",
      },      {
        Code: "active",
        Expression: "Patient.active",
      },      {
        Code: "address",
        Expression: "",
      },      {
        Code: "address-city",
        Expression: "",
      },      {
        Code: "address-country",
        Expression: "",
      },      {
        Code: "address-postalcode",
        Expression: "",
      },      {
        Code: "address-state",
        Expression: "",
      },      {
        Code: "address-use",
        Expression: "",
      },      {
        Code: "birthdate",
        Expression: "",
      },      {
        Code: "death-date",
        Expression: "(Patient.deceased as dateTime)",
      },      {
        Code: "deceased",
        Expression: "Patient.deceased.exists() and Patient.deceased != false",
      },      {
        Code: "email",
        Expression: "",
      },      {
        Code: "family",
        Expression: "",
      },      {
        Code: "gender",
        Expression: "",
      },      {
        Code: "general-practitioner",
        Expression: "Patient.generalPractitioner",
      },      {
        Code: "given",
        Expression: "",
      },      {
        Code: "identifier",
        Expression: "Patient.identifier",
      },      {
        Code: "language",
        Expression: "Patient.communication.language",
      },      {
        Code: "link",
        Expression: "Patient.link.other",
      },      {
        Code: "name",
        Expression: "Patient.name",
      },      {
        Code: "organization",
        Expression: "Patient.managingOrganization",
      },      {
        Code: "phone",
        Expression: "",
      },      {
        Code: "phonetic",
        Expression: "",
      },      {
        Code: "telecom",
        Expression: "",
      },    },    "Person": {      {
        Code: "_id",
        Expression: "Person.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Person.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Person.meta.profile",
      },      {
        Code: "_security",
        Expression: "Person.meta.security",
      },      {
        Code: "_source",
        Expression: "Person.meta.source",
      },      {
        Code: "_tag",
        Expression: "Person.meta.tag",
      },      {
        Code: "_id",
        Expression: "Person.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Person.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Person.meta.profile",
      },      {
        Code: "_security",
        Expression: "Person.meta.security",
      },      {
        Code: "_source",
        Expression: "Person.meta.source",
      },      {
        Code: "_tag",
        Expression: "Person.meta.tag",
      },      {
        Code: "address",
        Expression: "",
      },      {
        Code: "address-city",
        Expression: "",
      },      {
        Code: "address-country",
        Expression: "",
      },      {
        Code: "address-postalcode",
        Expression: "",
      },      {
        Code: "address-state",
        Expression: "",
      },      {
        Code: "address-use",
        Expression: "",
      },      {
        Code: "birthdate",
        Expression: "",
      },      {
        Code: "email",
        Expression: "",
      },      {
        Code: "gender",
        Expression: "",
      },      {
        Code: "phone",
        Expression: "",
      },      {
        Code: "phonetic",
        Expression: "",
      },      {
        Code: "telecom",
        Expression: "",
      },      {
        Code: "identifier",
        Expression: "Person.identifier",
      },      {
        Code: "link",
        Expression: "Person.link.target",
      },      {
        Code: "name",
        Expression: "Person.name",
      },      {
        Code: "organization",
        Expression: "Person.managingOrganization",
      },      {
        Code: "patient",
        Expression: "Person.link.target.where(resolve() is Patient)",
      },      {
        Code: "practitioner",
        Expression: "Person.link.target.where(resolve() is Practitioner)",
      },      {
        Code: "relatedperson",
        Expression: "Person.link.target.where(resolve() is RelatedPerson)",
      },    },    "Practitioner": {      {
        Code: "_id",
        Expression: "Practitioner.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Practitioner.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Practitioner.meta.profile",
      },      {
        Code: "_security",
        Expression: "Practitioner.meta.security",
      },      {
        Code: "_source",
        Expression: "Practitioner.meta.source",
      },      {
        Code: "_tag",
        Expression: "Practitioner.meta.tag",
      },      {
        Code: "_id",
        Expression: "Practitioner.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Practitioner.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Practitioner.meta.profile",
      },      {
        Code: "_security",
        Expression: "Practitioner.meta.security",
      },      {
        Code: "_source",
        Expression: "Practitioner.meta.source",
      },      {
        Code: "_tag",
        Expression: "Practitioner.meta.tag",
      },      {
        Code: "address",
        Expression: "",
      },      {
        Code: "address-city",
        Expression: "",
      },      {
        Code: "address-country",
        Expression: "",
      },      {
        Code: "address-postalcode",
        Expression: "",
      },      {
        Code: "address-state",
        Expression: "",
      },      {
        Code: "address-use",
        Expression: "",
      },      {
        Code: "email",
        Expression: "",
      },      {
        Code: "family",
        Expression: "",
      },      {
        Code: "gender",
        Expression: "",
      },      {
        Code: "given",
        Expression: "",
      },      {
        Code: "phone",
        Expression: "",
      },      {
        Code: "phonetic",
        Expression: "",
      },      {
        Code: "telecom",
        Expression: "",
      },      {
        Code: "active",
        Expression: "Practitioner.active",
      },      {
        Code: "communication",
        Expression: "Practitioner.communication",
      },      {
        Code: "identifier",
        Expression: "Practitioner.identifier",
      },      {
        Code: "name",
        Expression: "Practitioner.name",
      },    },    "RelatedPerson": {      {
        Code: "_id",
        Expression: "RelatedPerson.id",
      },      {
        Code: "_lastUpdated",
        Expression: "RelatedPerson.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "RelatedPerson.meta.profile",
      },      {
        Code: "_security",
        Expression: "RelatedPerson.meta.security",
      },      {
        Code: "_source",
        Expression: "RelatedPerson.meta.source",
      },      {
        Code: "_tag",
        Expression: "RelatedPerson.meta.tag",
      },      {
        Code: "_id",
        Expression: "RelatedPerson.id",
      },      {
        Code: "_lastUpdated",
        Expression: "RelatedPerson.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "RelatedPerson.meta.profile",
      },      {
        Code: "_security",
        Expression: "RelatedPerson.meta.security",
      },      {
        Code: "_source",
        Expression: "RelatedPerson.meta.source",
      },      {
        Code: "_tag",
        Expression: "RelatedPerson.meta.tag",
      },      {
        Code: "address",
        Expression: "",
      },      {
        Code: "address-city",
        Expression: "",
      },      {
        Code: "address-country",
        Expression: "",
      },      {
        Code: "address-postalcode",
        Expression: "",
      },      {
        Code: "address-state",
        Expression: "",
      },      {
        Code: "address-use",
        Expression: "",
      },      {
        Code: "birthdate",
        Expression: "",
      },      {
        Code: "email",
        Expression: "",
      },      {
        Code: "gender",
        Expression: "",
      },      {
        Code: "phone",
        Expression: "",
      },      {
        Code: "phonetic",
        Expression: "",
      },      {
        Code: "telecom",
        Expression: "",
      },      {
        Code: "active",
        Expression: "RelatedPerson.active",
      },      {
        Code: "identifier",
        Expression: "RelatedPerson.identifier",
      },      {
        Code: "name",
        Expression: "RelatedPerson.name",
      },      {
        Code: "patient",
        Expression: "RelatedPerson.patient",
      },      {
        Code: "relationship",
        Expression: "RelatedPerson.relationship",
      },    },    "PractitionerRole": {      {
        Code: "_id",
        Expression: "PractitionerRole.id",
      },      {
        Code: "_lastUpdated",
        Expression: "PractitionerRole.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "PractitionerRole.meta.profile",
      },      {
        Code: "_security",
        Expression: "PractitionerRole.meta.security",
      },      {
        Code: "_source",
        Expression: "PractitionerRole.meta.source",
      },      {
        Code: "_tag",
        Expression: "PractitionerRole.meta.tag",
      },      {
        Code: "_id",
        Expression: "PractitionerRole.id",
      },      {
        Code: "_lastUpdated",
        Expression: "PractitionerRole.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "PractitionerRole.meta.profile",
      },      {
        Code: "_security",
        Expression: "PractitionerRole.meta.security",
      },      {
        Code: "_source",
        Expression: "PractitionerRole.meta.source",
      },      {
        Code: "_tag",
        Expression: "PractitionerRole.meta.tag",
      },      {
        Code: "email",
        Expression: "",
      },      {
        Code: "phone",
        Expression: "",
      },      {
        Code: "telecom",
        Expression: "",
      },      {
        Code: "active",
        Expression: "PractitionerRole.active",
      },      {
        Code: "date",
        Expression: "PractitionerRole.period",
      },      {
        Code: "endpoint",
        Expression: "PractitionerRole.endpoint",
      },      {
        Code: "identifier",
        Expression: "PractitionerRole.identifier",
      },      {
        Code: "location",
        Expression: "PractitionerRole.location",
      },      {
        Code: "organization",
        Expression: "PractitionerRole.organization",
      },      {
        Code: "practitioner",
        Expression: "PractitionerRole.practitioner",
      },      {
        Code: "role",
        Expression: "PractitionerRole.code",
      },      {
        Code: "service",
        Expression: "PractitionerRole.healthcareService",
      },      {
        Code: "specialty",
        Expression: "PractitionerRole.specialty",
      },    },    "PaymentNotice": {      {
        Code: "_id",
        Expression: "PaymentNotice.id",
      },      {
        Code: "_lastUpdated",
        Expression: "PaymentNotice.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "PaymentNotice.meta.profile",
      },      {
        Code: "_security",
        Expression: "PaymentNotice.meta.security",
      },      {
        Code: "_source",
        Expression: "PaymentNotice.meta.source",
      },      {
        Code: "_tag",
        Expression: "PaymentNotice.meta.tag",
      },      {
        Code: "_id",
        Expression: "PaymentNotice.id",
      },      {
        Code: "_lastUpdated",
        Expression: "PaymentNotice.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "PaymentNotice.meta.profile",
      },      {
        Code: "_security",
        Expression: "PaymentNotice.meta.security",
      },      {
        Code: "_source",
        Expression: "PaymentNotice.meta.source",
      },      {
        Code: "_tag",
        Expression: "PaymentNotice.meta.tag",
      },      {
        Code: "created",
        Expression: "PaymentNotice.created",
      },      {
        Code: "identifier",
        Expression: "PaymentNotice.identifier",
      },      {
        Code: "payment-status",
        Expression: "PaymentNotice.paymentStatus",
      },      {
        Code: "provider",
        Expression: "PaymentNotice.provider",
      },      {
        Code: "request",
        Expression: "PaymentNotice.request",
      },      {
        Code: "response",
        Expression: "PaymentNotice.response",
      },      {
        Code: "status",
        Expression: "PaymentNotice.status",
      },    },    "PaymentReconciliation": {      {
        Code: "_id",
        Expression: "PaymentReconciliation.id",
      },      {
        Code: "_lastUpdated",
        Expression: "PaymentReconciliation.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "PaymentReconciliation.meta.profile",
      },      {
        Code: "_security",
        Expression: "PaymentReconciliation.meta.security",
      },      {
        Code: "_source",
        Expression: "PaymentReconciliation.meta.source",
      },      {
        Code: "_tag",
        Expression: "PaymentReconciliation.meta.tag",
      },      {
        Code: "_id",
        Expression: "PaymentReconciliation.id",
      },      {
        Code: "_lastUpdated",
        Expression: "PaymentReconciliation.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "PaymentReconciliation.meta.profile",
      },      {
        Code: "_security",
        Expression: "PaymentReconciliation.meta.security",
      },      {
        Code: "_source",
        Expression: "PaymentReconciliation.meta.source",
      },      {
        Code: "_tag",
        Expression: "PaymentReconciliation.meta.tag",
      },      {
        Code: "created",
        Expression: "PaymentReconciliation.created",
      },      {
        Code: "disposition",
        Expression: "PaymentReconciliation.disposition",
      },      {
        Code: "identifier",
        Expression: "PaymentReconciliation.identifier",
      },      {
        Code: "outcome",
        Expression: "PaymentReconciliation.outcome",
      },      {
        Code: "payment-issuer",
        Expression: "PaymentReconciliation.paymentIssuer",
      },      {
        Code: "request",
        Expression: "PaymentReconciliation.request",
      },      {
        Code: "requestor",
        Expression: "PaymentReconciliation.requestor",
      },      {
        Code: "status",
        Expression: "PaymentReconciliation.status",
      },    },    "PlanDefinition": {      {
        Code: "_id",
        Expression: "PlanDefinition.id",
      },      {
        Code: "_lastUpdated",
        Expression: "PlanDefinition.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "PlanDefinition.meta.profile",
      },      {
        Code: "_security",
        Expression: "PlanDefinition.meta.security",
      },      {
        Code: "_source",
        Expression: "PlanDefinition.meta.source",
      },      {
        Code: "_tag",
        Expression: "PlanDefinition.meta.tag",
      },      {
        Code: "_id",
        Expression: "PlanDefinition.id",
      },      {
        Code: "_lastUpdated",
        Expression: "PlanDefinition.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "PlanDefinition.meta.profile",
      },      {
        Code: "_security",
        Expression: "PlanDefinition.meta.security",
      },      {
        Code: "_source",
        Expression: "PlanDefinition.meta.source",
      },      {
        Code: "_tag",
        Expression: "PlanDefinition.meta.tag",
      },      {
        Code: "composed-of",
        Expression: "PlanDefinition.relatedArtifact.where(type='composed-of').resource",
      },      {
        Code: "context",
        Expression: "(PlanDefinition.useContext.value as CodeableConcept)",
      },      {
        Code: "context-quantity",
        Expression: "",
      },      {
        Code: "context-type",
        Expression: "PlanDefinition.useContext.code",
      },      {
        Code: "date",
        Expression: "PlanDefinition.date",
      },      {
        Code: "definition",
        Expression: "PlanDefinition.action.definition",
      },      {
        Code: "depends-on",
        Expression: "",
      },      {
        Code: "derived-from",
        Expression: "PlanDefinition.relatedArtifact.where(type='derived-from').resource",
      },      {
        Code: "description",
        Expression: "PlanDefinition.description",
      },      {
        Code: "effective",
        Expression: "PlanDefinition.effectivePeriod",
      },      {
        Code: "identifier",
        Expression: "PlanDefinition.identifier",
      },      {
        Code: "jurisdiction",
        Expression: "PlanDefinition.jurisdiction",
      },      {
        Code: "name",
        Expression: "PlanDefinition.name",
      },      {
        Code: "predecessor",
        Expression: "PlanDefinition.relatedArtifact.where(type='predecessor').resource",
      },      {
        Code: "publisher",
        Expression: "PlanDefinition.publisher",
      },      {
        Code: "status",
        Expression: "PlanDefinition.status",
      },      {
        Code: "successor",
        Expression: "PlanDefinition.relatedArtifact.where(type='successor').resource",
      },      {
        Code: "title",
        Expression: "PlanDefinition.title",
      },      {
        Code: "topic",
        Expression: "PlanDefinition.topic",
      },      {
        Code: "type",
        Expression: "PlanDefinition.type",
      },      {
        Code: "url",
        Expression: "PlanDefinition.url",
      },      {
        Code: "version",
        Expression: "PlanDefinition.version",
      },      {
        Code: "context-type-quantity",
        Expression: "PlanDefinition.useContext",
      },      {
        Code: "context-type-value",
        Expression: "PlanDefinition.useContext",
      },    },    "Provenance": {      {
        Code: "_id",
        Expression: "Provenance.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Provenance.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Provenance.meta.profile",
      },      {
        Code: "_security",
        Expression: "Provenance.meta.security",
      },      {
        Code: "_source",
        Expression: "Provenance.meta.source",
      },      {
        Code: "_tag",
        Expression: "Provenance.meta.tag",
      },      {
        Code: "_id",
        Expression: "Provenance.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Provenance.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Provenance.meta.profile",
      },      {
        Code: "_security",
        Expression: "Provenance.meta.security",
      },      {
        Code: "_source",
        Expression: "Provenance.meta.source",
      },      {
        Code: "_tag",
        Expression: "Provenance.meta.tag",
      },      {
        Code: "agent",
        Expression: "Provenance.agent.who",
      },      {
        Code: "agent-role",
        Expression: "Provenance.agent.role",
      },      {
        Code: "agent-type",
        Expression: "Provenance.agent.type",
      },      {
        Code: "entity",
        Expression: "Provenance.entity.what",
      },      {
        Code: "location",
        Expression: "Provenance.location",
      },      {
        Code: "patient",
        Expression: "Provenance.target.where(resolve() is Patient)",
      },      {
        Code: "recorded",
        Expression: "Provenance.recorded",
      },      {
        Code: "signature-type",
        Expression: "Provenance.signature.type",
      },      {
        Code: "target",
        Expression: "Provenance.target",
      },      {
        Code: "when",
        Expression: "(Provenance.occurred as dateTime)",
      },    },    "Questionnaire": {      {
        Code: "_id",
        Expression: "Questionnaire.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Questionnaire.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Questionnaire.meta.profile",
      },      {
        Code: "_security",
        Expression: "Questionnaire.meta.security",
      },      {
        Code: "_source",
        Expression: "Questionnaire.meta.source",
      },      {
        Code: "_tag",
        Expression: "Questionnaire.meta.tag",
      },      {
        Code: "_id",
        Expression: "Questionnaire.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Questionnaire.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Questionnaire.meta.profile",
      },      {
        Code: "_security",
        Expression: "Questionnaire.meta.security",
      },      {
        Code: "_source",
        Expression: "Questionnaire.meta.source",
      },      {
        Code: "_tag",
        Expression: "Questionnaire.meta.tag",
      },      {
        Code: "code",
        Expression: "Questionnaire.item.code",
      },      {
        Code: "context",
        Expression: "(Questionnaire.useContext.value as CodeableConcept)",
      },      {
        Code: "context-quantity",
        Expression: "",
      },      {
        Code: "context-type",
        Expression: "Questionnaire.useContext.code",
      },      {
        Code: "date",
        Expression: "Questionnaire.date",
      },      {
        Code: "definition",
        Expression: "Questionnaire.item.definition",
      },      {
        Code: "description",
        Expression: "Questionnaire.description",
      },      {
        Code: "effective",
        Expression: "Questionnaire.effectivePeriod",
      },      {
        Code: "identifier",
        Expression: "Questionnaire.identifier",
      },      {
        Code: "jurisdiction",
        Expression: "Questionnaire.jurisdiction",
      },      {
        Code: "name",
        Expression: "Questionnaire.name",
      },      {
        Code: "publisher",
        Expression: "Questionnaire.publisher",
      },      {
        Code: "status",
        Expression: "Questionnaire.status",
      },      {
        Code: "subject-type",
        Expression: "Questionnaire.subjectType",
      },      {
        Code: "title",
        Expression: "Questionnaire.title",
      },      {
        Code: "url",
        Expression: "Questionnaire.url",
      },      {
        Code: "version",
        Expression: "Questionnaire.version",
      },      {
        Code: "context-type-quantity",
        Expression: "Questionnaire.useContext",
      },      {
        Code: "context-type-value",
        Expression: "Questionnaire.useContext",
      },    },    "QuestionnaireResponse": {      {
        Code: "_id",
        Expression: "QuestionnaireResponse.id",
      },      {
        Code: "_lastUpdated",
        Expression: "QuestionnaireResponse.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "QuestionnaireResponse.meta.profile",
      },      {
        Code: "_security",
        Expression: "QuestionnaireResponse.meta.security",
      },      {
        Code: "_source",
        Expression: "QuestionnaireResponse.meta.source",
      },      {
        Code: "_tag",
        Expression: "QuestionnaireResponse.meta.tag",
      },      {
        Code: "_id",
        Expression: "QuestionnaireResponse.id",
      },      {
        Code: "_lastUpdated",
        Expression: "QuestionnaireResponse.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "QuestionnaireResponse.meta.profile",
      },      {
        Code: "_security",
        Expression: "QuestionnaireResponse.meta.security",
      },      {
        Code: "_source",
        Expression: "QuestionnaireResponse.meta.source",
      },      {
        Code: "_tag",
        Expression: "QuestionnaireResponse.meta.tag",
      },      {
        Code: "author",
        Expression: "QuestionnaireResponse.author",
      },      {
        Code: "authored",
        Expression: "QuestionnaireResponse.authored",
      },      {
        Code: "based-on",
        Expression: "QuestionnaireResponse.basedOn",
      },      {
        Code: "encounter",
        Expression: "QuestionnaireResponse.encounter",
      },      {
        Code: "identifier",
        Expression: "QuestionnaireResponse.identifier",
      },      {
        Code: "part-of",
        Expression: "QuestionnaireResponse.partOf",
      },      {
        Code: "patient",
        Expression: "QuestionnaireResponse.subject.where(resolve() is Patient)",
      },      {
        Code: "questionnaire",
        Expression: "QuestionnaireResponse.questionnaire",
      },      {
        Code: "source",
        Expression: "QuestionnaireResponse.source",
      },      {
        Code: "status",
        Expression: "QuestionnaireResponse.status",
      },      {
        Code: "subject",
        Expression: "QuestionnaireResponse.subject",
      },    },    "RequestGroup": {      {
        Code: "_id",
        Expression: "RequestGroup.id",
      },      {
        Code: "_lastUpdated",
        Expression: "RequestGroup.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "RequestGroup.meta.profile",
      },      {
        Code: "_security",
        Expression: "RequestGroup.meta.security",
      },      {
        Code: "_source",
        Expression: "RequestGroup.meta.source",
      },      {
        Code: "_tag",
        Expression: "RequestGroup.meta.tag",
      },      {
        Code: "_id",
        Expression: "RequestGroup.id",
      },      {
        Code: "_lastUpdated",
        Expression: "RequestGroup.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "RequestGroup.meta.profile",
      },      {
        Code: "_security",
        Expression: "RequestGroup.meta.security",
      },      {
        Code: "_source",
        Expression: "RequestGroup.meta.source",
      },      {
        Code: "_tag",
        Expression: "RequestGroup.meta.tag",
      },      {
        Code: "author",
        Expression: "RequestGroup.author",
      },      {
        Code: "authored",
        Expression: "RequestGroup.authoredOn",
      },      {
        Code: "code",
        Expression: "RequestGroup.code",
      },      {
        Code: "encounter",
        Expression: "RequestGroup.encounter",
      },      {
        Code: "group-identifier",
        Expression: "RequestGroup.groupIdentifier",
      },      {
        Code: "identifier",
        Expression: "RequestGroup.identifier",
      },      {
        Code: "instantiates-canonical",
        Expression: "RequestGroup.instantiatesCanonical",
      },      {
        Code: "instantiates-uri",
        Expression: "RequestGroup.instantiatesUri",
      },      {
        Code: "intent",
        Expression: "RequestGroup.intent",
      },      {
        Code: "participant",
        Expression: "RequestGroup.action.participant",
      },      {
        Code: "patient",
        Expression: "RequestGroup.subject.where(resolve() is Patient)",
      },      {
        Code: "priority",
        Expression: "RequestGroup.priority",
      },      {
        Code: "status",
        Expression: "RequestGroup.status",
      },      {
        Code: "subject",
        Expression: "RequestGroup.subject",
      },    },    "ResearchDefinition": {      {
        Code: "_id",
        Expression: "ResearchDefinition.id",
      },      {
        Code: "_lastUpdated",
        Expression: "ResearchDefinition.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "ResearchDefinition.meta.profile",
      },      {
        Code: "_security",
        Expression: "ResearchDefinition.meta.security",
      },      {
        Code: "_source",
        Expression: "ResearchDefinition.meta.source",
      },      {
        Code: "_tag",
        Expression: "ResearchDefinition.meta.tag",
      },      {
        Code: "_id",
        Expression: "ResearchDefinition.id",
      },      {
        Code: "_lastUpdated",
        Expression: "ResearchDefinition.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "ResearchDefinition.meta.profile",
      },      {
        Code: "_security",
        Expression: "ResearchDefinition.meta.security",
      },      {
        Code: "_source",
        Expression: "ResearchDefinition.meta.source",
      },      {
        Code: "_tag",
        Expression: "ResearchDefinition.meta.tag",
      },      {
        Code: "composed-of",
        Expression: "ResearchDefinition.relatedArtifact.where(type='composed-of').resource",
      },      {
        Code: "context",
        Expression: "(ResearchDefinition.useContext.value as CodeableConcept)",
      },      {
        Code: "context-quantity",
        Expression: "",
      },      {
        Code: "context-type",
        Expression: "ResearchDefinition.useContext.code",
      },      {
        Code: "date",
        Expression: "ResearchDefinition.date",
      },      {
        Code: "depends-on",
        Expression: "",
      },      {
        Code: "derived-from",
        Expression: "ResearchDefinition.relatedArtifact.where(type='derived-from').resource",
      },      {
        Code: "description",
        Expression: "ResearchDefinition.description",
      },      {
        Code: "effective",
        Expression: "ResearchDefinition.effectivePeriod",
      },      {
        Code: "identifier",
        Expression: "ResearchDefinition.identifier",
      },      {
        Code: "jurisdiction",
        Expression: "ResearchDefinition.jurisdiction",
      },      {
        Code: "name",
        Expression: "ResearchDefinition.name",
      },      {
        Code: "predecessor",
        Expression: "ResearchDefinition.relatedArtifact.where(type='predecessor').resource",
      },      {
        Code: "publisher",
        Expression: "ResearchDefinition.publisher",
      },      {
        Code: "status",
        Expression: "ResearchDefinition.status",
      },      {
        Code: "successor",
        Expression: "ResearchDefinition.relatedArtifact.where(type='successor').resource",
      },      {
        Code: "title",
        Expression: "ResearchDefinition.title",
      },      {
        Code: "topic",
        Expression: "ResearchDefinition.topic",
      },      {
        Code: "url",
        Expression: "ResearchDefinition.url",
      },      {
        Code: "version",
        Expression: "ResearchDefinition.version",
      },      {
        Code: "context-type-quantity",
        Expression: "ResearchDefinition.useContext",
      },      {
        Code: "context-type-value",
        Expression: "ResearchDefinition.useContext",
      },    },    "ResearchElementDefinition": {      {
        Code: "_id",
        Expression: "ResearchElementDefinition.id",
      },      {
        Code: "_lastUpdated",
        Expression: "ResearchElementDefinition.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "ResearchElementDefinition.meta.profile",
      },      {
        Code: "_security",
        Expression: "ResearchElementDefinition.meta.security",
      },      {
        Code: "_source",
        Expression: "ResearchElementDefinition.meta.source",
      },      {
        Code: "_tag",
        Expression: "ResearchElementDefinition.meta.tag",
      },      {
        Code: "_id",
        Expression: "ResearchElementDefinition.id",
      },      {
        Code: "_lastUpdated",
        Expression: "ResearchElementDefinition.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "ResearchElementDefinition.meta.profile",
      },      {
        Code: "_security",
        Expression: "ResearchElementDefinition.meta.security",
      },      {
        Code: "_source",
        Expression: "ResearchElementDefinition.meta.source",
      },      {
        Code: "_tag",
        Expression: "ResearchElementDefinition.meta.tag",
      },      {
        Code: "composed-of",
        Expression: "ResearchElementDefinition.relatedArtifact.where(type='composed-of').resource",
      },      {
        Code: "context",
        Expression: "(ResearchElementDefinition.useContext.value as CodeableConcept)",
      },      {
        Code: "context-quantity",
        Expression: "",
      },      {
        Code: "context-type",
        Expression: "ResearchElementDefinition.useContext.code",
      },      {
        Code: "date",
        Expression: "ResearchElementDefinition.date",
      },      {
        Code: "depends-on",
        Expression: "",
      },      {
        Code: "derived-from",
        Expression: "ResearchElementDefinition.relatedArtifact.where(type='derived-from').resource",
      },      {
        Code: "description",
        Expression: "ResearchElementDefinition.description",
      },      {
        Code: "effective",
        Expression: "ResearchElementDefinition.effectivePeriod",
      },      {
        Code: "identifier",
        Expression: "ResearchElementDefinition.identifier",
      },      {
        Code: "jurisdiction",
        Expression: "ResearchElementDefinition.jurisdiction",
      },      {
        Code: "name",
        Expression: "ResearchElementDefinition.name",
      },      {
        Code: "predecessor",
        Expression: "ResearchElementDefinition.relatedArtifact.where(type='predecessor').resource",
      },      {
        Code: "publisher",
        Expression: "ResearchElementDefinition.publisher",
      },      {
        Code: "status",
        Expression: "ResearchElementDefinition.status",
      },      {
        Code: "successor",
        Expression: "ResearchElementDefinition.relatedArtifact.where(type='successor').resource",
      },      {
        Code: "title",
        Expression: "ResearchElementDefinition.title",
      },      {
        Code: "topic",
        Expression: "ResearchElementDefinition.topic",
      },      {
        Code: "url",
        Expression: "ResearchElementDefinition.url",
      },      {
        Code: "version",
        Expression: "ResearchElementDefinition.version",
      },      {
        Code: "context-type-quantity",
        Expression: "ResearchElementDefinition.useContext",
      },      {
        Code: "context-type-value",
        Expression: "ResearchElementDefinition.useContext",
      },    },    "ResearchStudy": {      {
        Code: "_id",
        Expression: "ResearchStudy.id",
      },      {
        Code: "_lastUpdated",
        Expression: "ResearchStudy.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "ResearchStudy.meta.profile",
      },      {
        Code: "_security",
        Expression: "ResearchStudy.meta.security",
      },      {
        Code: "_source",
        Expression: "ResearchStudy.meta.source",
      },      {
        Code: "_tag",
        Expression: "ResearchStudy.meta.tag",
      },      {
        Code: "_id",
        Expression: "ResearchStudy.id",
      },      {
        Code: "_lastUpdated",
        Expression: "ResearchStudy.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "ResearchStudy.meta.profile",
      },      {
        Code: "_security",
        Expression: "ResearchStudy.meta.security",
      },      {
        Code: "_source",
        Expression: "ResearchStudy.meta.source",
      },      {
        Code: "_tag",
        Expression: "ResearchStudy.meta.tag",
      },      {
        Code: "category",
        Expression: "ResearchStudy.category",
      },      {
        Code: "date",
        Expression: "ResearchStudy.period",
      },      {
        Code: "focus",
        Expression: "ResearchStudy.focus",
      },      {
        Code: "identifier",
        Expression: "ResearchStudy.identifier",
      },      {
        Code: "keyword",
        Expression: "ResearchStudy.keyword",
      },      {
        Code: "location",
        Expression: "ResearchStudy.location",
      },      {
        Code: "partof",
        Expression: "ResearchStudy.partOf",
      },      {
        Code: "principalinvestigator",
        Expression: "ResearchStudy.principalInvestigator",
      },      {
        Code: "protocol",
        Expression: "ResearchStudy.protocol",
      },      {
        Code: "site",
        Expression: "ResearchStudy.site",
      },      {
        Code: "sponsor",
        Expression: "ResearchStudy.sponsor",
      },      {
        Code: "status",
        Expression: "ResearchStudy.status",
      },      {
        Code: "title",
        Expression: "ResearchStudy.title",
      },    },    "ResearchSubject": {      {
        Code: "_id",
        Expression: "ResearchSubject.id",
      },      {
        Code: "_lastUpdated",
        Expression: "ResearchSubject.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "ResearchSubject.meta.profile",
      },      {
        Code: "_security",
        Expression: "ResearchSubject.meta.security",
      },      {
        Code: "_source",
        Expression: "ResearchSubject.meta.source",
      },      {
        Code: "_tag",
        Expression: "ResearchSubject.meta.tag",
      },      {
        Code: "_id",
        Expression: "ResearchSubject.id",
      },      {
        Code: "_lastUpdated",
        Expression: "ResearchSubject.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "ResearchSubject.meta.profile",
      },      {
        Code: "_security",
        Expression: "ResearchSubject.meta.security",
      },      {
        Code: "_source",
        Expression: "ResearchSubject.meta.source",
      },      {
        Code: "_tag",
        Expression: "ResearchSubject.meta.tag",
      },      {
        Code: "date",
        Expression: "ResearchSubject.period",
      },      {
        Code: "identifier",
        Expression: "ResearchSubject.identifier",
      },      {
        Code: "individual",
        Expression: "ResearchSubject.individual",
      },      {
        Code: "patient",
        Expression: "ResearchSubject.individual",
      },      {
        Code: "status",
        Expression: "ResearchSubject.status",
      },      {
        Code: "study",
        Expression: "ResearchSubject.study",
      },    },    "RiskEvidenceSynthesis": {      {
        Code: "_id",
        Expression: "RiskEvidenceSynthesis.id",
      },      {
        Code: "_lastUpdated",
        Expression: "RiskEvidenceSynthesis.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "RiskEvidenceSynthesis.meta.profile",
      },      {
        Code: "_security",
        Expression: "RiskEvidenceSynthesis.meta.security",
      },      {
        Code: "_source",
        Expression: "RiskEvidenceSynthesis.meta.source",
      },      {
        Code: "_tag",
        Expression: "RiskEvidenceSynthesis.meta.tag",
      },      {
        Code: "_id",
        Expression: "RiskEvidenceSynthesis.id",
      },      {
        Code: "_lastUpdated",
        Expression: "RiskEvidenceSynthesis.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "RiskEvidenceSynthesis.meta.profile",
      },      {
        Code: "_security",
        Expression: "RiskEvidenceSynthesis.meta.security",
      },      {
        Code: "_source",
        Expression: "RiskEvidenceSynthesis.meta.source",
      },      {
        Code: "_tag",
        Expression: "RiskEvidenceSynthesis.meta.tag",
      },      {
        Code: "context",
        Expression: "(RiskEvidenceSynthesis.useContext.value as CodeableConcept)",
      },      {
        Code: "context-quantity",
        Expression: "",
      },      {
        Code: "context-type",
        Expression: "RiskEvidenceSynthesis.useContext.code",
      },      {
        Code: "date",
        Expression: "RiskEvidenceSynthesis.date",
      },      {
        Code: "description",
        Expression: "RiskEvidenceSynthesis.description",
      },      {
        Code: "effective",
        Expression: "RiskEvidenceSynthesis.effectivePeriod",
      },      {
        Code: "identifier",
        Expression: "RiskEvidenceSynthesis.identifier",
      },      {
        Code: "jurisdiction",
        Expression: "RiskEvidenceSynthesis.jurisdiction",
      },      {
        Code: "name",
        Expression: "RiskEvidenceSynthesis.name",
      },      {
        Code: "publisher",
        Expression: "RiskEvidenceSynthesis.publisher",
      },      {
        Code: "status",
        Expression: "RiskEvidenceSynthesis.status",
      },      {
        Code: "title",
        Expression: "RiskEvidenceSynthesis.title",
      },      {
        Code: "url",
        Expression: "RiskEvidenceSynthesis.url",
      },      {
        Code: "version",
        Expression: "RiskEvidenceSynthesis.version",
      },      {
        Code: "context-type-quantity",
        Expression: "RiskEvidenceSynthesis.useContext",
      },      {
        Code: "context-type-value",
        Expression: "RiskEvidenceSynthesis.useContext",
      },    },    "Schedule": {      {
        Code: "_id",
        Expression: "Schedule.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Schedule.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Schedule.meta.profile",
      },      {
        Code: "_security",
        Expression: "Schedule.meta.security",
      },      {
        Code: "_source",
        Expression: "Schedule.meta.source",
      },      {
        Code: "_tag",
        Expression: "Schedule.meta.tag",
      },      {
        Code: "_id",
        Expression: "Schedule.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Schedule.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Schedule.meta.profile",
      },      {
        Code: "_security",
        Expression: "Schedule.meta.security",
      },      {
        Code: "_source",
        Expression: "Schedule.meta.source",
      },      {
        Code: "_tag",
        Expression: "Schedule.meta.tag",
      },      {
        Code: "active",
        Expression: "Schedule.active",
      },      {
        Code: "actor",
        Expression: "Schedule.actor",
      },      {
        Code: "date",
        Expression: "Schedule.planningHorizon",
      },      {
        Code: "identifier",
        Expression: "Schedule.identifier",
      },      {
        Code: "service-category",
        Expression: "Schedule.serviceCategory",
      },      {
        Code: "service-type",
        Expression: "Schedule.serviceType",
      },      {
        Code: "specialty",
        Expression: "Schedule.specialty",
      },    },    "Slot": {      {
        Code: "_id",
        Expression: "Slot.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Slot.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Slot.meta.profile",
      },      {
        Code: "_security",
        Expression: "Slot.meta.security",
      },      {
        Code: "_source",
        Expression: "Slot.meta.source",
      },      {
        Code: "_tag",
        Expression: "Slot.meta.tag",
      },      {
        Code: "_id",
        Expression: "Slot.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Slot.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Slot.meta.profile",
      },      {
        Code: "_security",
        Expression: "Slot.meta.security",
      },      {
        Code: "_source",
        Expression: "Slot.meta.source",
      },      {
        Code: "_tag",
        Expression: "Slot.meta.tag",
      },      {
        Code: "appointment-type",
        Expression: "Slot.appointmentType",
      },      {
        Code: "identifier",
        Expression: "Slot.identifier",
      },      {
        Code: "schedule",
        Expression: "Slot.schedule",
      },      {
        Code: "service-category",
        Expression: "Slot.serviceCategory",
      },      {
        Code: "service-type",
        Expression: "Slot.serviceType",
      },      {
        Code: "specialty",
        Expression: "Slot.specialty",
      },      {
        Code: "start",
        Expression: "Slot.start",
      },      {
        Code: "status",
        Expression: "Slot.status",
      },    },    "Specimen": {      {
        Code: "_id",
        Expression: "Specimen.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Specimen.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Specimen.meta.profile",
      },      {
        Code: "_security",
        Expression: "Specimen.meta.security",
      },      {
        Code: "_source",
        Expression: "Specimen.meta.source",
      },      {
        Code: "_tag",
        Expression: "Specimen.meta.tag",
      },      {
        Code: "_id",
        Expression: "Specimen.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Specimen.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Specimen.meta.profile",
      },      {
        Code: "_security",
        Expression: "Specimen.meta.security",
      },      {
        Code: "_source",
        Expression: "Specimen.meta.source",
      },      {
        Code: "_tag",
        Expression: "Specimen.meta.tag",
      },      {
        Code: "accession",
        Expression: "Specimen.accessionIdentifier",
      },      {
        Code: "bodysite",
        Expression: "Specimen.collection.bodySite",
      },      {
        Code: "collected",
        Expression: "Specimen.collection.collected",
      },      {
        Code: "collector",
        Expression: "Specimen.collection.collector",
      },      {
        Code: "container",
        Expression: "Specimen.container.type",
      },      {
        Code: "container-id",
        Expression: "Specimen.container.identifier",
      },      {
        Code: "identifier",
        Expression: "Specimen.identifier",
      },      {
        Code: "parent",
        Expression: "Specimen.parent",
      },      {
        Code: "patient",
        Expression: "Specimen.subject.where(resolve() is Patient)",
      },      {
        Code: "status",
        Expression: "Specimen.status",
      },      {
        Code: "subject",
        Expression: "Specimen.subject",
      },      {
        Code: "type",
        Expression: "Specimen.type",
      },    },    "SpecimenDefinition": {      {
        Code: "_id",
        Expression: "SpecimenDefinition.id",
      },      {
        Code: "_lastUpdated",
        Expression: "SpecimenDefinition.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "SpecimenDefinition.meta.profile",
      },      {
        Code: "_security",
        Expression: "SpecimenDefinition.meta.security",
      },      {
        Code: "_source",
        Expression: "SpecimenDefinition.meta.source",
      },      {
        Code: "_tag",
        Expression: "SpecimenDefinition.meta.tag",
      },      {
        Code: "_id",
        Expression: "SpecimenDefinition.id",
      },      {
        Code: "_lastUpdated",
        Expression: "SpecimenDefinition.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "SpecimenDefinition.meta.profile",
      },      {
        Code: "_security",
        Expression: "SpecimenDefinition.meta.security",
      },      {
        Code: "_source",
        Expression: "SpecimenDefinition.meta.source",
      },      {
        Code: "_tag",
        Expression: "SpecimenDefinition.meta.tag",
      },      {
        Code: "container",
        Expression: "SpecimenDefinition.typeTested.container.type",
      },      {
        Code: "identifier",
        Expression: "SpecimenDefinition.identifier",
      },      {
        Code: "type",
        Expression: "SpecimenDefinition.typeCollected",
      },    },    "Subscription": {      {
        Code: "_id",
        Expression: "Subscription.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Subscription.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Subscription.meta.profile",
      },      {
        Code: "_security",
        Expression: "Subscription.meta.security",
      },      {
        Code: "_source",
        Expression: "Subscription.meta.source",
      },      {
        Code: "_tag",
        Expression: "Subscription.meta.tag",
      },      {
        Code: "_id",
        Expression: "Subscription.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Subscription.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Subscription.meta.profile",
      },      {
        Code: "_security",
        Expression: "Subscription.meta.security",
      },      {
        Code: "_source",
        Expression: "Subscription.meta.source",
      },      {
        Code: "_tag",
        Expression: "Subscription.meta.tag",
      },      {
        Code: "contact",
        Expression: "Subscription.contact",
      },      {
        Code: "criteria",
        Expression: "Subscription.criteria",
      },      {
        Code: "payload",
        Expression: "Subscription.channel.payload",
      },      {
        Code: "status",
        Expression: "Subscription.status",
      },      {
        Code: "type",
        Expression: "Subscription.channel.type",
      },      {
        Code: "url",
        Expression: "Subscription.channel.endpoint",
      },    },    "Substance": {      {
        Code: "_id",
        Expression: "Substance.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Substance.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Substance.meta.profile",
      },      {
        Code: "_security",
        Expression: "Substance.meta.security",
      },      {
        Code: "_source",
        Expression: "Substance.meta.source",
      },      {
        Code: "_tag",
        Expression: "Substance.meta.tag",
      },      {
        Code: "_id",
        Expression: "Substance.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Substance.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Substance.meta.profile",
      },      {
        Code: "_security",
        Expression: "Substance.meta.security",
      },      {
        Code: "_source",
        Expression: "Substance.meta.source",
      },      {
        Code: "_tag",
        Expression: "Substance.meta.tag",
      },      {
        Code: "category",
        Expression: "Substance.category",
      },      {
        Code: "code",
        Expression: "",
      },      {
        Code: "container-identifier",
        Expression: "Substance.instance.identifier",
      },      {
        Code: "expiry",
        Expression: "Substance.instance.expiry",
      },      {
        Code: "identifier",
        Expression: "Substance.identifier",
      },      {
        Code: "quantity",
        Expression: "Substance.instance.quantity",
      },      {
        Code: "status",
        Expression: "Substance.status",
      },      {
        Code: "substance-reference",
        Expression: "(Substance.ingredient.substance as Reference)",
      },    },    "SubstanceSpecification": {      {
        Code: "_id",
        Expression: "SubstanceSpecification.id",
      },      {
        Code: "_lastUpdated",
        Expression: "SubstanceSpecification.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "SubstanceSpecification.meta.profile",
      },      {
        Code: "_security",
        Expression: "SubstanceSpecification.meta.security",
      },      {
        Code: "_source",
        Expression: "SubstanceSpecification.meta.source",
      },      {
        Code: "_tag",
        Expression: "SubstanceSpecification.meta.tag",
      },      {
        Code: "_id",
        Expression: "SubstanceSpecification.id",
      },      {
        Code: "_lastUpdated",
        Expression: "SubstanceSpecification.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "SubstanceSpecification.meta.profile",
      },      {
        Code: "_security",
        Expression: "SubstanceSpecification.meta.security",
      },      {
        Code: "_source",
        Expression: "SubstanceSpecification.meta.source",
      },      {
        Code: "_tag",
        Expression: "SubstanceSpecification.meta.tag",
      },      {
        Code: "code",
        Expression: "SubstanceSpecification.code.code",
      },    },    "Task": {      {
        Code: "_id",
        Expression: "Task.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Task.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Task.meta.profile",
      },      {
        Code: "_security",
        Expression: "Task.meta.security",
      },      {
        Code: "_source",
        Expression: "Task.meta.source",
      },      {
        Code: "_tag",
        Expression: "Task.meta.tag",
      },      {
        Code: "_id",
        Expression: "Task.id",
      },      {
        Code: "_lastUpdated",
        Expression: "Task.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "Task.meta.profile",
      },      {
        Code: "_security",
        Expression: "Task.meta.security",
      },      {
        Code: "_source",
        Expression: "Task.meta.source",
      },      {
        Code: "_tag",
        Expression: "Task.meta.tag",
      },      {
        Code: "authored-on",
        Expression: "Task.authoredOn",
      },      {
        Code: "based-on",
        Expression: "Task.basedOn",
      },      {
        Code: "business-status",
        Expression: "Task.businessStatus",
      },      {
        Code: "code",
        Expression: "Task.code",
      },      {
        Code: "encounter",
        Expression: "Task.encounter",
      },      {
        Code: "focus",
        Expression: "Task.focus",
      },      {
        Code: "group-identifier",
        Expression: "Task.groupIdentifier",
      },      {
        Code: "identifier",
        Expression: "Task.identifier",
      },      {
        Code: "intent",
        Expression: "Task.intent",
      },      {
        Code: "modified",
        Expression: "Task.lastModified",
      },      {
        Code: "owner",
        Expression: "Task.owner",
      },      {
        Code: "part-of",
        Expression: "Task.partOf",
      },      {
        Code: "patient",
        Expression: "Task.for.where(resolve() is Patient)",
      },      {
        Code: "performer",
        Expression: "Task.performerType",
      },      {
        Code: "period",
        Expression: "Task.executionPeriod",
      },      {
        Code: "priority",
        Expression: "Task.priority",
      },      {
        Code: "requester",
        Expression: "Task.requester",
      },      {
        Code: "status",
        Expression: "Task.status",
      },      {
        Code: "subject",
        Expression: "Task.for",
      },    },    "TestReport": {      {
        Code: "_id",
        Expression: "TestReport.id",
      },      {
        Code: "_lastUpdated",
        Expression: "TestReport.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "TestReport.meta.profile",
      },      {
        Code: "_security",
        Expression: "TestReport.meta.security",
      },      {
        Code: "_source",
        Expression: "TestReport.meta.source",
      },      {
        Code: "_tag",
        Expression: "TestReport.meta.tag",
      },      {
        Code: "_id",
        Expression: "TestReport.id",
      },      {
        Code: "_lastUpdated",
        Expression: "TestReport.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "TestReport.meta.profile",
      },      {
        Code: "_security",
        Expression: "TestReport.meta.security",
      },      {
        Code: "_source",
        Expression: "TestReport.meta.source",
      },      {
        Code: "_tag",
        Expression: "TestReport.meta.tag",
      },      {
        Code: "identifier",
        Expression: "TestReport.identifier",
      },      {
        Code: "issued",
        Expression: "TestReport.issued",
      },      {
        Code: "participant",
        Expression: "TestReport.participant.uri",
      },      {
        Code: "result",
        Expression: "TestReport.result",
      },      {
        Code: "tester",
        Expression: "TestReport.tester",
      },      {
        Code: "testscript",
        Expression: "TestReport.testScript",
      },    },    "TestScript": {      {
        Code: "_id",
        Expression: "TestScript.id",
      },      {
        Code: "_lastUpdated",
        Expression: "TestScript.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "TestScript.meta.profile",
      },      {
        Code: "_security",
        Expression: "TestScript.meta.security",
      },      {
        Code: "_source",
        Expression: "TestScript.meta.source",
      },      {
        Code: "_tag",
        Expression: "TestScript.meta.tag",
      },      {
        Code: "_id",
        Expression: "TestScript.id",
      },      {
        Code: "_lastUpdated",
        Expression: "TestScript.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "TestScript.meta.profile",
      },      {
        Code: "_security",
        Expression: "TestScript.meta.security",
      },      {
        Code: "_source",
        Expression: "TestScript.meta.source",
      },      {
        Code: "_tag",
        Expression: "TestScript.meta.tag",
      },      {
        Code: "context",
        Expression: "(TestScript.useContext.value as CodeableConcept)",
      },      {
        Code: "context-quantity",
        Expression: "",
      },      {
        Code: "context-type",
        Expression: "TestScript.useContext.code",
      },      {
        Code: "date",
        Expression: "TestScript.date",
      },      {
        Code: "description",
        Expression: "TestScript.description",
      },      {
        Code: "identifier",
        Expression: "TestScript.identifier",
      },      {
        Code: "jurisdiction",
        Expression: "TestScript.jurisdiction",
      },      {
        Code: "name",
        Expression: "TestScript.name",
      },      {
        Code: "publisher",
        Expression: "TestScript.publisher",
      },      {
        Code: "status",
        Expression: "TestScript.status",
      },      {
        Code: "testscript-capability",
        Expression: "TestScript.metadata.capability.description",
      },      {
        Code: "title",
        Expression: "TestScript.title",
      },      {
        Code: "url",
        Expression: "TestScript.url",
      },      {
        Code: "version",
        Expression: "TestScript.version",
      },      {
        Code: "context-type-quantity",
        Expression: "TestScript.useContext",
      },      {
        Code: "context-type-value",
        Expression: "TestScript.useContext",
      },    },    "VerificationResult": {      {
        Code: "_id",
        Expression: "VerificationResult.id",
      },      {
        Code: "_lastUpdated",
        Expression: "VerificationResult.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "VerificationResult.meta.profile",
      },      {
        Code: "_security",
        Expression: "VerificationResult.meta.security",
      },      {
        Code: "_source",
        Expression: "VerificationResult.meta.source",
      },      {
        Code: "_tag",
        Expression: "VerificationResult.meta.tag",
      },      {
        Code: "_id",
        Expression: "VerificationResult.id",
      },      {
        Code: "_lastUpdated",
        Expression: "VerificationResult.meta.lastUpdated",
      },      {
        Code: "_profile",
        Expression: "VerificationResult.meta.profile",
      },      {
        Code: "_security",
        Expression: "VerificationResult.meta.security",
      },      {
        Code: "_source",
        Expression: "VerificationResult.meta.source",
      },      {
        Code: "_tag",
        Expression: "VerificationResult.meta.tag",
      },      {
        Code: "target",
        Expression: "VerificationResult.target",
      },    },}
